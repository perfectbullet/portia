"use strict";
define("portia-ui/adapters/application", ["exports", "ember-data", "ember-data-url-templates"], function (e, t, n) {
    function r(e, t) {
        return e.filter(function (e) {
            return !e.source || !e.source.pointer || e.source.pointer.startsWith(t)
        }).map(function (e) {
            return e.source && e.source.pointer ? Ember.assign({}, e, {source: {pointer: e.source.pointer.slice(t.length - 1)}}) : e
        })
    }

    Object.defineProperty(e, "__esModule", {value: !0});
    var a = function () {
            function e(e, t) {
                var n = [], r = !0, a = !1, l = void 0;
                try {
                    for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
                } catch (e) {
                    a = !0, l = e
                } finally {
                    try {
                        !r && i.return && i.return()
                    } finally {
                        if (a) throw l
                    }
                }
                return n
            }

            return function (t, n) {
                if (Array.isArray(t)) return t;
                if (Symbol.iterator in Object(t)) return e(t, n);
                throw new TypeError("Invalid attempt to destructure non-iterable instance")
            }
        }(), l = Ember.inject.service, o = "https://portia.scrapinghub.com/jsonapi/extensions/deleted",
        i = "https://portia.scrapinghub.com/jsonapi/extensions/updates";
    e.default = t.default.JSONAPIAdapter.extend(n.default, {
        changes: l(),
        savingNotification: l(),
        loadingSlider: l(),
        uiState: l(),
        findRecordUrlTemplate: "{+host}/portia{+selfLink}",
        createRecordUrlTemplate: "{+host}/portia{+relatedLink}",
        updateRecordUrlTemplate: "{+host}/portia{+selfLink}",
        deleteRecordUrlTemplate: "{+host}/portia{+selfLink}",
        urlSegments: {
            selfLink: function (e, t, n) {
                var selfLink = n._internalModel._links.self;
                // console.log("selfLink -> ", selfLink);
                return selfLink;
            }, relatedLink: function (e, t, n) {
                var r = [];
                n.eachRelationship(function (e, t) {
                    r.push([e, t])
                });
                var l = !0, o = !1, i = void 0;
                try {
                    for (var c, s = r[Symbol.iterator](); !(l = (c = s.next()).done); l = !0) {
                        var u = c.value, d = a(u, 2), m = d[0];
                        if ("belongsTo" === d[1].kind) {
                            var p = n.belongsTo(m);
                            if (p) {
                                var h = p._internalModel, f = n.record.inverseFor(m);
                                if ("hasMany" === f.kind) {
                                    var b = f.name, g = h._relationships.get(b);
                                    if (g.link) {
                                        var relaLink = g.link.split("?", 1)[0];
                                        // console.log("relaLink -> ", relaLink);
                                        return relaLink;
                                    }

                                }
                            }
                        }
                    }
                } catch (e) {
                    o = !0, i = e
                } finally {
                    try {
                        !l && s.return && s.return();
                    } finally {
                        if (o) throw i
                    }
                }
            }
        },
        createRecord: function (e, t, n) {
            var r = this._requestFor({store: e, type: t, snapshot: n, requestType: "createRecord"});
            return this._makeRequest(r)
        },
        updateRecord: function (e, t, n) {
            var r = this._requestFor({store: e, type: t, snapshot: n, requestType: "updateRecord"});
            return this._makeRequest(r)
        },
        deleteRecord: function (e, t, n) {
            var r = this._requestFor({store: e, type: t, snapshot: n, requestType: "deleteRecord"});
            return this._makeRequest(r)
        },
        dataForRequest: function (e) {
            var t = e.store, n = e.type, r = e.snapshot, a = e.requestType;
            n = n || r && r.type;
            var l = t.serializerFor(n.modelName), o = {};
            switch (a) {
                case"createRecord":
                    l.serializeIntoHash(o, n, r, {includeId: !0});
                    break;
                case"updateRecord":
                    l.serializeIntoHash(o, n, r, {
                        includeId: !0,
                        partial: r.adapterOptions && r.adapterOptions.partial
                    });
                    break;
                case"deleteRecord":
                    o = void 0;
                    break;
                default:
                    o = this._super.apply(this, arguments)
            }
            if ("createRecord" === a || "updateRecord" === a || "deleteRecord" === a) {
                var c = r.adapterOptions && r.adapterOptions.coalesce;
                if (c && "main" === c.type) {
                    var s = [];
                    if (c.updates) {
                        var u = !0, d = !1, m = void 0;
                        try {
                            for (var p, h = c.updates[Symbol.iterator](); !(u = (p = h.next()).done); u = !0) {
                                var f = p.value, b = f.data;
                                s.push(b.data)
                            }
                        } catch (e) {
                            d = !0, m = e
                        } finally {
                            try {
                                !u && h.return && h.return()
                            } finally {
                                if (d) throw m
                            }
                        }
                    }
                    o = Ember.assign(o || {}, {links: {profile: [i]}, aliases: {updates: i}, meta: {updates: s}})
                }
            }
            return o
        },
        methodForRequest: function (e) {
            switch (e.requestType) {
                case"createRecord":
                    return "POST";
                case"updateRecord":
                    return "PATCH";
                case"deleteRecord":
                    return "DELETE"
            }
            return "GET"
        },
        urlForRequest: function (e) {
            var t = e.type, n = e.id, r = e.snapshot, a = e.requestType;
            return t = t || r && r.type, n = n || r && r.id, "createRecord" === a || "updateRecord" === a || "deleteRecord" === a ? this.buildURL(t.modelName, n, r, a) : this._super.apply(this, arguments)
        },
        headersForRequest: function (e) {
            // console.log("headersForRequest -> ",e);
            var t = this.get("headers") || {}, n = [], r = [o];
            return e.snapshot.adapterOptions && e.snapshot.adapterOptions.coalesce && (n.push(i), r.push(i)), n.length ? t["Content-Type"] = 'application/vnd.api+json; profile="' + n.join(" ") + '"' : t["Content-Type"] = "application/vnd.api+json", r.length ? t.Accept = 'application/vnd.api+json; profile="' + r.join(" ") + '"' : t.Accept = "application/vnd.api+json", t
        },
        _requestFor: function (e) {
            // console.log("_requestFor -> ",e);
            var t = this.methodForRequest(e), n = this.urlForRequest(e), r = this.headersForRequest(e),
                a = this.dataForRequest(e), l = {method: t, url: n, headers: r, data: a};
            // console.log("url -> ",n);
            return Ember.assign(l, {store: e.store, type: e.type, snapshot: e.snapshot, requestType: e.requestType})
        },
        _makeRequest: function (e) {
            // console.log("_makeRequest -> ",e);
            var n = this, a = e.requestType;
            if ("createRecord" === a || "updateRecord" === a || "deleteRecord" === a) {
                var l = e.method, c = e.url, s = e.data, u = e.store, d = e.type, m = e.snapshot, p = void 0,
                    h = m.adapterOptions && m.adapterOptions.coalesce;
                if (h) {
                    var f = h.type, b = h.updates;
                    if ("main" !== f) {
                        var g = Ember.RSVP.defer();
                        return b.push({type: d, snapshot: m, data: s, resolver: g}), g.promise
                    }
                    p = this.ajax(c, l, e), p.then(function (e) {
                        var r = u.serializerFor(d.modelName), a = {}, l = {}, c = !0, s = !1, m = void 0;
                        try {
                            for (var p, h = b[Symbol.iterator](); !(c = (p = h.next()).done); c = !0) {
                                var f = p.value, g = f.type, v = f.snapshot, y = g.modelName, C = v.id;
                                (a[y] || (a[y] = {}))[C] = !0
                            }
                        } catch (e) {
                            s = !0, m = e
                        } finally {
                            try {
                                !c && h.return && h.return()
                            } finally {
                                if (s) throw m
                            }
                        }
                        var x = n._getExtentionAliases(e, i);
                        if (x.length && e.meta) {
                            var E = !0, N = !1, A = void 0;
                            try {
                                for (var R, F = x[Symbol.iterator](); !(E = (R = F.next()).done); E = !0) {
                                    var w = R.value, M = !0, T = !1, j = void 0;
                                    try {
                                        for (var k, S = e.meta[w][Symbol.iterator](); !(M = (k = S.next()).done); M = !0) {
                                            var _ = k.value, B = r._normalizeResourceHelper(_), D = B.type, C = B.id;
                                            if (!a[D] || !a[D][C]) {
                                                var P = new t.default.AdapterError([{
                                                        title: "Unexpected update confirmation",
                                                        detail: "" + e
                                                    }], "JSON API updates response contained confirmations for resources that were not requested."),
                                                    O = !0, L = !1, I = void 0;
                                                try {
                                                    for (var H, U = b[Symbol.iterator](); !(O = (H = U.next()).done); O = !0) {
                                                        H.value.resolver.reject(P)
                                                    }
                                                } catch (e) {
                                                    L = !0, I = e
                                                } finally {
                                                    try {
                                                        !O && U.return && U.return()
                                                    } finally {
                                                        if (L) throw I
                                                    }
                                                }
                                                throw P
                                            }
                                            (l[D] || (l[D] = {}))[C] = _
                                        }
                                    } catch (e) {
                                        T = !0, j = e
                                    } finally {
                                        try {
                                            !M && S.return && S.return()
                                        } finally {
                                            if (T) throw j
                                        }
                                    }
                                }
                            } catch (e) {
                                N = !0, A = e
                            } finally {
                                try {
                                    !E && F.return && F.return()
                                } finally {
                                    if (N) throw A
                                }
                            }
                        }
                        if (x = n._getExtentionAliases(e, o), x.length && e.meta) {
                            var q = !0, z = !1, V = void 0;
                            try {
                                for (var $, W = x[Symbol.iterator](); !(q = ($ = W.next()).done); q = !0) {
                                    var G = $.value, J = !0, Y = !1, K = void 0;
                                    try {
                                        for (var Z, X = e.meta[G][Symbol.iterator](); !(J = (Z = X.next()).done); J = !0) {
                                            var Q = Z.value, ee = r._normalizeResourceHelper(Q), te = ee.type,
                                                ne = ee.id;
                                            if (a[te] && a[te][ne]) {
                                                (l[te] || (l[te] = {}))[ne] = Q
                                            }
                                        }
                                    } catch (e) {
                                        Y = !0, K = e
                                    } finally {
                                        try {
                                            !J && X.return && X.return()
                                        } finally {
                                            if (Y) throw K
                                        }
                                    }
                                }
                            } catch (e) {
                                z = !0, V = e
                            } finally {
                                try {
                                    !q && W.return && W.return()
                                } finally {
                                    if (z) throw V
                                }
                            }
                        }
                        if (e.included) {
                            var re = [], ae = !0, le = !1, oe = void 0;
                            try {
                                for (var ie, ce = e.included[Symbol.iterator](); !(ae = (ie = ce.next()).done); ae = !0) {
                                    var se = ie.value, ue = r._normalizeResourceHelper(se), de = ue.type, me = ue.id;
                                    l[de] ? l[de][me] && (l[de][me] = se) : re.push(se)
                                }
                            } catch (e) {
                                le = !0, oe = e
                            } finally {
                                try {
                                    !ae && ce.return && ce.return()
                                } finally {
                                    if (le) throw oe
                                }
                            }
                            e.included = re
                        }
                        var pe = !0, he = !1, fe = void 0;
                        try {
                            for (var be, ge = b[Symbol.iterator](); !(pe = (be = ge.next()).done); pe = !0) {
                                var ve = be.value, ye = ve.type, Ce = ve.snapshot, xe = ve.resolver, y = ye.modelName,
                                    Ee = Ce.id;
                                l[y] && l[y][Ee] ? xe.resolve({data: l[y][Ee]}) : xe.reject(new t.default.AdapterError([{
                                    title: "Missing update confirmation",
                                    detail: "" + e
                                }], "JSON API updates response was missing confirmation for an updated resource"))
                            }
                        } catch (e) {
                            he = !0, fe = e
                        } finally {
                            try {
                                !pe && ge.return && ge.return()
                            } finally {
                                if (he) throw fe
                            }
                        }
                        return e
                    }, function (e) {
                        for (var t = 0; t < b.length; t++) {
                            var n = b[t].resolver, a = "/meta/updates/" + t + "/",
                                l = new e.constructor(r(e.errors, a), e.message);
                            n.reject(l)
                        }
                    })
                } else p = this.ajax(c, l, e);
                return p.then(function (e) {
                    var t = n._getExtentionAliases(e, o);
                    if (t.length && e.meta) {
                        var r = u.serializerFor(d.modelName), a = !0, l = !1, i = void 0;
                        try {
                            for (var c, s = t[Symbol.iterator](); !(a = (c = s.next()).done); a = !0) {
                                var m = c.value, p = !0, h = !1, f = void 0;
                                try {
                                    for (var b, g = e.meta[m][Symbol.iterator](); !(p = (b = g.next()).done); p = !0) {
                                        var v = b.value, y = r._normalizeResourceHelper(v);
                                        if (y) {
                                            var C = u.peekRecord(y.type, y.id);
                                            C && (C.get("isSaving") ? C.one("didCommit", C.unloadRecord) : C.unloadRecord())
                                        }
                                    }
                                } catch (e) {
                                    h = !0, f = e
                                } finally {
                                    try {
                                        !p && g.return && g.return()
                                    } finally {
                                        if (h) throw f
                                    }
                                }
                            }
                        } catch (e) {
                            l = !0, i = e
                        } finally {
                            try {
                                !a && s.return && s.return()
                            } finally {
                                if (l) throw i
                            }
                        }
                    }
                    return e
                }), this.get("savingNotification").start(), this.get("loadingSlider").startLoading(), p.finally(function () {
                    n.get("uiState.models.project") && n.set("changes.hasChanges", !0), n.get("savingNotification").end(), n.get("loadingSlider").endLoading()
                }), p
            }
            return this.ajax(e.url, e.method, e)
        },
        _getExtentionAliases: function (e, t) {
            // console.log("_getExtentionAliases -> ",e);
            var n = [];
            if (e && e.links && e.links.profile && e.links.profile.includes(t)) {
                var r = !0, a = !1, l = void 0;
                try {
                    for (var o, i = Object.keys(e.aliases)[Symbol.iterator](); !(r = (o = i.next()).done); r = !0) {
                        var c = o.value;
                        e.aliases[c] === t && n.push(c)
                    }
                } catch (e) {
                    a = !0, l = e
                } finally {
                    try {
                        !r && i.return && i.return()
                    } finally {
                        if (a) throw l
                    }
                }
            }
            return n
        },
        ajaxOptions: function (e, t) {
            // console.log("ajaxOptions -> ",e);
            var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}, r = n.headers,
                a = Ember.assign({}, n);
            delete a.method, delete a.url, delete a.headers;
            if(e && e.indexOf("/portia") == -1 ){
                e = "/portia" + e;
            }
            // console.log("e.indexOf(\"/portia\") -> ",e.indexOf("/portia"));
            // console.log("ajaxOptions -> ",e);
            var l = this._super(e, t, a);
            return r && (l.contentType = r["Content-Type"], delete r["Content-Type"], l.beforeSend = function (e) {
                Object.keys(r).forEach(function (t) {
                    return e.setRequestHeader(t, r[t])
                })
            }), l
        }
    })
}), define("portia-ui/adapters/project", ["exports", "portia-ui/adapters/application"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.extend({
        urlTemplate: "{+host}/portia/api/projects{/id}",
        findRecordUrlTemplate: "{+host}/portia/api/projects{/id}",
        createRecordUrlTemplate: "{+host}/portia/api/projects",
        shouldReloadRecord: function () {
            return !0
        }
    })
}), define("portia-ui/app", ["exports", "portia-ui/resolver", "ember-load-initializers", "portia-ui/config/environment"], function (e, t, n, r) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var a = void 0;
    Ember.MODEL_FACTORY_INJECTIONS = !0, a = Ember.Application.extend({
        modulePrefix: r.default.modulePrefix,
        podModulePrefix: r.default.podModulePrefix,
        Resolver: t.default,
        customEvents: {transitionend: "transitionEnd"}
    }), (0, n.default)(a, r.default.modulePrefix), e.default = a
}), define("portia-ui/components/add-start-url-button", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.computed, n = Ember.inject.service;
    e.default = Ember.Component.extend({
        tagName: "",
        browser: n(),
        dispatcher: n(),
        url: t.readOnly("browser.url"),
        emptyUrl: t.not("url"),
        disableStartUrl: t.or("emptyUrl", "browser.invalidUrl"),
        newStartUrl: t("url", "spider.startUrls.[]", function () {
            var e = this.get("url"), t = this.get("spider.startUrls").mapBy("url");
            return e && !t.includes(e)
        }),
        actions: {
            toggleStartUrl: function () {
                this.get("emptyUrl") || this._toggleStartUrl()
            }
        },
        _toggleStartUrl: function () {
            this.get("newStartUrl") ? this.get("dispatcher").addStartUrl(this.get("spider"), this.get("url")) : this.get("dispatcher").removeStartUrl(this.get("spider"), this.get("_startUrl"))
        },
        _startUrl: t("spider.startUrls.[]", "url", function () {
            return this.get("spider.startUrls").findBy("url", this.get("url"))
        })
    })
}), define("portia-ui/components/animation-container", ["exports", "portia-ui/utils/attrs"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        positionMonitor: Ember.inject.service(),
        classNames: ["animation-container"],
        classNameBindings: ["fade", "hidden"],
        fade: !1,
        hidden: !1,
        setHeight: !0,
        setWidth: !0,
        didReceiveAttrs: function (e) {
            var n = this, r = e.oldAttrs, a = e.newAttrs;
            (0, t.attrValue)(a.hide) ? r ? (0, t.attrValue)(r.hide) || (0 == +this.$().css("opacity") ? this.setProperties({
                fade: !0,
                hidden: !0
            }) : this.set("fade", !0)) : this.setProperties({
                fade: !0,
                hidden: !0
            }) : r ? (0, t.attrValue)(r.hide) && (this.set("hidden", !1), Ember.run.later(this, this.set, "fade", !1, 50)) : (this.setProperties({
                fade: !0,
                hidden: !0
            }), Ember.run.later(function () {
                n.set("hidden", !1), Ember.run.later(n, n.set, "fade", !1, 50)
            }, 50))
        },
        didInsertElement: function () {
            var e = this, t = this.get("positionMonitor");
            Ember.run.schedule("afterRender", function () {
                e.content = e.element.children[0], t.registerElement(e.element, e, e.readPosition, e.updatePosition), t.registerElement(e.content, e, null, e.updateSize), Ember.run.scheduleOnce("afterRender", t, t.update)
            })
        },
        willDestroyElement: function () {
            var e = this.get("positionMonitor");
            e.unRegisterElement(this.element, this, this.readPosition, this.updatePosition), e.unRegisterElement(this.content, this, null, this.updateSize)
        },
        readPosition: function (e, t, n) {
            this.containerPosition = Ember.$(n).position()
        },
        updatePosition: function (e, t) {
            var n = this.content, r = "";
            if (t.top || t.bottom || t.left || t.right) {
                r = "transform: translate(" + Math.round(this.containerPosition.left) + "px, " + Math.round(this.containerPosition.top) + "px);"
            }
            n.setAttribute("style", r)
        },
        updateSize: function (e, t) {
            var n = Math.round(t.width), r = Math.round(t.height), a = "";
            this.get("setWidth") && (a += "width: " + n + "px;"), this.get("setHeight") && (a += "height: " + r + "px;"), this.element.setAttribute("style", a)
        },
        transitionEnd: function (e) {
            "opacity" === e.originalEvent.propertyName && e.originalEvent.target === this.element && this.get("fade") && this.set("hidden", !0)
        }
    })
}), define("portia-ui/components/annotation-options", ["exports", "portia-ui/components/inspector-panel"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        uiState: Ember.inject.service(),
        dispatcher: Ember.inject.service(),
        tagName: "",
        annotation: null,
        invalidSelector: !1,
        selectionModeOptions: [{value: "auto", label: "Automatic"}, {
            value: "css",
            label: "CSS selector"
        }, {value: "xpath", label: "XPath selector"}],
        attribute: Ember.computed("annotation.attribute", "attributes.[]", {
            get: function () {
                return this.get("attributes").findBy("attribute", this.get("annotation.attribute"))
            }, set: function (e, t) {
                return this.set("annotation.attribute", t.attribute), t
            }
        }),
        text_content: Ember.computed("uiState.viewPort.selectedElement", function () {
            return (0, t.hasContentAttribute)(this.get("uiState.viewPort.selectedElement")) ? "text-content" : "content"
        }),
        attributes: Ember.computed("uiState.viewPort.selectedElement", function () {
            return (0, t.getAttributeList)(this.get("uiState.viewPort.selectedElement"))
        }),
        selectionMode: Ember.computed("annotation.selectionMode", {
            get: function () {
                return this.selectionModeOptions.findBy("value", this.get("annotation.selectionMode"))
            }, set: function (e, t) {
                return this.set("annotation.selectionMode", t.value), t
            }
        }),
        cssSelector: Ember.computed({
            get: function () {
                return this.get("annotation.selector")
            }, set: function (e, t) {
                if (this.get("invalidSelector")) return this.get("cssSelector");
                var n = this.get("annotation");
                return this.setAnnotationSelector(n, t), t
            }
        }),
        editedCssSelector: Ember.computed({
            get: function () {
                return null
            }, set: function (e, t) {
                var n = this.get("annotation");
                if (null === t) this.set("invalidSelector", !1), this.setAnnotationSelector(n, this.get("cssSelector")); else {
                    var r = !1;
                    try {
                        document.querySelectorAll(t)
                    } catch (e) {
                        r = !0
                    }
                    this.set("invalidSelector", r), r || this.setAnnotationSelector(n, t)
                }
                return t
            }
        }),
        updateCssSelector: Ember.observer("annotation.selector", function () {
            null === this.get("editedCssSelector") && this.set("cssSelector", this.get("annotation.selector"))
        }),
        setAnnotationSelector: function (e, t) {
            var n = this;
            return e.get("parent.sample").then(function (r) {
                return e.setSelector(t), n.updateSelector(r)
            })
        },
        updateSelector: function (e) {
            var t = this;
            return this._updateSelectorPromise ? this._updateSelectorPromise.pending || (this._updateSelectorPromise.pending = !0, this._updateSelectorPromise.then(function () {
                return t._updateSelectorPromise = t._updateSelector(e)
            })) : this._updateSelectorPromise = this._updateSelector(e), this._updateSelectorPromise
        },
        _updateSelector: function (e) {
            var t = this, n = this.get("dispatcher"), r = n.updateSampleSelectors(e).then(function () {
                t._updateSelectorPromise === r && delete t._updateSelectorPromise
            });
            return r
        },
        actions: {
            save: function () {
                this.set("annotation.text_content", this.get("text_content"));
                var e = this.get("annotation").save();
                return this._updateSelectorPromise ? this._updateSelectorPromise.then(function () {
                    return e
                }) : e
            }
        }
    })
}), define("portia-ui/components/app-version", ["exports", "ember-cli-app-version/components/app-version", "portia-ui/config/environment"], function (e, t, n) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var r = n.default.APP.name, a = n.default.APP.version;
    e.default = t.default.extend({version: a, name: r})
}), define("portia-ui/components/browser-iframe", ["exports", "ember-local-storage", "portia-ui/utils/utils", "portia-ui/utils/interaction-event", "portia-ui/utils/tree-mirror-delegate", "portia-ui/services/browser"], function (e, t, n, r, a, l) {
    function o(e) {
        return Array.isArray(e) ? e : Array.from(e)
    }

    function i(e) {
        var t = 5381, n = !0, r = !1, a = void 0;
        try {
            for (var l, o = e[Symbol.iterator](); !(n = (l = o.next()).done); n = !0) {
                t = (t << 5) + t + l.value.charCodeAt(0)
            }
        } catch (e) {
            r = !0, a = e
        } finally {
            try {
                !n && o.return && o.return()
            } finally {
                if (r) throw a
            }
        }
        return t < 0 && (t += 4294967296), t.toString(16)
    }

    Object.defineProperty(e, "__esModule", {value: !0});
    var c = function () {
        function e(e, t) {
            var n = [], r = !0, a = !1, l = void 0;
            try {
                for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
            } catch (e) {
                a = !0, l = e
            } finally {
                try {
                    !r && i.return && i.return()
                } finally {
                    if (a) throw l
                }
            }
            return n
        }

        return function (t, n) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return e(t, n);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }(), s = Ember.Component.extend({
        browser: Ember.inject.service(),
        overlays: Ember.inject.service(),
        webSocket: Ember.inject.service(),
        uiState: Ember.inject.service(),
        cookiesStore: (0, t.storageFor)("cookies"),
        pageLoadStore: (0, t.storageFor)("page-loads"),
        extractedItems: Ember.inject.service(),
        tagName: "iframe",
        classNames: ["browser-iframe"],
        classNameBindings: ["overlays.hasOverlays:has-overlays"],
        splashUrl: null,
        disabled: Ember.computed.alias("browser.disabled"),
        document: Ember.computed.alias("browser.document"),
        loading: Ember.computed.alias("browser.loading"),
        url: Ember.computed.readOnly("browser.url"),
        baseurl: Ember.computed.readOnly("browser.baseurl"),
        spider: Ember.computed.readOnly("uiState.models.spider.id"),
        project: Ember.computed.readOnly("uiState.models.project.id"),
        init: function () {
            this._super(), this.loadCookies(), this.frameEventListeners = []
        },
        click: function () {
            if (this.attrs.clickHandler) {
                var e;
                (e = Ember.run).next.apply(e, [this, this.attrs.clickHandler].concat(Array.prototype.slice.call(arguments)))
            }
        },
        willInsertElement: function () {
            if (s.instances) throw new Error("The can be only one browser-iframe instance!");
            s.instances++;
            var e = this.get("webSocket");
            e.connect(), e.addCommand("loadStarted", this, this.msgLoadStarted), e.addCommand("loadFinished", this, this.msgLoadFinished), e.addCommand("metadata", this, this.msgMetadata), e.addCommand("load", this, this.msgLoad), e.addCommand("cookies", this, this.msgCookies), e.addCommand("mutation", this, this.msgMutation), e.addCommand("save_html", this, this.noop)
        },
        didInsertElement: function () {
            var e = this;
            Ember.run.schedule("afterRender", function () {
                e.setProperties({disabled: !1, document: null}), e.loadUrl()
            })
        },
        willDestroyElement: function () {
            var e = this.get("webSocket");
            e.removeCommand("loadStarted", this, this.msgLoadStarted), e.removeCommand("loadFinished", this, this.msgLoadFinished), e.removeCommand("metadata", this, this.msgMetadata), e.removeCommand("load", this, this.msgLoad), e.removeCommand("cookies", this, this.msgCookies), e.removeCommand("mutation", this, this.msgMutation), e.removeCommand("save_html", this, this.noop), e.close(), this.setProperties({
                disabled: !0,
                document: null
            }), s.instances--
        },
        documentLoaded: function () {
            this.set("document", this.element.contentDocument)
        },
        loadUrl: Ember.observer("url", "baseurl", "webSocket.closed", function () {
            Ember.run.scheduleOnce("sync", this, this._loadUrl)
        }),
        _loadUrl: function () {
            var e = this.get("url"), t = this.get("baseurl");
            if (e && e.includes("://") && (0, n.cleanUrl)(e)) {
                if (this.get("webSocket.closed")) return this.splashUrl = null, void (this.get("lastLoadPromise") && (this.set("lastLoadData", null), Ember.run.cancel(this.get("lastLoadPromise")), this.failedLoad(navigator.onLine ? "server_disconnect" : "user_disconnect")));
                if (this.splashUrl !== e) {
                    var r = this.get("pageLoadStore." + i(e));
                    if (r && (new Date - new Date(r.dt)) / 36e5 < 1) {
                        var a = r.failed;
                        if (a > 3 && window.navigator.onLine) throw this.set("webSocket.reconnectComponent", "browser-url-blocked"), this.set("loading", !1), new Error("URL Blocked: " + e + " in " + this.get("uiState.project.id"), "websocket-browser-load");
                        if (a > 2 && !this.get("webSocket.reconnectComponent")) throw this.set("webSocket.reconnectComponent", "browser-url-failing"), this.set("loading", !1), new Error("URL Failing: " + e + " in " + this.get("uiState.project.id"), "websocket-browser-load")
                    }
                    this.set("webSocket.reconnectComponent", null), this.visit(e, t)
                }
            }
        },
        visit: function (e, t) {
            this.set("loading", !0), this.get("webSocket").send({
                _meta: {
                    viewport: this.iframeSize(),
                    user_agent: navigator.userAgent,
                    cookies: this.loadCookies(),
                    project: this.get("project"),
                    spider: this.get("spider")
                }, _command: "load", url: e, baseurl: t
            })
        },
        msgLoadStarted: function (e) {
            this.set("loading", !0), e.id && (this.set("lastLoadData", {
                id: e.id,
                url: e.url
            }), this.set("lastLoadPromise", Ember.run.later(this, this.failedLoad, 6e4)))
        },
        failedLoad: function (e) {
            var t = this.get("url");
            if (t) {
                var n = i(t), r = new Date, a = this.get("pageLoadStore." + n);
                a && (r - new Date(a.dt)) / 36e5 < 1 ? a.failed = a.failed + 1 : a = {
                    failed: 0,
                    reason: []
                }, a.dt = r.toISOString(), a.url = t, a.reason.push(e || "slow"), this.set("pageLoadStore." + n, a)
            }
        },
        msgLoadFinished: function (e) {
            Ember.run.cancel(this.get("lastLoadPromise")), this.set("lastLoadData", null);
            var t = i(this.get("url"));
            this.get("pageLoadStore." + t) && this.set("pageLoadStore." + t, null), this.msgMetadata(e)
        },
        msgLoad: function (e) {
            this.msgMetadata(e)
        },
        msgMetadata: function (e) {
            e.loaded && this.set("loading", !1), e.url && (this.splashUrl = e.url, this.set("browser.url", e.url)), e.error && this.handleMetadataError()
        },
        handleMetadataError: function () {
            this.set("loading", !1), this.set("splashUrl", null), this.get("extractedItems").failExtraction("Failed Loading Page"), this.get("browser").invalidateUrl(), this.get("webSocket").send({
                _meta: {
                    spider: this.get("spider"),
                    project: this.get("project")
                }, _command: "interact"
            })
        },
        msgMutation: function (e) {
            var t = this, n = o(e._data), r = n[0], l = n.slice(1);
            "initialize" === r && (this.iframePromise = this.clearIframe().then(function () {
                var e = t.element.contentDocument;
                t.treeMirror = new TreeMirror(e, (0, a.default)(t))
            })), this.iframePromise.then(function () {
                var e = t.get("browser");
                t.treeMirror.delegate.cssEnabled = e.get("cssEnabled"), t.treeMirror[r].apply(t.treeMirror, l), e.trigger("contentChanged")
            })
        },
        cookieId: Ember.computed("spider", "project", function () {
            if (this.get("project") && this.get("spider")) return ("cookies:" + this.get("project") + "/" + this.get("spider")).replace(/\./g, "_")
        }),
        msgCookies: function (e) {
            var t = e.cookies, n = this.get("cookieId");
            t && t.length && this.set("cookiesStore." + n, t)
        },
        noop: function () {
            return null
        },
        loadCookies: function () {
            var e = this.get("cookieId");
            if (e) {
                var t = this.get("cookiesStore." + e);
                if (t) return t
            }
            return {}
        },
        unbindEventHandlers: function () {
            $(this.element.contentDocument).off(".portia-iframe"), this.frameEventListeners.forEach(function (e) {
                var t = c(e, 4), n = t[0], r = t[1], a = t[2], l = t[3];
                n.removeEventListener(r, a, l)
            }), this.frameEventListeners = []
        },
        addFrameEventListener: function (e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], r = this.element.contentDocument;
            r.addEventListener(e, t, n), this.frameEventListeners.push([r, e, t, n])
        },
        bindEventHandlers: function () {
            var e = this;
            this.unbindEventHandlers();
            var t = $(this.element.contentDocument);
            t.on(["keyup", "keydown", "keypress", "input", "mousedown", "mouseup"].map(function (e) {
                return e + ".portia.portia-iframe"
            }).join(" "), function (t) {
                e.get("browser.mode") === l.NAVIGATION_MODE && e.postEvent(t)
            }), t.on("click.portia.portia-iframe", function (t) {
                if (e.get("browser.mode") !== l.NAVIGATION_MODE) return e.click(), !1;
                e.clickHandlerBrowse(t)
            }), this.addFrameEventListener("focus", this.postEvent.bind(this), !0), this.addFrameEventListener("blur", this.postEvent.bind(this), !0), this.addFrameEventListener("change", this.postEvent.bind(this), !0), this.addFrameEventListener("scroll", function (t) {
                return Ember.run.throttle(e, e.postEvent, t, 200)
            }, !0)
        },
        clickHandlerBrowse: function (e) {
            e.which <= 1 && !e.ctrlKey && ("INPUT" !== e.target.tagName && e.preventDefault(), this.postEvent(e))
        },
        postEvent: function (e) {
            this.get("webSocket").send({
                _meta: {spider: this.get("spider"), project: this.get("project")},
                _command: "interact",
                interaction: (0, r.default)(e)
            })
        },
        clearIframe: function () {
            var e = new Ember.RSVP.defer, t = this.element, r = (0, n.shortGuid)(), a = this;
            t.setAttribute("src", "/static/empty-frame.html?" + r), t.removeAttribute("srcdoc");
            var l = $(window).bind("message", function t(n) {
                n.originalEvent.data.frameReady === r && (a.bindEventHandlers(), Ember.run(a, a.documentLoaded), l.unbind("message", t), e.resolve())
            });
            return e.promise
        },
        iframeSize: function () {
            var e = Ember.$(this.element), t = Math.max(e.innerHeight(), 10);
            return e ? e.innerWidth() + "x" + t : null
        }
    });
    s.reopenClass({instances: 0}), e.default = s
}), define("portia-ui/components/browser-url-blocked", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({tagName: "span"})
}), define("portia-ui/components/browser-url-failing", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.inject.service;
    e.default = Ember.Component.extend({
        tagName: "span", browser: t(), actions: {
            reloadPage: function () {
                this.get("browser").reload()
            }
        }
    })
}), define("portia-ui/components/browser-view-port", ["exports", "portia-ui/components/inspector-panel"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        browser: Ember.inject.service(),
        selectorMatcher: Ember.inject.service(),
        uiState: Ember.inject.service(),
        webSocket: Ember.inject.service(),
        classNames: ["browser-view-port", "panel", "panel-default"],
        hoverSelector: ":hover:not(html):not(body):not(head)",
        willInsertElement: function () {
            this.get("selectorMatcher").register(this.hoverSelector, this, this.updateHoveredElement)
        },
        willDestroyElement: function () {
            this.get("selectorMatcher").unRegister(this.hoverSelector, this, this.updateHoveredElement)
        },
        updateHoveredElement: function (e) {
            var n = e.get("lastObject");
            this.set("uiState.viewPort.hoveredElement", (0, t.getAttributeList)(n).length ? n : null)
        },
        actions: {
            viewPortClick: function () {
                if (this.attrs.clickHandler) {
                    var e;
                    (e = this.attrs).clickHandler.apply(e, arguments)
                }
            }, reconnectWebsocket: function () {
                this.get("webSocket").connect()
            }
        }
    })
}), define("portia-ui/components/buffered-input", ["exports", "portia-ui/utils/promises"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "",
        autofocus: !1,
        autoSelect: !1,
        focused: !1,
        spellcheck: !0,
        type: "text",
        value: null,
        viewValue: null,
        didInsertElement: function () {
            var e = this;
            this.get("focused") && (Ember.run.schedule("afterRender", function () {
                e.send("startEditing")
            }), Ember.run.next(this, this.setInputFocus)), Ember.$("#" + this.get("inputId")).keypress(function (e) {
                return 13 !== e.which
            })
        },
        inputId: Ember.computed("elementId", function () {
            return this.get("elementId") + "-input"
        }),
        displayedValue: Ember.computed("value", "viewValue", "focused", {
            get: function () {
                return this.get("focused") ? this.get("viewValue") : this.get("value")
            }, set: function (e, t, n) {
                return this.get("focused") ? (this.set("viewValue", t), t) : n
            }
        }),
        updateInputFocus: Ember.observer("focused", function () {
            Ember.run.scheduleOnce("afterRender", this, this.setInputFocus)
        }),
        setInputFocus: function () {
            var e = Ember.$("#" + this.get("inputId")).get(0);
            e && this.get("focused") ? (e.focus(), this.get("autoSelect") && e.select()) : this.get("isDestroying") || e.blur()
        },
        validateName: function (e) {
            return "function" != typeof this.attrs.validate || this.attrs.validate(e)
        },
        actions: {
            startEditing: function () {
                this.setProperties({focused: !0, viewValue: this.get("value")})
            }, cancelEditing: function () {
                this.setProperties({focused: !1, viewValue: null})
            }, endEditing: function (e) {
                var n = this, r = this.get("viewValue");
                (0, t.ensurePromise)(this.validateName(r)).then(function (t) {
                    t ? (n.setProperties({
                        focused: !1,
                        value: r,
                        viewValue: null
                    }), "enter" === e && n.attrs.onEnterPress && n.attrs.onEnterPress.call && n.attrs.onEnterPress(r), n.attrs.onChange && n.attrs.onChange.call && n.attrs.onChange(r)) : Ember.run.next(n, n.setInputFocus)
                })
            }
        }
    })
}), define("portia-ui/components/colored-badge", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "",
        color: null,
        value: 0,
        badgeStyle: Ember.computed("color.main", function () {
            var e = this.get("color.main");
            return Ember.String.htmlSafe(e ? "background-color: " + e + ";" : "")
        })
    })
}), define("portia-ui/components/colored-span", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.computed;
    e.default = Ember.Component.extend({
        tagName: "span",
        attributeBindings: ["colorStyle:style"],
        colorStyle: t("color.main", function () {
            var e = this.get("color.main");
            return Ember.String.htmlSafe(e ? "color: " + e + ";" : "")
        })
    })
}), define("portia-ui/components/combo-box", ["exports", "portia-ui/components/select-box"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.extend({
        autoSelect: !1,
        inputClass: null,
        spellcheck: !0,
        query: Ember.computed("open", "viewValue", "valueAttribute", {
            get: function () {
                return this.getValueAttribute(this.get("viewValue"))
            }, set: function (e, t) {
                return Ember.run.scheduleOnce("afterRender", this, this.updateViewValue), t
            }
        }),
        setInputFocus: function () {
            var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                t = Ember.$("#" + this.get("inputId")).get(0);
            t && this.get("open") ? (t.focus(), !e && this.get("autoSelect") && t.select()) : this.get("isDestroying") || t.blur()
        },
        getValueAttribute: function (e) {
            var t = this.get("valueAttribute");
            return e && t && (e = e.get ? e.get(t) : e[t]), e
        },
        updateViewValue: function () {
            var e = this, t = this.get("query"), n = [];
            this.trigger("getMenuItems", n), this.orderItemsForSearch && (n = this.orderItemsForSearch(n));
            var r = this.getValueAttribute(this.get("viewValue"));
            if (r !== t) {
                var a = n.find(function (n) {
                    return e.getValueAttribute(n.get("value")) === t
                });
                a || r.startsWith(t) || (a = n.find(function (n) {
                    return e.getValueAttribute(n.get("value")).startsWith(t)
                })), a && this.set("viewValue", a.get("value"))
            }
        },
        actions: {
            restoreFocus: function () {
                this.get("open") && Ember.run.next(this, this.setInputFocus, !0)
            }
        }
    })
}), define("portia-ui/components/create-project-button", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.computed, n = Ember.inject.service;
    e.default = Ember.Component.extend({
        dispatcher: n(),
        capabilities: n(),
        tagName: "",
        canCreateProjects: t.readOnly("capabilities.capabilities.create_projects"),
        projectName: null,
        actions: {
            addProject: function () {
                this.get("dispatcher").addProject(this.get("projectName"), !0)
            }
        }
    })
}), define("portia-ui/components/create-spider-button", ["exports", "portia-ui/services/dispatcher"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        browser: Ember.inject.service(),
        dispatcher: Ember.inject.service(),
        tagName: "",
        project: null,
        canAddSpider: (0, t.computedCanAddSpider)(),
        actions: {
            addSpider: function () {
                this.get("dispatcher").addSpider(this.get("project"), !0)
            }
        }
    })
}), define("portia-ui/components/data-structure-annotations", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        dispatcher: Ember.inject.service(),
        uiState: Ember.inject.service(),
        tagName: "",
        item: null,
        sample: null,
        annotationColors: [],
        actions: {
            enterAnnotation: function (e) {
                this.set("uiState.viewPort.hoveredModels", [e])
            }, leaveAnnotation: function () {
                this.set("uiState.viewPort.hoveredModels", [])
            }, enterItem: function (e) {
                this.set("uiState.viewPort.hoveredModels", e.get("orderedAnnotations"))
            }, leaveItem: function () {
                this.set("uiState.viewPort.hoveredModels", [])
            }, removeAnnotation: function (e) {
                this.get("dispatcher").removeAnnotation(e)
            }, removeItem: function (e) {
                this.get("dispatcher").removeItem(e)
            }, saveItem: function (e) {
                e.save()
            }
        }
    })
}), define("portia-ui/components/data-structure-listing", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        dispatcher: Ember.inject.service(),
        tagName: "",
        annotationColors: [],
        actions: {
            addItem: function (e) {
                this.get("dispatcher").addItem(e, !0)
            }, removeItem: function (e) {
                this.get("dispatcher").removeItem(e)
            }
        }
    })
}), define("portia-ui/components/dropdown-delete", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.computed;
    e.default = Ember.Component.extend({
        tagName: "li",
        classNames: ["dropdown-delete"],
        classNameBindings: ["isConfirmed"],
        isConfirmed: !1,
        notConfirmed: t.not("isConfirmed"),
        actions: {
            onDelete: function () {
                this.get("notConfirmed") ? this.set("isConfirmed", !0) : this.get("onDelete")()
            }
        }
    })
}), define("portia-ui/components/dropdown-divider", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {
        value: !0
    }), e.default = Ember.Component.extend({
        tagName: "li",
        classNames: ["divider"],
        attributeBindings: ["role"],
        role: "separator"
    })
}), define("portia-ui/components/dropdown-header", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "li",
        classNames: ["dropdown-header"]
    })
}), define("portia-ui/components/dropdown-item", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "li",
        classNames: ["dropdown-item"],
        classNameBindings: ["active", "focused", "disabled"],
        disabled: !1,
        menu: null,
        value: null,
        active: Ember.computed("menu.activeItem", function () {
            return this.get("menu.activeItem") === this
        }),
        focused: Ember.computed("menu.focusedItem", function () {
            return this.get("menu.focusedItem") === this
        }),
        didInsertElement: function () {
            var e = this.get("menu");
            e && e.registerItem(this)
        },
        willDestroyElement: function () {
            var e = this.get("menu");
            e && e.unRegisterItem(this)
        },
        actions: {
            performAction: function (e) {
                this.attrs.action && !this.get("disabled") && this.attrs.action(e)
            }
        }
    })
}), define("portia-ui/components/dropdown-menu", ["exports"], function (e) {
    function t(e) {
        if (Array.isArray(e)) {
            for (var t = 0, n = Array(e.length); t < e.length; t++) n[t] = e[t];
            return n
        }
        return Array.from(e)
    }

    function n(e) {
        var t = "_" + e + "ItemCache";
        return Ember.computed(e, "items", {
            get: function () {
                var n = this[t], r = this.get(e), a = this.get("items");
                if (!n || !a.includes(n) || n.get("value") !== r) {
                    this.orderItemsForSearch && (a = this.orderItemsForSearch(a));
                    var l = this.valuesEqual || Ember.isEqual;
                    this[t] = n = a.find(function (e) {
                        return l(e.get("value"), r)
                    })
                }
                return n
            }, set: function (n, r) {
                return this[t] = r, this.set(e, r.get("value")), r
            }
        })
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "ul",
        attributeBindings: ["tabindex"],
        classNames: ["dropdown-menu"],
        active: null,
        focused: null,
        keyNavigate: "active",
        tabindex: -1,
        items: Ember.computed(function () {
            if (!this.element) return [];
            var e = [], t = !0, n = !1, r = void 0;
            try {
                for (var a, l = this.element.children[Symbol.iterator](); !(t = (a = l.next()).done); t = !0) {
                    var o = a.value, i = this.itemsMap.get(o.id);
                    i && e.push(i)
                }
            } catch (e) {
                n = !0, r = e
            } finally {
                try {
                    !t && l.return && l.return()
                } finally {
                    if (n) throw r
                }
            }
            return e
        }).volatile(),
        activeItem: n("active"),
        focusedItem: n("focused"),
        init: function () {
            var e = this;
            this._super(), this.itemsMap = new Map, this.getWithDefault("events", this).on("menuKeyDown", this, this.keyDown).on("getMenuItems", function (n) {
                n.push.apply(n, t(e.get("items")))
            })
        },
        next: function (e) {
            e = this.validateType(e);
            var t = this.get("items"), n = this.get(e + "Item"), r = t.indexOf(n), a = r;
            do {
                ~a ? a++ : a = 0, a = (a + t.length) % t.length, n = t[a]
            } while (n.get("disabled") && a !== r);
            a !== r && this.set(e + "Item", n)
        },
        previous: function (e) {
            e = this.validateType(e);
            var t = this.get("items"), n = this.get(e + "Item"), r = t.indexOf(n), a = r;
            do {
                ~a ? a-- : a = -1, a = (a + t.length) % t.length, n = t[a]
            } while (n.get("disabled") && a !== r);
            a !== r && this.set(e + "Item", n)
        },
        triggerAction: function (e) {
            e = this.validateType(e);
            var t = this.get(e + "Item");
            return t && t.send("performAction"), !!t
        },
        validateType: function (e, t) {
            return t || (t = this.validateType(this.get("keyNavigate"), "active")), "active" === e || "focused" === e ? e : t
        },
        focusIn: function () {
            if (this.attrs.onFocusIn) {
                var e;
                (e = this.attrs).onFocusIn.apply(e, arguments)
            }
        },
        focusOut: function () {
            if (this.attrs.onFocusOut) {
                var e;
                (e = this.attrs).onFocusOut.apply(e, arguments)
            }
        },
        keyDown: function () {
            this.send.apply(this, ["keyDown"].concat(Array.prototype.slice.call(arguments)))
        },
        registerItem: function (e) {
            this.itemsMap.set(e.get("elementId"), e), Ember.run.scheduleOnce("afterRender", this, this.updateItems)
        },
        unRegisterItem: function (e) {
            this.itemsMap.delete(e.get("elementId")), Ember.run.scheduleOnce("afterRender", this, this.updateItems)
        },
        updateItems: function () {
            this.get("isDestroying") || this.notifyPropertyChange("items")
        },
        orderItemsForSearch: function (e) {
            return e
        },
        valuesEqual: function (e, t) {
            return Ember.isEqual(e, t)
        },
        actions: {
            keyDown: function (e) {
                var t = this.get("keyNavigate");
                switch (e.keyCode) {
                    case 13:
                        if (!this.triggerAction(t)) return;
                        break;
                    case 38:
                        this.previous(t);
                        break;
                    case 40:
                        this.next(t);
                        break;
                    default:
                        return
                }
                e.preventDefault(), e.stopPropagation()
            }
        }
    })
}), define("portia-ui/components/dropdown-widget", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        positionMonitor: Ember.inject.service(),
        classNames: ["dropdown"],
        classNameBindings: ["open"],
        active: null,
        events: null,
        focused: null,
        focusMenu: !1,
        keyNavigate: "active",
        menuAlign: "left",
        menuClass: null,
        menuContainer: null,
        open: !1,
        isDisabled: !1,
        alignRight: Ember.computed.equal("menuAlign", "right"),
        menuClasses: Ember.computed("menuClass", "menuContainer", "open", "alignRight", function () {
            var e = [this.get("menuClass")];
            return this.get("menuContainer") && (e.push("dropdown-menu-floating"), this.get("open") && e.push("open")), this.get("alignRight") && e.push("pull-right"), e.join(" ")
        }),
        init: function () {
            this._super(), this.get("events") || this.set("events", this), this.$menu = null, this.elementFocused = !1, this.menuWidth = null, this.menuHeight = null, this.windowHeight = null
        },
        didInsertElement: function () {
            var e = this, t = this.get("menuContainer");
            if (t) {
                var n = this.get("positionMonitor"), r = this.$menu = this.$(".dropdown-menu");
                Ember.run.schedule("afterRender", function () {
                    Ember.$(t).append(r), n.registerElement(e.element, e, e.updateMenuSize, e.updatePosition), Ember.run.scheduleOnce("afterRender", n, n.update)
                })
            }
        },
        willDestroyElement: function () {
            var e = this, t = this.$menu;
            if (t) {
                var n = this.element;
                Ember.run.schedule("render", function () {
                    e.get("positionMonitor").unRegisterElement(n, e, e.updateMenuSize, e.updatePosition), t.remove()
                })
            }
        },
        focusIn: function () {
            this.send.apply(this, ["focusIn"].concat(Array.prototype.slice.call(arguments)))
        },
        focusOut: function () {
            this.send.apply(this, ["focusOut"].concat(Array.prototype.slice.call(arguments)))
        },
        keyDown: function () {
            this.send.apply(this, ["keyDown"].concat(Array.prototype.slice.call(arguments)))
        },
        updateMenuSize: function () {
            var e = this.$menu;
            this.menuWidth = e.outerWidth(), this.menuHeight = e.outerHeight(!0), this.windowHeight = window.innerHeight
        },
        updatePosition: function (e, t) {
            var n = void 0, r = void 0;
            n = this.get("alignRight") ? Math.round(t.right - this.menuWidth) : Math.round(t.left), r = t.bottom + this.menuHeight > this.windowHeight ? Math.round(t.top - this.menuHeight) : Math.round(t.bottom), this.$menu.css({
                top: r + "px",
                left: n + "px",
                right: "auto"
            })
        },
        click: function () {
            var e = this.get("onClick");
            e && e()
        },
        actions: {
            openMenu: function () {
                this.get("isDisabled") || this.set("open", !0)
            }, closeMenu: function (e) {
                this.attrs.onClose && this.attrs.onClose(e || "close"), this.set("open", !1)
            }, toggleMenu: function (e) {
                this.get("open") ? this.send("closeMenu", e || "toggle") : this.send("openMenu")
            }, focusIn: function () {
                this.elementFocused = !0
            }, focusOut: function () {
                var e = this;
                this.elementFocused = null, Ember.run.next(function () {
                    e.isDestroyed || e.elementFocused || e.send("closeMenu", "focus-out")
                })
            }, keyDown: function (e) {
                if (this.get("open")) {
                    var t;
                    27 === e.keyCode && this.send("closeMenu", "escape"), (t = this.get("events")).trigger.apply(t, ["menuKeyDown"].concat(Array.prototype.slice.call(arguments)))
                }
            }
        }
    })
}), define("portia-ui/components/edit-sample-button", ["exports", "portia-ui/services/dispatcher"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = Ember.computed;
    e.default = Ember.Component.extend({
        browser: Ember.inject.service(),
        dispatcher: Ember.inject.service(),
        tagName: "",
        spider: null,
        canAddSample: (0, t.computedCanAddSample)("spider"),
        disableSample: n("canAddSample", "browser.invalidUrl", function () {
            return !this.get("canAddSample") || this.get("browser.invalidUrl")
        }),
        editableSample: (0, t.computedEditableSample)("spider"),
        startUrlDomains: Ember.computed("spider.startUrls", function () {
            var e = new Set, t = !0, n = !1, r = void 0;
            try {
                for (var a, l = this.get("spider.startUrls")[Symbol.iterator](); !(t = (a = l.next()).done); t = !0) {
                    var o = a.value, i = this.getUrlDomain(o), c = !0, s = !1, u = void 0;
                    try {
                        for (var d, m = i[Symbol.iterator](); !(c = (d = m.next()).done); c = !0) {
                            var p = d.value;
                            e.add(p)
                        }
                    } catch (e) {
                        s = !0, u = e
                    } finally {
                        try {
                            !c && m.return && m.return()
                        } finally {
                            if (s) throw u
                        }
                    }
                }
            } catch (e) {
                n = !0, r = e
            } finally {
                try {
                    !t && l.return && l.return()
                } finally {
                    if (n) throw r
                }
            }
            return e
        }),
        sameDomain: Ember.computed("browser.url", "spider.startUrls", function () {
            var e = this.getUrlDomain(this.get("browser.url"));
            if (!e) return !0;
            var t = this.get("startUrlDomains"), n = !0, r = !1, a = void 0;
            try {
                for (var l, o = e[Symbol.iterator](); !(n = (l = o.next()).done); n = !0) {
                    var i = l.value;
                    if (t.has(i)) return !0
                }
            } catch (e) {
                r = !0, a = e
            } finally {
                try {
                    !n && o.return && o.return()
                } finally {
                    if (r) throw a
                }
            }
            return !1
        }),
        getUrlDomain: function (e) {
            var t = document.createElement("a");
            t.href = e;
            var n = [t.hostname], r = n[0].split(".");
            return 1 !== r[0].length && "www" !== r[0] || n.push(n[0].split(".").splice(1).join(".")), n
        },
        actions: {
            addSample: function () {
                this.get("dispatcher").addSample(this.get("spider"), !0)
            }
        }
    })
}), define("portia-ui/components/element-overlay", ["exports", "portia-ui/utils/attrs"], function (e, t) {
    function n(e) {
        if (Array.isArray(e)) {
            for (var t = 0, n = Array(e.length); t < e.length; t++) n[t] = e[t];
            return n
        }
        return Array.from(e)
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        overlays: Ember.inject.service(),
        positionMonitor: Ember.inject.service(),
        tagName: "",
        positionMode: "size",
        init: function () {
            this._super.apply(this, arguments), this.set("rects", [])
        },
        didInsertElement: function () {
            Ember.run.scheduleOnce("afterRender", this, this.notifyAddOverlay)
        },
        willDestroyElement: function () {
            Ember.run.scheduleOnce("afterRender", this, this.notifyRemoveOverlay)
        },
        notifyAddOverlay: function () {
            this.get("overlays").add()
        },
        notifyRemoveOverlay: function () {
            this.get("overlays").remove()
        },
        didReceiveAttrs: function (e) {
            var n = this, r = e.oldAttrs, a = e.newAttrs;
            if ((0, t.attrChanged)(r, a, "viewPortElement")) {
                var l = r && (0, t.attrValue)(r.viewPortElement), o = (0, t.attrValue)(a.viewPortElement),
                    i = this.get("positionMonitor");
                l && i.unRegisterElement(l, this, this.readContainerSize, this.updatePosition), o && Ember.run.schedule("afterRender", function () {
                    i.registerElement(o, n, n.readContainerSize, n.updatePosition)
                })
            }
        },
        on: function (e) {
            for (var t, r = arguments.length, a = Array(r > 1 ? r - 1 : 0), l = 1; l < r; l++) a[l - 1] = arguments[l];
            this._super.apply(this, arguments), (t = Ember.run).scheduleOnce.apply(t, ["afterRender"].concat(n(a), [this.get("rects")]))
        },
        readContainerSize: function (e, t, n) {
            var r = n.ownerDocument.defaultView;
            r && (this.containerSize = {width: r.innerWidth, height: r.innerHeight})
        },
        updatePosition: function (e) {
            var t = this, n = [], r = null, a = this.get("rects").length, l = !0, o = !1, i = void 0;
            try {
                for (var c, s = Array.from(e)[Symbol.iterator](); !(l = (c = s.next()).done); l = !0) {
                    var u = c.value, d = Math.round(Math.min(this.containerSize.width, Math.max(0, u.left))),
                        m = Math.round(Math.min(this.containerSize.width, Math.max(0, u.right))),
                        p = Math.round(Math.min(this.containerSize.height, Math.max(0, u.top))),
                        h = Math.round(Math.min(this.containerSize.height, Math.max(0, u.bottom))), f = m - d,
                        b = h - p;
                    !r || p !== r.top || h !== r.bottom || d !== r.right && m !== r.left ? (r = {
                        left: d,
                        right: m,
                        top: p,
                        bottom: h,
                        width: f,
                        height: b
                    }, n.push(r)) : (r.left = Math.min(d, r.left), r.right = Math.max(m, r.right), r.width += f)
                }
            } catch (e) {
                o = !0, i = e
            } finally {
                try {
                    !l && s.return && s.return()
                } finally {
                    if (o) throw i
                }
            }
            a = Math.max(a, n.length);
            for (var g = n.length; g < a; g++) n.push({});
            Ember.run.next(Ember.run.scheduleOnce, "sync", function () {
                t.isDestroying || t.set("rects", n)
            }), this.trigger("element-moved", n)
        }
    })
}), define("portia-ui/components/element-rect-overlay", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        classNames: ["overlay"],
        index: null,
        positionMode: "size",
        backgroundStyle: Ember.computed("color.main", function () {
            var e = this.get("color.main");
            return Ember.String.htmlSafe(e ? "background-color: " + e + ";" : "")
        }),
        shadowStyle: Ember.computed("color.shadow", function () {
            var e = this.get("color.shadow");
            return Ember.String.htmlSafe(e ? "box-shadow: 0 1px 3px -2px " + e + ";" : "")
        }),
        textShadowStyle: Ember.computed("color.shadow", function () {
            var e = this.get("color.shadow");
            return Ember.String.htmlSafe(e ? "text-shadow: 0 1px 1px " + e + ";" : "")
        }),
        didInsertElement: function () {
            this.new = !0, this.get("overlay").on("element-moved", this, this.updatePosition)
        },
        willDestroyElement: function () {
            this.get("overlay").off("element-moved", this, this.updatePosition)
        },
        updatePosition: function (e) {
            if (this.element) {
                var t = this.get("index"), n = e[t];
                if (n) {
                    var r = n.left, a = n.top, l = n.width, o = n.height, i = !1;
                    if (this.new || !r && !a && !l && !o) {
                        for (i = !0; t--;) {
                            var c = e[t], s = c.left, u = c.right, d = c.top, m = c.bottom;
                            if (s || u || d || m) {
                                r = s, a = m, o = 0, l = 0;
                                break
                            }
                        }
                        this.new && (delete this.new, Ember.run.next(Ember.run.scheduleOnce, "afterRender", this, this.updatePosition, e))
                    }
                    if (r || a || l || o) {
                        var p = "";
                        switch (this.get("positionMode")) {
                            case"size":
                                p = "transform: translate(" + r + "px, " + a + "px);\n                         width: " + l + "px; height: " + o + "px;";
                                break;
                            case"edges":
                                p = "left: " + r + "px; right: " + (-r - l) + "px; top: " + a + "px; bottom: " + (-a - o) + "px;"
                        }
                        i && (p = "opacity: 0; " + p), this.element.setAttribute("style", p)
                    }
                }
            }
        }
    })
}), define("portia-ui/components/extracted-item-table", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "table",
        classNames: ["extracted-item-table"]
    })
}), define("portia-ui/components/extracted-items-group", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({tagName: ""})
}), define("portia-ui/components/extracted-items-json-panel", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        extractedItems: Ember.inject.service(),
        tagName: ""
    })
}), define("portia-ui/components/extracted-items-json-value", ["exports", "portia-ui/utils/types"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "span",
        classNames: ["json-value"],
        attributeBindings: ["style"],
        depth: 0,
        isString: Ember.computed("value", function () {
            return "string" === (0, t.toType)(this.get("value"))
        }),
        escapedValue: Ember.computed("value", function () {
            return JSON.stringify(this.get("value"))
        }),
        depthSpaces: Ember.computed("depth", function () {
            return "  ".repeat(this.get("depth"))
        }),
        fromArray: Ember.computed("from", function () {
            return "array" === this.get("from")
        }),
        comma: Ember.computed("position", function () {
            return this.get("position") < this.get("maxPosition") - 1 ? "," : ""
        }),
        style: Ember.computed("value", "depth", "key", "from", function () {
            var e = "", t = "", n = "", r = Ember.$(".json-character-size"), a = r.width(),
                l = Ember.$(".extracted-items-json"), o = l.width(), i = this.get("key") || "",
                c = this.get("escapedValue"), s = this.get("depth");
            if (this.get("isString") && (2 * (s + 1) + i.length + c.length + 4) * a > o) {
                var u = i.length;
                this.get("fromArray") ? (u = 2 * (s + 1), e = "text-indent: -" + u + "ch;", t = "margin: 0 0 0 " + u + "ch;", n = o) : (e = "text-indent: -1ch;", t = "margin: 0 0 0 1ch;", n = o - (i.length + 4 + 2 * (s + 1)) * a, n = "width: " + n + "px")
            }
            return Ember.String.htmlSafe("" + e + t + n)
        })
    })
}), define("portia-ui/components/extracted-items-json", ["exports", "portia-ui/utils/types"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "", position: 0, depth: -1, setDepth: function () {
            this.set("depth", this.getWithDefault("depth", -1) + 1)
        }.on("init"), isObject: Ember.computed("json", function () {
            return this._isObject(this.get("json"))
        }), isArray: Ember.computed("json", function () {
            return this._isArray(this.get("json"))
        }), isObjectOrArray: Ember.computed("isArray", "isObject", function () {
            return this.get("isObject") || this.get("isArray")
        }), fromKey: Ember.computed("from", function () {
            return "key" === this.get("from")
        }), comma: Ember.computed("position", "parent", function () {
            return this.get("position") < this.get("maxPosition") - 1 ? "," : ""
        }), depthSpaces: Ember.computed("depth", "isObjectOrArray", "length", function () {
            return this.get("isObjectOrArray") && !this.get("length") ? "" : "  ".repeat(this.get("depth"))
        }), depthPlus1Spaces: Ember.computed("depth", function () {
            return "  ".repeat(this.get("depth") + 1)
        }), openingCharacter: Ember.computed("isObjectOrArray", function () {
            return this.get("isArray") ? "[" : this.get("isObject") ? "{" : void 0
        }), closingCharacter: Ember.computed("isObjectOrArray", function () {
            return this.get("isArray") ? "]" : this.get("isObject") ? "}" : void 0
        }), maxPosition: Ember.computed("json", function () {
            var e = this.get("parent");
            return e ? this._objLength(e) : -1
        }), length: Ember.computed("json", function () {
            return this._objLength(this.get("json"))
        }), openChild: Ember.computed("json", function () {
            var e, t = this.get("json");
            if (this.get("isObject") ? e = t[Object.keys(t)[0]] : this.get("isArray") && (e = t.get(0)), e) return this._openNext(e)
        }), openSibling: Ember.computed("json", "parent", "position", function () {
            var e, t = this.get("parent"), n = this.get("position");
            if (t && n < t.length - 1 && (this._isObject(t) ? e = t[Object.keys(t)[n + 1]] : this._isArray(t) && (e = t.get(n + 1)), e)) return this._openNext(e)
        }), showOpen: Ember.computed("json", function () {
            return !!(this.get("isObject") && "array" !== this.get("from") || this.get("isArray") && "object" !== this.get("from"))
        }), _openNext: function (e) {
            return this._isObject(e) ? "{" : this._isArray(e) ? "[" : void 0
        }, _isObject: function (e) {
            return "object" === (0, t.toType)(e)
        }, _isArray: function (e) {
            return Array.isArray(e)
        }, _objLength: function (e) {
            return this._isObject(e) ? Object.keys(e).length : this._isArray(e) ? e.length : void 0
        }
    })
}), define("portia-ui/components/extracted-items-panel", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.inject.service, n = Ember.computed;
    e.default = Ember.Component.extend({
        tagName: "",
        extractedItems: t(),
        isExtracting: n.readOnly("extractedItems.isExtracting"),
        failedMsg: n.readOnly("extractedItems.failedExtractionMsg"),
        failedExtraction: n.readOnly("extractedItems.failedExtraction")
    })
}), define("portia-ui/components/extracted-items-status", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.computed, n = Ember.inject.service;
    e.default = Ember.Component.extend({
        tagName: "",
        extractedItems: n(),
        store: n(),
        type: t.readOnly("extractedItems.type"),
        spider: t.readOnly("extractedItems.spider"),
        changes: t("extractedItems.changes", function () {
            return this.get("extractedItems.changes") || []
        }),
        changed: t("extractedItems.changed", function () {
            return this.get("extractedItems.changed") || []
        }),
        hasWarning: t("type", "changes.[]", function () {
            var e = this.get("changes").length > 0;
            return "js" === this.get("type") ? !e || "no_items" !== this.get("changes")[0] : e
        }),
        change: t("hasWarning", function () {
            var e = this.get("changes")[0];
            return e || "js_not_required"
        }),
        changeInfo: t("change", function () {
            var e = this.get("change"), t = this.get("changed"), n = this.get("type");
            "missing_items" !== e && "missing_fields" !== e || (e = "js" === n ? "no_items" : "js_not_required");
            var r = {
                js_not_required: {
                    text: "Javascript is enabled for this sample and may not be needed.                        Your spider may run faster if Javascript is not run on pages like this",
                    path: "projects.project.spider.options"
                },
                no_items: {
                    text: "Javascript is not enabled for this sample. It may extract more accurate                        data if it is enabled",
                    path: "projects.project.spider.options"
                },
                missing_required_field: {path: "projects.project.schema.field.options"}
            }, a = r[e];
            if (!a) return {};
            if ("missing_required_field" === e) {
                var l = this.get("store").peekRecord("field", t[1][0]),
                    o = 'The field "' + l.get("name") + '" is marked as required but there is no                         annotation for that field';
                return a.text = o, a.model = l, a
            }
            return a.model = this.get("spider"), a
        }),
        icon: t("hasWarning", function () {
            return this.get("hasWarning") ? "warning-triangle" : "ok"
        })
    })
}), define("portia-ui/components/extracted-items-tab", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.inject.service, n = Ember.computed;
    e.default = Ember.Component.extend({
        extractedItems: t(),
        numItems: n.readOnly("extractedItems.items.length"),
        isExtracting: n.alias("extractedItems.isExtracting")
    })
}), define("portia-ui/components/extractor-options", ["exports", "portia-ui/models/field"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        dispatcher: Ember.inject.service(),
        tagName: "",
        annotation: null,
        types: t.FIELD_TYPES,
        project: Ember.computed.readOnly("annotation.parent.sample.spider.project"),
        regexExtractors: Ember.computed.filterBy("project.extractors", "type", "regex"),
        actions: {
            save: function () {
                this.get("annotation").save()
            }, addTypeExtractor: function (e) {
                var t = this.get("annotation");
                this.get("dispatcher").addAnnotationTypeExtractor(t, e)
            }, addRegexExtractor: function (e) {
                var t = this.get("annotation");
                this.get("dispatcher").addAnnotationRegexExtractor(t, e)
            }, addNewRegexExtractor: function () {
                var e = this.get("annotation");
                this.get("dispatcher").addNewAnnotationRegexExtractor(e)
            }, removeExtractor: function (e) {
                var t = this.get("annotation");
                this.get("dispatcher").removeAnnotationExtractor(t, e)
            }, saveExtractor: function (e) {
                e.save().then(null, function () {
                    e.rollbackAttributes()
                })
            }
        }
    })
}), define("portia-ui/components/feed-url-options", ["exports", "portia-ui/utils/utils"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        feedLink: "http://files.scrapinghub.com/portia/urls.txt",
        didRender: function () {
            this._super.apply(this, arguments), this.$(".focus-control").focus()
        },
        actions: {
            saveFeedUrl: function () {
                var e = (0, t.cleanUrl)(this.get("startUrl.url"));
                this.set("startUrl.url", e), this.get("saveSpider").perform()
            }
        }
    })
}), define("portia-ui/components/field-options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "",
        field: null,
        actions: {
            save: function () {
                this.get("field").save()
            }
        }
    })
}), define("portia-ui/components/fragment-options", ["exports", "ember-concurrency", "ember-changeset", "ember-changeset-validations", "portia-ui/utils/start-urls", "portia-ui/validations/fixed-fragment", "portia-ui/validations/range-fragment", "portia-ui/validations/list-fragment"], function (e, t, n, r, a, l, o, i) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var c = Ember.computed, s = Ember.run, u = {fixed: l.default, range: o.default, list: i.default};
    e.default = Ember.Component.extend({
        tagName: "form",
        classNames: ["fragment-form", "form-inline"],
        toggleTooltip: !1,
        fragmentTypes: [{value: "fixed", label: "Fixed"}, {value: "range", label: "Range"}, {
            value: "list",
            label: "List"
        }],
        fragmentType: c("fragment.type", {
            get: function () {
                return this.get("fragmentTypes").findBy("value", this.get("fragment.type"))
            }, set: function (e, t) {
                return this.changeFragmentType(t), this.focusFragment(), t
            }
        }),
        changeset: c("fragment.type", function () {
            var e = u[this.get("fragment.type")];
            return new n.default(this.get("fragment"), (0, r.default)(e), e)
        }),
        isList: c.equal("fragment.type", "list"),
        isRange: c.equal("fragment.type", "range"),
        listPlaceholder: c("isList", function () {
            return this.get("isList") ? "val1 val2 val3" : ""
        }),
        multiplicity: c("fragmentType", "fragment.value", function () {
            return (0, a.multiplicityFragment)(this.get("fragment"))
        }),
        limits: function () {
            var e = this.get("changeset.value").split("-");
            return 2 !== e.length ? ["", ""] : e
        },
        lower: c("isRange", "changeset.value", {
            get: function () {
                return this.limits()[0]
            }, set: function (e, t) {
                return this.updateLimit(t, 0), t
            }
        }),
        higher: c("isRange", "changeset.value", {
            get: function () {
                return this.limits()[1]
            }, set: function (e, t) {
                return this.updateLimit(t, 1), t
            }
        }),
        updateFragment: function () {
            this.saveChangeset(), this.set("toggleTooltip", !1), this.get("flashTooltip").perform(), this.set("fragment.valid", this.get("changeset.isValid"))
        },
        updateLimit: function (e, t) {
            var n = this.limits();
            n[t] = e, this.get("changeset").set("value", n.join("-")), this.updateFragment()
        },
        changeFragmentType: function (e) {
            this.set("fragment.value", ""), this.set("fragment.valid", !0), this.set("fragment.type", e.value)
        },
        focusFragment: function () {
            var e = this;
            s.scheduleOnce("afterRender", this.context, function () {
                e.$(".focus-control").focus()
            })
        },
        saveChangeset: function () {
            var e = this.get("changeset");
            "" === e.get("value") && e.set("value", ""), e.get("isValid") && e.save()
        },
        flashTooltip: (0, t.task)(regeneratorRuntime.mark(function e() {
            return regeneratorRuntime.wrap(function (e) {
                for (; ;) switch (e.prev = e.next) {
                    case 0:
                        return e.next = 2, (0, t.timeout)(1e3);
                    case 2:
                        if (!this.get("changeset.isInvalid")) {
                            e.next = 7;
                            break
                        }
                        return this.set("toggleTooltip", !0), e.next = 6, (0, t.timeout)(2e3);
                    case 6:
                        this.set("toggleTooltip", !1);
                    case 7:
                    case"end":
                        return e.stop()
                }
            }, e, this)
        })).restartable(),
        actions: {
            saveFragment: function () {
                this.updateFragment(), this.get("changeset.isValid") && this.get("allValidFragments") && this.get("saveSpider").perform()
            }, updateValue: function () {
                this.updateFragment()
            }, changeFragmentType: function () {
                this.get("saveSpider").cancelAll()
            }
        }
    })
}), define("portia-ui/components/generated-url-options", ["exports", "portia-ui/utils/colors", "portia-ui/utils/start-urls"], function (e, t, n) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var r = Ember.computed;
    e.default = Ember.Component.extend({
        dispatcher: Ember.inject.service(),
        rawColors: r.mapBy("fragmentColors", "main"),
        fragments: r.alias("startUrl.fragments"),
        allValidFragments: r("fragments.@each.valid", function () {
            return this.get("fragments").reduce(function (e, t) {
                return (void 0 === e.valid || e.valid) && (void 0 === t.valid || t.valid)
            })
        }),
        generatedUrlLists: r("fragments.@each.type", "fragments.@each.value", function () {
            return this.get("startUrl").generateList()
        }),
        fragmentColors: r("fragments.[]", function () {
            return (0, t.getColors)(this.get("fragments.length"))
        }),
        isComplete: r("generatedUrlLists", "_fragmentCount", function () {
            return this.get("generatedUrlLists.length") === this.get("_fragmentCount")
        }),
        actions: {
            addFragment: function () {
                this.get("dispatcher").addFragment(this.get("startUrl")), this.get("saveSpider").perform()
            }, removeFragment: function (e) {
                this.get("dispatcher").removeFragment(this.get("startUrl"), e), this.get("saveSpider").perform()
            }
        },
        _fragmentCount: r("fragments.@each.type", "fragments.@each.value", function () {
            return this.get("fragments").map(n.multiplicityFragment).reduce(function (e, t) {
                return e * t
            })
        })
    })
}), define("portia-ui/components/help-icon", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "",
        tooltipClasses: null,
        tooltipContainer: "body",
        placement: "right",
        icon: "help",
        classes: "help-icon"
    })
}), define("portia-ui/components/icon-button", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = e.ICON_CLASSES = {
        add: "structure-list-add fa fa-plus-circle",
        "add-dropdown": "structure-list-add fa fa-play-circle fa-rotate-90",
        close: "fa fa-times",
        code: "fa fa-code",
        copy: "fa fa-copy",
        "data-annotation": "fa fa-hand-pointer-o",
        date: "fa fa-calendar",
        "default-add": "fa fa-check-circle structure-list-publish",
        "default-remove": "fa fa-times-circle structure-list-discard",
        download: "fa fa-download",
        publish: "structure-list-publish fa fa-cloud-upload",
        edit: "fa fa-pencil",
        error: "structure-list-error fa fa-exclamation-circle",
        "error-triangle": "structure-list-error fa fa-exclamation-triangle",
        file: "fa fa-file",
        geopoint: "fa fa-map-marker",
        help: "icon-button-help fa fa-question-circle",
        image: "fa fa-picture-o",
        link: "fa fa-link",
        list: "fa fa-list",
        navigation: "fa fa-eye",
        number: "portia-icon portia-icon-number",
        options: "structure-list-details fa fa-cog",
        ok: "structure-list-publish fa fa-check-circle",
        play: "structure-list-play fa fa-play-circle",
        price: "fa fa-dollar",
        project: "fa fa-folder",
        "raw html": "fa fa-code",
        "regular expression": "portia-icon portia-icon-regex",
        remove: "structure-list-remove fa fa-minus-circle",
        rollback: "structure-list-discard fa fa-history",
        "safe html": "portia-icon portia-icon-safe-html",
        sample: "fa fa-file",
        schema: "fa fa-database",
        spider: "portia-icon portia-icon-spider",
        structure: "fa fa-sitemap",
        text: "portia-icon portia-icon-text",
        "tool-css": "fa fa-file-code-o",
        "tool-magic": "fa fa-magic fa-flip-horizontal",
        "tool-select": "fa fa-mouse-pointer",
        "tool-add": "fa fa-plus",
        "tool-remove": "fa fa-minus",
        "tool-multiple": "fa fa-th-large",
        url: "fa fa-globe",
        "url-generated": "portia-icon portia-icon-generated-url",
        "url-feed": "portia-icon portia-icon-feed-url",
        "vertical-ellipsis": "fa fa-ellipsis-v",
        "warning-triangle": "structure-list-warning fa fa-exclamation-triangle"
    };
    e.default = Ember.Component.extend({
        attributeBindings: ["tabindex"],
        classNames: ["icon-button"],
        classNameBindings: ["iconClasses", "disabled", "hasAction", "modifyClasses"],
        tagName: "i",
        bubbles: !0,
        disabled: !1,
        modifyClasses: "",
        hasAction: Ember.computed.bool("action"),
        beforeClick: function () {
        },
        click: function () {
            if (this.beforeClick(), this.attrs.action && !this.get("disabled") && (this.attrs.action(), !this.get("bubbles"))) return !1
        },
        iconClasses: Ember.computed("icon", function () {
            var e = this.get("icon");
            return t[e] || "fa"
        })
    })
}), define("portia-ui/components/indentation-spacer", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        classNames: ["indentation-spacer"],
        classNameBindings: ["isSmall"],
        isSmall: !1
    })
}), define("portia-ui/components/input-with-clear", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        classNames: ["input-group", "input-with-clear"],
        type: "text",
        value: "",
        actions: {
            clear: function () {
                this.set("value", ""), this.get("clear")()
            }, keyUp: function () {
                this.update(this.get("value"))
            }
        }
    })
}), define("portia-ui/components/inspector-panel", ["exports", "portia-ui/utils/selectors"], function (e, t) {
    function n(e) {
        return !!Ember.$(e).attr("content")
    }

    function r(e) {
        if (!e) return [];
        var t = [], r = Ember.$(e), a = r.text().trim();
        if (a) {
            var o = n(e);
            t.push({name: o ? "text content" : "content", attribute: o ? "text-content" : "content", value: a})
        }
        for (var i = {}, c = 0; c < e.attributes.length; c++) {
            var s = e.attributes[c];
            if (s.name.startsWith("data-portia-")) {
                var u = s.name.slice("data-portia-".length);
                i[u] || (i[u] = s.value)
            }
        }
        return Array.prototype.slice.call(e.attributes).forEach(function (e) {
            e.nodeName.startsWith("data-portia-") || l.has(e.nodeName) || !e.value || t.push({
                name: e.nodeName,
                attribute: e.nodeName,
                value: i[e.nodeName] || e.value
            })
        }), t
    }

    function a(e) {
        var t = r(e);
        return 1 === t.length && t[0].attribute ? t[0].attribute : t.findBy("attribute", "src") ? "src" : t.findBy("attribute", "href") ? "href" : t.findBy("attribute", "datetime") ? "datetime" : t.findBy("attribute", "content") ? "content" : t.length ? t[0].attribute : null
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.IGNORED_ATTRIBUTES = void 0, e.hasContentAttribute = n, e.getAttributeList = r, e.getDefaultAttribute = a;
    var l = e.IGNORED_ATTRIBUTES = new Set(["id", "class", "target", "width", "style", "height", "cellpadding", "cellspacing", "border", "bgcolor", "color", "colspan", "data-scrapy-annotate", "data-tagid", "data-genid", "data-parentid"]);
    e.default = Ember.Component.extend({
        dispatcher: Ember.inject.service(),
        uiState: Ember.inject.service(),
        tagName: "",
        attributes: Ember.computed("inspectedElement", function () {
            return r(this.get("inspectedElement"))
        }),
        elementPath: Ember.computed("inspectedElement", function () {
            var e = this.get("inspectedElement");
            return e ? (0, t.pathSelector)(e) : ""
        }),
        elementParents: Ember.computed("originalSelectedElement", "selectedElement", function () {
            var e = this.get("originalSelectedElement"), t = this.get("selectedElement");
            return e ? $(e).add($(e).parents()).toArray().map(function (n) {
                return {element: n, tagName: n.tagName.toLowerCase(), selected: n === t, isLast: n === e}
            }) : []
        }),
        elementChilds: Ember.computed("selectedElement", function () {
            var e = this.get("selectedElement");
            return $(e).children().toArray().map(function (e) {
                return {element: e, tagName: e.tagName.toLowerCase()}
            })
        }),
        inspectedElement: Ember.computed.or("uiState.viewPort.hoveredElement", "uiState.viewPort.selectedElement"),
        originalSelectedElement: Ember.computed.alias("uiState.viewPort.originalSelectedElement"),
        selectedElement: Ember.computed.alias("uiState.viewPort.selectedElement"),
        isHovered: Ember.computed.bool("uiState.viewPort.hoveredElement"),
        actions: {
            addAnnotation: function (e) {
                this.get("dispatcher").addAnnotation(null, this.get("inspectedElement"), e, !0)
            }, changeAnnotationSource: function (e) {
                var t = this.get("uiState.models.annotation");
                this.get("dispatcher").changeAnnotationSource(t, e)
            }, selectParent: function (e) {
                this.set("selectedElement", e)
            }, selectChild: function (e) {
                this.set("selectedElement", e), this.set("uiState.viewPort.originalSelectedElement", e)
            }
        }
    })
}), define("portia-ui/components/link-crawling-options", ["exports", "portia-ui/mixins/save-spider-mixin"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend(t.default, {
        tagName: "",
        spider: null,
        actions: {
            save: function () {
                this.saveSpider()
            }
        }
    })
}), define("portia-ui/components/list-item-add-annotation-menu", ["exports", "portia-ui/config/environment"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}),
        e.default = Ember.Component.extend({
            dispatcher: Ember.inject.service(),
            tagName: "",
            item: null,
            allowNesting: t.default.APP.allow_nesting,
            actions: {
                addAnnotation: function () {
                    var e = this.get("item");
                    this.get("dispatcher").addAnnotation(e, void 0, void 0, !0)
                }, addNestedItem: function () {
                    var e = this.get("item");
                    this.get("dispatcher").addNestedItem(e, !0)
                }
            }
        })
}), define("portia-ui/components/list-item-annotation-field", ["exports", "portia-ui/components/schema-structure-listing"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = function () {
        function e(e, t) {
            var n = [], r = !0, a = !1, l = void 0;
            try {
                for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
            } catch (e) {
                a = !0, l = e
            } finally {
                try {
                    !r && i.return && i.return()
                } finally {
                    if (a) throw l
                }
            }
            return n
        }

        return function (t, n) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return e(t, n);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }();
    e.default = Ember.Component.extend({
        dispatcher: Ember.inject.service(),
        notificationManager: Ember.inject.service(),
        tagName: "",
        annotation: null,
        selecting: !1,
        actions: {
            validateFieldName: function (e) {
                var r = this;
                return Ember.RSVP.all([this.get("annotation.field"), this.get("annotation.parent.schema.fields")]).then(function (a) {
                    var l = n(a, 2), o = l[0], i = l[1];
                    if (!i) return !0;
                    i = i.reject(function (e) {
                        return e === o
                    });
                    var c = (0, t.validateFieldName)(e, i);
                    return c && r.get("notificationManager").showWarningNotification(c), !c
                })
            }, addField: function (e) {
                var t = this.get("annotation"), n = t.get("field.schema"), r = t.get("type");
                this.get("dispatcher").addNamedField(n, e, r, !1).then(function (e) {
                    t.set("field", e), t.save()
                })
            }, changeField: function () {
                var e = this.get("annotation");
                e.get("field").then(function () {
                    e.set("field", e.get("field")), e.save()
                })
            }
        }
    })
}), define("portia-ui/components/list-item-badge", ["exports", "portia-ui/components/colored-badge"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.extend({})
}), define("portia-ui/components/list-item-combo", ["exports", "portia-ui/components/list-item-selectable"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.extend({
        classNames: ["list-item-combo"],
        autoSelect: !1
    })
}), define("portia-ui/components/list-item-editable", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        classNames: ["list-item-editable"],
        classNameBindings: ["editing"],
        editing: !1,
        onChange: null,
        validate: null,
        spellcheck: !0,
        value: null,
        click: function () {
            if (this.get("editing")) return !1
        },
        actions: {
            startEditing: function () {
                this.set("editing", !0)
            }
        }
    })
}), define("portia-ui/components/list-item-field-type", ["exports", "portia-ui/models/field", "portia-ui/utils/ensure-promise"], function (e, t, n) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "",
        field: null,
        types: t.FIELD_TYPES,
        actions: {
            saveField: function () {
                var e = this.get("field");
                (0, n.default)(e).then(function (e) {
                    e && e.save()
                })
            }
        }
    })
}), define("portia-ui/components/list-item-icon-menu", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "",
        icon: null,
        actions: {
            clickIcon: function () {
                var e = this.get("onClick");
                e && e()
            }
        }
    })
}), define("portia-ui/components/list-item-icon", ["exports", "portia-ui/components/icon-button"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.extend({
        classNames: ["list-item-icon"],
        beforeClick: function () {
            var e = this.get("onClick");
            e && e()
        }
    })
}), define("portia-ui/components/list-item-item-schema", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        dispatcher: Ember.inject.service(),
        tagName: "",
        item: null,
        selecting: !1,
        actions: {
            addSchema: function (e) {
                var t = this.get("item"), n = t.get("schema.project");
                this.get("dispatcher").addNamedSchema(n, e, !1).then(function (e) {
                    t.set("schema", e), t.save()
                })
            }, changeSchema: function () {
                var e = this.get("item");
                e.get("schema").then(function () {
                    e.set("schema", e.get("schema")), e.save()
                })
            }
        }
    })
}), define("portia-ui/components/list-item-link-crawling", ["exports", "portia-ui/mixins/save-spider-mixin"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = Ember.computed, r = Ember.inject.service;
    e.default = Ember.Component.extend(t.default, {
        routing: r("-routing"),
        tagName: "",
        spider: null,
        followPatternOptions: [{
            value: "auto",
            label: "Follow links automatically",
            description: "Use start urls and sample urls to teach the spider the                           best links to follow"
        }, {
            value: "all",
            label: "Follow all in-domain links",
            description: "Follow all links which have a domain or sub domain that match                           the start or sample urls"
        }, {
            value: "none",
            label: "Don't follow links",
            description: "Only attempt to extract data from start urls. Can be combined                           to great effect with feed and generated urls"
        }, {
            value: "patterns",
            label: "Configure url patterns",
            description: "Create patterns for the spider to follow or not and direct your                           spider with pin point accuracy"
        }],
        linksToFollow: n("spider.linksToFollow", {
            get: function () {
                return this.followPatternOptions.findBy("value", this.get("spider.linksToFollow"))
            }, set: function (e, t) {
                return this.set("spider.linksToFollow", t.value), t
            }
        }),
        actions: {
            saveSpider: function () {
                var e = this;
                this.saveSpider().then(function () {
                    "patterns" === e.get("linksToFollow.value") ? e.get("routing").transitionTo("projects.project.spider.link-options") : "none" === e.get("linksToFollow.value") && e.get("routing.currentRouteName").endsWith("link-options") && e.get("routing").transitionTo("projects.project.spider")
                })
            }
        }
    })
}), define("portia-ui/components/list-item-relation-manager", ["exports", "portia-ui/utils/promises"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "",
        onChange: null,
        choices: [],
        selecting: !1,
        value: null,
        choicesOrdering: ["name"],
        sortedChoices: Ember.computed.sort("choices", "choicesOrdering"),
        orderItemsForSearch: function (e) {
            function t(e) {
                switch (e.get("value.special")) {
                    case"rename":
                        return 1;
                    case"add":
                        return 2;
                    default:
                        return 0
                }
            }

            return e.sort(function (e, n) {
                return t(e) - t(n)
            })
        },
        valuesEqual: function (e, t) {
            return (e && (e.get ? e.get("name") : e.name)) === (t && (t.get ? t.get("name") : t.name))
        },
        validateName: function (e) {
            return "function" != typeof this.attrs.validate || this.attrs.validate(e)
        },
        actions: {
            add: function (e) {
                var n = this;
                (0, t.ensurePromise)(this.validateName(e)).then(function (t) {
                    t && n.attrs.create && n.attrs.create(e)
                })
            }, rename: function (e) {
                var n = this;
                (0, t.ensurePromise)(this.validateName(e)).then(function (r) {
                    if (r) {
                        var a = n.get("value");
                        (0, t.ensurePromise)(a).then(function (t) {
                            t && (t.set("name", e), t.save())
                        })
                    }
                })
            }
        }
    })
}), define("portia-ui/components/list-item-selectable", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        classNames: ["list-item-selectable"],
        classNameBindings: ["selecting"],
        change: null,
        choices: [],
        buttonClass: null,
        menuAlign: "left",
        menuClass: null,
        menuContainer: null,
        selecting: !1,
        value: null,
        actions: {
            startSelecting: function () {
                this.set("selecting", !0)
            }
        }
    })
}), define("portia-ui/components/list-item-text", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "span",
        classNames: ["list-item-text"]
    })
}), define("portia-ui/components/loading-slider", ["exports"], function (e) {
    function t() {
        return "undefined" != typeof FastBoot
    }

    Object.defineProperty(e, "__esModule", {value: !0});
    var n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e
    } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    }, r = Ember.Component, a = Ember.run, l = Ember.isBlank, o = Ember.inject, i = Ember.on;
    e.default = r.extend({
        tagName: "div",
        classNames: ["loading-slider"],
        classNameBindings: "expanding",
        progressBarClass: null,
        loadingSlider: o.service(),
        init: function () {
            this._super.apply(this, arguments), t() || a.once(this, function () {
                this.get("loadingSlider").on("startLoading", this, this._startLoading), this.get("loadingSlider").on("endLoading", this, this._endLoading), this.get("loadingSlider").on("changeAttrs", this, this._changeAttrs)
            })
        },
        setAttrsThenManage: i("didReceiveAttrs", function () {
            t() || (this.setProperties({
                isLoading: this.getAttr("isLoading"),
                duration: this.getAttr("duration"),
                expanding: this.getAttr("expanding"),
                speed: this.getAttr("speed"),
                color: this.getAttr("color")
            }), this.manage())
        }),
        willDestroy: function () {
            a.once(this, function () {
                this.get("loadingSlider").off("startLoading", this, this._startLoading), this.get("loadingSlider").off("endLoading", this, this._endLoading), this.get("loadingSlider").off("changeAttrs", this, this._changeAttrs)
            })
        },
        _startLoading: function () {
            this.set("isLoading", !0), this.manage()
        },
        _endLoading: function () {
            this.set("isLoading", !1)
        },
        _changeAttrs: function (e) {
            this.setProperties(e), this.manage()
        },
        manage: function () {
            l(this.$()) || (this.get("isLoading") ? this.get("expanding") ? this.expandingAnimate.call(this) : this.animate.call(this) : this.set("isLoaded", !0))
        },
        animate: function () {
            this.set("isLoaded", !1);
            var e = this, t = 0, n = $('<span class="loading-slider__progress ' + this.get("progressBarClass") + '">'),
                r = this.$(), l = this.getWithDefault("duration", 300), o = 0, i = this.$().width(),
                c = Math.round(i / 50), s = this.get("color");
            r.append(n), s && n.css("background-color", s);
            var u = window.setInterval(function () {
                t += 10, n.width(o += c), (t > .75 * l || o > .66 * i) && c > 1 && (c *= .97), o > i && a.later(function () {
                    r.empty(), window.clearInterval(u)
                }, 50), e.get("isLoaded") && (c < 10 && (c = 10), c += c)
            }, 10)
        },
        expandingAnimate: function () {
            var e = this, t = this.$(), r = this.getWithDefault("speed", 1e3), a = this.get("color");
            "object" === (void 0 === a ? "undefined" : n(a)) ? function n() {
                if (!e.isDestroyed && !e.isDestroying) {
                    var l = a.shift();
                    a.push(l), e.expandItem.call(e, l), e.get("isLoading") ? window.setTimeout(n, r) : t.empty()
                }
            }() : this.expandItem.call(this, a, !0)
        },
        expandItem: function (e, t) {
            var n = $("<span>").css({"background-color": e}), r = this.$(), a = 0, l = r.width(),
                o = Math.round(l / 50), i = window.navigator.userAgent, c = i.indexOf("MSIE "),
                s = i.indexOf("Trident/"), u = i.indexOf("Edge/");
            r.append(n);
            var d = window.setInterval(function () {
                var e = a += o;
                a > l && (window.clearInterval(d), t && r.empty()), c > 0 || s > 0 || u > 0 ? n.css({
                    margin: "0 auto",
                    width: e
                }) : n.css({"margin-left": "-" + e / 2 + "px", width: e})
            }, 10)
        },
        didInsertElement: function () {
            this.$().html("<span>");
            var e = this.get("color");
            e && this.$("span").css("background-color", e), this.get("runManageInitially") && this._startLoading()
        }
    })
}), define("portia-ui/components/notification-container", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        notificationManager: Ember.inject.service(),
        classNames: ["notifications"],
        _banners: [],
        _notifications: [],
        banners: Ember.computed("_banners.[]", "notificationManager.banners.[]", function () {
            var e = this.get("_banners"), t = this.get("notificationManager.banners"), n = !0, r = !1, a = void 0;
            try {
                for (var l, o = e[Symbol.iterator](); !(n = (l = o.next()).done); n = !0) {
                    var i = l.value;
                    Ember.set(i, "fading", !0)
                }
            } catch (e) {
                r = !0, a = e
            } finally {
                try {
                    !n && o.return && o.return()
                } finally {
                    if (r) throw a
                }
            }
            var c = !0, s = !1, u = void 0;
            try {
                for (var d, m = t[Symbol.iterator](); !(c = (d = m.next()).done); c = !0) {
                    var p = d.value;
                    Ember.set(p, "fading", void 0)
                }
            } catch (e) {
                s = !0, u = e
            } finally {
                try {
                    !c && m.return && m.return()
                } finally {
                    if (s) throw u
                }
            }
            return e.addObjects(t), e
        }),
        notifications: Ember.computed("_notifications.[]", "notificationManager.notifications.[]", function () {
            var e = this.get("_notifications"), t = this.get("notificationManager.notifications"), n = !0, r = !1,
                a = void 0;
            try {
                for (var l, o = e[Symbol.iterator](); !(n = (l = o.next()).done); n = !0) {
                    var i = l.value;
                    Ember.set(i, "fading", !0)
                }
            } catch (e) {
                r = !0, a = e
            } finally {
                try {
                    !n && o.return && o.return()
                } finally {
                    if (r) throw a
                }
            }
            var c = !0, s = !1, u = void 0;
            try {
                for (var d, m = t[Symbol.iterator](); !(c = (d = m.next()).done); c = !0) {
                    var p = d.value;
                    Ember.set(p, "fading", void 0)
                }
            } catch (e) {
                s = !0, u = e
            } finally {
                try {
                    !c && m.return && m.return()
                } finally {
                    if (s) throw u
                }
            }
            return e.addObjects(t), e
        }),
        displayNotifications: Ember.computed("banners.length", "notifications.[]", function () {
            var e = this.get("banners.length");
            return this.get("notifications").slice(0, Math.max(0, 4 - e))
        }),
        actions: {
            dismissNotification: function (e) {
                this.get("notificationManager.notifications").removeObject(e)
            }, fadeBanner: function (e) {
                this.get("_banners").removeObject(e)
            }, fadeNotification: function (e) {
                this.get("_notifications").removeObject(e)
            }
        }
    })
}), define("portia-ui/components/notification-message", ["exports", "portia-ui/utils/attrs"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        classNames: ["alert", "notification", "fade"],
        classNameBindings: ["alertType", "show:in"],
        notification: null,
        closeAction: null,
        dismissable: !1,
        show: !1,
        showTime: 4e3,
        message: Ember.computed.readOnly("notification.message"),
        title: Ember.computed.readOnly("notification.title"),
        type: Ember.computed.readOnly("notification.type"),
        alertType: Ember.computed("type", function () {
            return "alert-" + this.getWithDefault("type", "info")
        }),
        init: function () {
            this._super(), this.set("show", !1)
        },
        didReceiveAttrs: function (e) {
            var n = e.newAttrs, r = e.oldAttrs;
            (0, t.attrChangedTo)(r, n, "fade", !0) && this.fadeOut()
        },
        didInsertElement: function () {
            var e = this;
            Ember.run.next(this, "fadeIn"), this.attrs.closeAction && Ember.run.later(function () {
                e.attrs.closeAction()
            }, this.showTime)
        },
        fadeIn: function () {
            this.isDestroying || this.set("show", !0)
        },
        fadeOut: function () {
            this.set("show", !1)
        },
        transitionEnd: function () {
            this.get("show") || this.attrs.fadeAction && this.attrs.fadeAction()
        },
        actions: {
            close: function () {
                this.attrs.closeAction && this.attrs.closeAction()
            }
        }
    })
}), define("portia-ui/components/page-actions-editor", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = ["click", "set", "wait"];
    e.default = Ember.Component.extend({
        actionTypes: t,
        pageActions: null,
        editing: null,
        addingNew: !1,
        actions: {
            reorderPageAction: function (e, t) {
                var n = this.get("pageActions"), r = n[e];
                n.removeAt(e), n.insertAt(t, r)
            }, deletePageAction: function (e) {
                this.get("pageActions").removeAt(e)
            }, editPageAction: function (e) {
                e._edited = !0, this.set("editing", e)
            }, back: function () {
                this.set("editing", null)
            }, addContinue: function () {
                this.set("addingNew", !1)
            }, addNew: function () {
                var e = Ember.Object.create({type: "wait", _edited: !0});
                this.set("addingNew", !0), this.set("editing", e), this.get("pageActions").pushObject(e)
            }
        }
    })
}), define("portia-ui/components/project-list", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.computed;
    e.default = Ember.Component.extend({
        store: Ember.inject.service(),
        classNames: ["project-list", "list-group"],
        classNameBindings: ["showSearch", "filteredProjects.length::empty", "withinDropdown:project-within-dropdown", "showSearch::not-searchable"],
        withinDropdown: !1,
        minSearchableProjects: 8,
        projects: [],
        searchTerm: "",
        isSelecting: t.bool("selectProject"),
        emptySearchTerm: t.equal("searchTerm", ""),
        showSearch: t("projects", function () {
            return this.get("projects.length") > this.get("minSearchableProjects")
        }),
        filteredProjects: t("projects", "searchTerm", function () {
            var e = this.get("searchTerm");
            return 0 === e.length ? this.get("projects") : this.get("store").peekAll("project").filter(function (t) {
                return t.get("name").toLowerCase().indexOf(e) > -1
            })
        }),
        actions: {
            search: function (e) {
                this.set("searchTerm", e.toLowerCase().trim())
            }, clear: function () {
                var e = this.get("onClear");
                e && this.get("emptySearchTerm") && e(), this.set("searchTerm", "")
            }, selectProject: function (e) {
                var t = this.get("selectProject");
                t && t(e)
            }
        }
    })
}), define("portia-ui/components/project-listing", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.computed, n = Ember.inject.service;
    e.default = Ember.Component.extend({
        capabilities: n(),
        changes: n(),
        notificationManager: n(),
        tagName: "",
        project: null,
        isNoticed: !1,
        deployable: t.readOnly("capabilities.capabilities.deploy_projects"),
        versionControlled: t.readOnly("capabilities.capabilities.version_control"),
        notVersionControlled: t.not("versionControlled"),
        hasChanges: t.readOnly("changes.hasChanges"),
        hasNoChanges: t.not("hasChanges"),
        notPublished: t.or("hasNoChanges", "notVersionControlled"),
        isPublished: t.not("notPublished"),
        notNoticed: t.not("isNoticed"),
        isPulsing: t.and("hasChanges", "notNoticed"),
        downloadUrl: t("project", function () {
            return "/portia" + this.get("project._internalModel._links.self") + "/download"
        }),
        downloadCodeUrl: t("downloadUrl", function () {
            return this.get("downloadUrl") + "?format=code"
        }),
        actions: {
            deploy: function () {
                var e = this;
                this.get("project").deploy().then(function (t) {
                    e.get("notificationManager").showNotification(t.meta.title)
                }, function (t) {
                    var n = t.errors[0];
                    if (n.status > 499) throw t;
                    e.get("notificationManager").showNotification(n.title, n.detail), 409 === n.status && e.sendAction("conflict")
                })
            },
            deploy2Crawlab: function () {
                var e = this;
                this.get("project").deploy2Crawlab().then(function (t) {
                    e.get("notificationManager").showNotification(t.meta.title)
                }, function (t) {
                    var n = t.errors[0];
                    if (n.status > 499) throw t;
                    e.get("notificationManager").showNotification(n.title, n.detail), 409 === n.status && e.sendAction("conflict")
                })
            }, publish: function () {
                var e = this;
                this.get("project").publish().then(function (t) {
                    e.get("notificationManager").showNotification(t.meta.title)
                }, function (t) {
                    var n = t.errors[0];
                    if (n.status > 499) throw t;
                    e.get("notificationManager").showNotification(n.title, n.detail), 409 === n.status && e.sendAction("conflict")
                })
            }, discard: function () {
                var e = this;
                this.get("project").reset().then(function () {
                    e.sendAction("reload")
                }, function (t) {
                    var n = t.errors[0];
                    if (n.status > 499) throw t;
                    e.get("notificationManager").showNotification(n.title, n.detail)
                })
            }, clickProjectOptions: function () {
                this.set("isNoticed", !0)
            }
        }
    })
}), define("portia-ui/components/project-structure-listing", ["exports", "portia-ui/services/dispatcher", "ember-concurrency"], function (e, t, n) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var r = function () {
        function e(e, t) {
            var n = [], r = !0, a = !1, l = void 0;
            try {
                for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
            } catch (e) {
                a = !0, l = e
            } finally {
                try {
                    !r && i.return && i.return()
                } finally {
                    if (a) throw l
                }
            }
            return n
        }

        return function (t, n) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return e(t, n);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }(), a = Ember.computed, l = Ember.observer;
    e.default = Ember.Component.extend({
        dispatcher: Ember.inject.service(),
        uiState: Ember.inject.service(),
        tagName: "",
        spiderSearch: "",
        isFiltering: !1,
        didReceiveAttrs: function () {
            var e = this.get("sortedSpiders").slice(0, 15);
            this._addCurrentSpider(e), this.set("spiders", e), this.set("filteredSpiders", this.get("sortedSpiders"))
        },
        currentPage: 0,
        hasPreviousPage: a.gte("currentPage", 1),
        hasNextPage: a("currentPage", "filteredSpiders.length", function () {
            return 15 * (this.get("currentPage") + 1) < this.get("filteredSpiders.length")
        }),
        pagination: a("currentSpider", "currentPage", "spiders.[]", function () {
            if (this.get("currentSpider")) return "";
            if (this.get("filteredSpiders.length") <= 15) return "";
            var e = this.get("spiders.length"), t = this.get("currentPage"), n = 15 * t + 1;
            return "( " + n + "-" + Math.min(15 * (t + 1), n + e - 1) + " )"
        }),
        currentSpiderChanged: l("currentSpider", function () {
            var e = this;
            Ember.run.next(function () {
                e._addCurrentSpider(e.get("spiders")), e._addCurrentSpider(e.get("filteredSpiders"))
            })
        }),
        turnPage: (0, n.task)(regeneratorRuntime.mark(function e(t) {
            var r, a;
            return regeneratorRuntime.wrap(function (e) {
                for (; ;) switch (e.prev = e.next) {
                    case 0:
                        return this.set("isFiltering", !0), e.next = 3, (0, n.timeout)(200);
                    case 3:
                        this.set("isFiltering", !1), r = this.get("currentPage") + t, a = 15 * r, this.set("spiders", this.get("filteredSpiders").slice(a, a + 15)), this.set("currentPage", r);
                    case 8:
                    case"end":
                        return e.stop()
                }
            }, e, this)
        })).drop(),
        numSpiders: a.readOnly("project.spiders.length"),
        canAddSpider: (0, t.computedCanAddSpider)(),
        currentSpider: a.readOnly("uiState.models.spider"),
        noCurrentSpider: a.not("currentSpider"),
        currentSchema: a.readOnly("uiState.models.schema"),
        isLarge: a.gt("project.spiders.length", 15),
        sortedSpiders: a.sort("project.spiders", function (e, t) {
            var n = [e, t].map(function (e) {
                return e.get("id").toLowerCase()
            }), a = r(n, 2), l = a[0], o = a[1];
            return l < o ? -1 : l > o ? 1 : 0
        }),
        sawNewOrDeletedSpider: l("project.spiders.length", function () {
            var e = this;
            Ember.run.once(function () {
                var t = e.get("searchTerm") || "";
                e.get("filterSpiders").perform(e.get("sortedSpiders"), t)
            })
        }),
        filterSpiders: (0, n.task)(regeneratorRuntime.mark(function e(t, r) {
            return regeneratorRuntime.wrap(function (e) {
                for (; ;) switch (e.prev = e.next) {
                    case 0:
                        return this.set("isFiltering", !0), e.next = 3, (0, n.timeout)(800);
                    case 3:
                        this._updateFilter(this._fuzzyFilter(t, r), r);
                    case 4:
                    case"end":
                        return e.stop()
                }
            }, e, this)
        })).restartable(),
        addSpiderTooltipText: a("canAddSpider", {
            get: function () {
                return this.get("canAddSpider") ? "Create a new Spider" : "You must visit a website before you can create a Spider"
            }
        }),
        actions: {
            addSchema: function () {
                this.get("dispatcher").addSchema(this.get("project"), !0)
            }, removeSchema: function (e) {
                this.get("dispatcher").removeSchema(e)
            }, setSchemaDefault: function (e) {
                this.get("project.schemas").filterBy("default").forEach(function (e) {
                    return e.set("default", !1)
                }), e.set("default", !0), e.save()
            }, removeSchemaDefault: function (e) {
                e.set("default", !1), e.save()
            }, saveSchema: function (e) {
                e.save()
            }, addSpider: function () {
                this.get("dispatcher").addSpider(this.get("project"), !0)
            }
        },
        _fuzzyFilter: function (e, t) {
            if ("" === t) return this.get("sortedSpiders");
            var n = new RegExp(t.split("").join(".*"), "i");
            return e.filter(function (e) {
                return n.exec(e.get("id"))
            })
        },
        _addCurrentSpider: function (e) {
            var t = this.get("currentSpider");
            t && !e.includes(t) && e.pushObject(t)
        },
        _updateFilter: function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
            this.set("spiderSearch", t), this.set("currentPage", 0), this.set("isFiltering", !1), this.set("spiders", e.slice(0, 15)), this.set("filteredSpiders", e)
        }
    })
}), define("portia-ui/components/project-structure-spider-feed-url", ["exports", "portia-ui/utils/utils"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = Ember.computed;
    e.default = Ember.Component.extend({
        dispatcher: Ember.inject.service(),
        tagName: "",
        url: n.alias("startUrl.url"),
        isEditing: n.equal("url", ""),
        viewUrl: n("url", {
            get: function () {
                return this.get("url")
            }, set: function (e, t) {
                this.saveStartUrl(t)
            }
        }),
        saveStartUrl: function (e) {
            this.set("startUrl.url", (0, t.cleanUrl)(e)), this.get("spider").save()
        }
    })
}), define("portia-ui/components/project-structure-spider-generated-url", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.computed;
    e.default = Ember.Component.extend({
        tagName: "",
        fragments: t.alias("startUrl.fragments"),
        url: t("startUrl.url", "fragments.@each.type", "fragments.@each.value", function () {
            return this.get("startUrl").show()
        })
    })
}), define("portia-ui/components/project-structure-spider-url", ["exports", "portia-ui/utils/utils"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = Ember.computed;
    e.default = Ember.Component.extend({
        dispatcher: Ember.inject.service(),
        tagName: "",
        fragments: n.alias("startUrl.fragments"),
        url: n("startUrl.url", "fragments.@each.type", "fragments.@each.value", function () {
            return this.get("startUrl").show()
        }),
        viewUrl: Ember.computed("url", {
            get: function () {
                return this.get("url")
            }, set: function (e, t, n) {
                return this.send("saveStartUrl", n, t), t
            }
        }),
        handleNewUrl: function (e, n) {
            var r = this.get("spider"), a = (0, t.cleanUrl)(n);
            e ? this.get("dispatcher").replaceStartUrl(r, e, a) : this.get("dispatcher").addStartUrl(r, a)
        },
        removeStartUrl: function () {
            this.get("dispatcher").removeStartUrl(this.get("spider"), this.get("startUrl"))
        },
        actions: {
            saveStartUrl: function (e, t) {
                e !== t && (t ? this.handleNewUrl(e, t) : this.removeStartUrl())
            }
        }
    })
}), define("portia-ui/components/regex-pattern-list", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        classNames: ["regex-pattern-list"],
        list: [],
        newPattern: "",
        newPatternCorrect: Ember.computed("newPattern", function () {
            var e = this.get("newPattern");
            try {
                new RegExp(e)
            } catch (e) {
                return !1
            }
            return !0
        }),
        triggerChange: function () {
            this.attrs.onChange && this.attrs.onChange()
        },
        actions: {
            addPattern: function (e) {
                this.get("newPattern") && this.get("newPatternCorrect") && (this.set("newPattern", ""), this.get("list").addObject(e), this.triggerChange())
            }, clearPattern: function () {
                this.set("newPattern", "")
            }, changePattern: function (e, t) {
                var n = this.get("list"), r = n.objectAt(e);
                t !== r && (n.removeObject(t), n.replace(n.indexOf(r), 1, [t]), this.triggerChange())
            }, removePattern: function (e) {
                this.get("list").removeAt(e), this.triggerChange()
            }, stopPropagation: function (e) {
                e.stopPropagation()
            }
        }
    })
}), define("portia-ui/components/reorder-handler", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        attributeBindings: ["draggable", "style"],
        draggable: !0,
        tagName: "i",
        classNames: "fa fa-icon fa-arrows reorder-handler",
        dragStart: function (e) {
            var t = e.originalEvent.dataTransfer;
            t.effectAllowed = "move", t.setData("text/plain", "");
            var n = this.$().parentsUntil(".reorderable-list").eq(-1);
            t.addElement(n[0]), n.addClass("dragging").one("dragend", function () {
                n.removeClass("dragging")
            })
        }
    })
}), define("portia-ui/components/save-status", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        clock: Ember.inject.service(),
        savingNotification: Ember.inject.service(),
        tagName: "p",
        classNames: ["save-status", "text-center"],
        minSavingTime: 1e3,
        minSuccessTime: 5e3,
        init: function () {
            this._super.apply(this, arguments), this.wasSaving = !1
        },
        isSaving: Ember.computed("savingNotification.isSaving", {
            get: function () {
                var e = this;
                if (this.get("savingNotification.isSaving")) return this.startTime = +new Date, Ember.run.cancel(this.savingSchedule), !0;
                var t = Math.max(0, this.minSavingTime - (+new Date - this.startTime));
                return !!t && (this.savingSchedule = Ember.run.later(function () {
                    e.set("isSaving", e.get("savingNotification.isSaving"))
                }, t), !0)
            }, set: function (e, t) {
                return t
            }
        }),
        timeSinceLastSave: Ember.computed("clock.time", "savingNotification.lastSaved", function () {
            var e = this.get("clock.time"), t = this.get("savingNotification.lastSaved");
            return e && t ? moment(t).fromNow() : null
        }),
        labelColorClass: Ember.computed("isSaving", {
            get: function () {
                var e = this, t = this.get("isSaving");
                if (t) this.wasSaving = !0, Ember.run.cancel(this.colorSchedule); else if (this.wasSaving) return this.wasSaving = !1, this.colorSchedule = Ember.run.later(function () {
                    e.set("labelColorClass", e.get("isSaving") ? "info" : "default")
                }, this.minSuccessTime), "success";
                return t ? "info" : "default"
            }, set: function (e, t) {
                return t
            }
        })
    })
}), define("portia-ui/components/schema-structure-listing", ["exports", "portia-ui/utils/ensure-promise"], function (e, t) {
    function n(e, t) {
        return /^_/.test(e) ? "Invalid field name: field can't start with underscores" : "url" === e ? 'Invalid field name: naming a field "url" is not allowed asthere is already a field with this name' : t.findBy("name", e) ? "Invalid field name: There is already a field with that name" : null
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.validateFieldName = void 0, e.validateFieldName = n, e.default = Ember.Component.extend({
        notificationManager: Ember.inject.service(),
        dispatcher: Ember.inject.service(),
        tagName: "",
        actions: {
            addField: function () {
                this.get("dispatcher").addField(this.get("schema"), void 0, !0)
            }, removeField: function (e) {
                this.get("dispatcher").removeField(e)
            }, validateFieldName: function (e, t) {
                var r = this;
                return this.get("schema.fields").then(function (a) {
                    a = a.reject(function (t) {
                        return t === e
                    });
                    var l = n(t, a);
                    return l && r.get("notificationManager").showWarningNotification(l), !l
                })
            }, saveField: function (e) {
                (0, t.default)(e).then(function (e) {
                    e && e.save()
                })
            }
        }
    })
}), define("portia-ui/components/scrapinghub-links", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({tagName: ""})
}), define("portia-ui/components/select-box", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "",
        choices: [],
        buttonClass: null,
        menuAlign: "left",
        menuClass: null,
        menuContainer: null,
        name: null,
        open: !1,
        value: null,
        valueAttribute: null,
        isDisabled: !1,
        viewValue: Ember.computed("value", {
            get: function () {
                return this.get("value")
            }, set: function (e, t) {
                return t
            }
        }),
        didInsertElement: function () {
            this.get("open") && Ember.run.next(this, this.setInputFocus)
        },
        inputId: Ember.computed("elementId", function () {
            return this.get("elementId") + "-input"
        }),
        updateInputFocus: Ember.observer("open", function () {
            Ember.run.scheduleOnce("afterRender", this, this.setInputFocus)
        }),
        setInputFocus: function () {
            var e = Ember.$("#" + this.get("inputId")).get(0);
            e && this.get("open") ? e.focus() : this.get("isDestroying") || e.blur()
        },
        actions: {
            setViewValue: function (e) {
                this.set("viewValue", e)
            }, setValue: function (e) {
                this.setProperties({value: e, viewValue: e})
            }, setValueAndClose: function (e) {
                this.setProperties({open: !1, value: e}), this.attrs.onChange && this.attrs.onChange()
            }, menuClicked: function () {
                var e = this.get("onClick");
                e && e()
            }, menuClosed: function (e) {
                if (this.get("open")) if ("escape" === e) this.setProperties({
                    open: !1,
                    viewValue: this.get("value")
                }); else {
                    var t = this.get("viewValue");
                    t && t.onMenuClosed && t.onMenuClosed.call ? t.onMenuClosed() : this.setProperties({
                        open: !1,
                        value: t
                    }), this.attrs.onChange && this.attrs.onChange()
                }
            }
        }
    })
}), define("portia-ui/components/show-links-button", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.computed, n = Ember.inject.service;
    e.default = Ember.Component.extend({
        browser: n(),
        disableLinks: t.readOnly("browser.invalidUrl"),
        spider: null,
        actions: {
            toggleShowLinks: function () {
                var e = this.get("spider");
                e.toggleProperty("showLinks"), e.save()
            }
        }
    })
}), define("portia-ui/components/show-links-legend", ["exports", "portia-ui/utils/colors"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "",
        colors: t.NAMED_COLORS,
        followedLinks: 0,
        jsLinks: 0,
        ignoredLinks: 0
    })
}), define("portia-ui/components/sliding-main", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        uiState: Ember.inject.service(),
        tagName: "main",
        classNameBindings: ["slideRight"],
        slideRight: Ember.computed.bool("uiState.slideMain")
    })
}), define("portia-ui/components/spider-indentation", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({tagName: ""})
}), define("portia-ui/components/spider-message", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.computed;
    e.default = Ember.Component.extend({
        api: Ember.inject.service(),
        notificationManager: Ember.inject.service(),
        hasSpider: t.bool("currentSpider"),
        actions: {
            runSpider: function (e) {
                var t = this;
                this.get("api").post("schedule", {
                    model: e,
                    jsonData: {data: {type: "spiders", id: e.id}}
                }).then(function () {
                    t.get("notificationManager").showNotification("Your spider has been scheduled successfully")
                }, function (e) {
                    var n = e.errors[0];
                    if (n.status > 499) throw e;
                    t.get("notificationManager").showNotification(n.title, n.detail)
                })
            }
        }
    })
}), define("portia-ui/components/spider-options", ["exports", "portia-ui/mixins/save-spider-mixin"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend(t.default, {
        tagName: "",
        spider: null,
        actions: {
            save: function () {
                this.saveSpider()
            }
        }
    })
}), define("portia-ui/components/spider-row", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.computed, n = Ember.inject.service;
    e.default = Ember.Component.extend({
        tagName: "",
        store: n(),
        uiState: n(),
        dispatcher: n(),
        savingNotification: n(),
        notificationManager: n(),
        projects: [],
        isCopyingSpider: !1,
        init: function () {
            this._super.apply(this, arguments);
            var e = this.get("project.id");
            this.set("projects", this.get("store").peekAll("project").rejectBy("id", e))
        },
        currentSpider: t.readOnly("uiState.models.spider"),
        downloadUrl: t("spider", function () {
            return "/portia" + this.get("spider._internalModel._links.self") + "/download"
        }),
        downloadCodeUrl: t("downloadUrl", function () {
            return this.get("downloadUrl") + "?format=code"
        }),
        notifyError: function (e) {
            var t = "Renaming the spider '" + e.get("id") + "' failed.";
            this.get("notificationManager").showErrorNotification(t), e.set("name", e.get("id"))
        },
        actions: {
            validateSpiderName: function (e, t) {
                var n = this.get("notificationManager");
                return /^[a-zA-Z0-9][a-zA-Z0-9_\.-]*$/.test(t) ? e.get("id") === t || !(this.get("project.spiders").mapBy("id").indexOf(t) >= 0 && (n.showWarningNotification('Invalid spider name.\n                    A spider already exists with the name "' + t + '"'), 1)) : (n.showWarningNotification("Invalid spider name.\n                    Only letters, numbers, underscores, dashes and dots are allowed."), !1)
            }, removeSpider: function (e) {
                this.get("dispatcher").removeSpider(e)
            }, saveSpiderName: function (e) {
                var t = this, n = this.get("dispatcher"), r = this.get("savingNotification");
                r.start(), n.changeSpiderName(e).then(function (t) {
                    return n.changeId(e, t)
                }).catch(function () {
                    return t.notifyError(e)
                }).finally(function () {
                    return r.end()
                })
            }, closeSpiderOptions: function () {
                this.set("isCopyingSpider", !1)
            }, copySpider: function () {
                this.set("isCopyingSpider", !0)
            }, copyToProject: function (e, t) {
                t.copy({
                    from: this.get("project.id"),
                    data: [{id: this.get("spider.id"), type: "spiders"}]
                }).then(this._copyProjectSuccess(t)).catch(this._copyProjectError.bind(this)).finally(this._afterCopyProject(e))
            }
        },
        _copyProjectSuccess: function (e) {
            var t = this;
            return function () {
                var n = "Spider " + t.get("spider.id") + " copied\n                        successfully to project " + e.get("name") + ".";
                t.get("notificationManager").showNotification(n)
            }
        },
        _copyProjectError: function (e) {
            var t = e.errors[0];
            if (t.status > 499) throw e;
            this.get("notificationManager").showErrorNotification(t.title, t.detail)
        },
        _afterCopyProject: function (e) {
            var t = this;
            return function () {
                e.closeMenu(), t.set("isCopyingSpider", !1)
            }
        }
    })
}), define("portia-ui/components/spider-structure-listing", ["exports", "portia-ui/services/dispatcher"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        browser: Ember.inject.service(),
        dispatcher: Ember.inject.service(),
        uiState: Ember.inject.service(),
        tagName: "",
        project: null,
        spider: null,
        newStartUrl: null,
        canAddSample: (0, t.computedCanAddSample)("spider"),
        currentSample: Ember.computed.readOnly("uiState.models.sample"),
        init: function () {
            this._super(), this.set("newUrl", !1)
        },
        getNewStartUrl: function (e) {
            var t = "";
            if (e) {
                var n = this.get("spider");
                t = this.get("dispatcher").addStartUrl(n, e)
            }
            return t
        },
        getNewUrl: function () {
            var e = this.get("browser.url") || "", t = this.get("spider.startUrls").mapBy("url");
            return e && t.includes(e) && (e = ""), e
        },
        actions: {
            addStartUrl: function () {
                this.get("closeOptions")();
                var e = this.getNewUrl();
                this.setProperties({newUrl: !0, urlValue: e, newStartUrl: this.getNewStartUrl(e)})
            }, addGenerationUrl: function () {
                var e = this.get("spider"), t = this.get("browser.url") || "",
                    n = this.get("dispatcher").addGeneratedUrl(e, t);
                this.get("transitionToFragments")(e.get("startUrls").indexOf(n))
            }, addFeedUrl: function () {
                var e = this.get("spider"), t = this.get("dispatcher").addFeedUrl(e, "");
                this.get("transitionToFragments")(e.get("startUrls").indexOf(t))
            }, removeStartUrl: function (e) {
                this.get("dispatcher").removeStartUrl(this.get("spider"), e), this.get("closeOptions")()
            }, addSample: function () {
                this.get("dispatcher").addSample(this.get("spider"), !0)
            }, removeSample: function (e) {
                this.get("dispatcher").removeSample(e)
            }, saveSample: function (e) {
                e.save()
            }
        }
    })
}), define("portia-ui/components/start-url-options", ["exports", "ember-concurrency"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = Ember.computed;
    e.default = Ember.Component.extend({
        startUrl: n("spider.startUrls.[]", "startUrlId", function () {
            return this.get("spider").get("startUrls").objectAt(this.get("startUrlId"))
        }), title: n.alias("startUrl.optionsTitle"), saveSpider: (0, t.task)(regeneratorRuntime.mark(function e() {
            return regeneratorRuntime.wrap(function (e) {
                for (; ;) switch (e.prev = e.next) {
                    case 0:
                        return e.next = 2, (0, t.timeout)(1e3);
                    case 2:
                        this.get("spider").save();
                    case 3:
                    case"end":
                        return e.stop()
                }
            }, e, this)
        })).restartable()
    })
}), define("portia-ui/components/tool-group", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        uiState: Ember.inject.service(),
        classNames: ["tool-group"],
        classNameBindings: ["collapsed"],
        onClose: !1,
        collapsible: !0,
        collapsed: !1,
        selected: null,
        init: function () {
            this._super();
            var e = this.get("elementId");
            Ember.mixin(this, {
                selected: Ember.computed.alias("uiState.selectedTools." + e),
                collapsed: Ember.computed.alias("uiState.collapsedPanels." + e)
            })
        },
        actions: {
            close: function () {
                this.attrs.onClose && this.attrs.onClose()
            }, selectTab: function (e) {
                this.setProperties({selected: e, collapsed: !1})
            }, toggleCollapsed: function () {
                this.toggleProperty("collapsed")
            }
        }
    })
}), define("portia-ui/components/tool-panel", ["exports", "portia-ui/utils/computed"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        classNames: ["tool-panel"],
        classNameBindings: ["active::hide"],
        active: (0, t.computedPropertiesEqual)("toolId", "group.selected")
    })
}), define("portia-ui/components/tool-tab", ["exports", "portia-ui/utils/computed"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "li",
        classNameBindings: ["active"],
        active: (0, t.computedPropertiesEqual)("toolId", "group.selected"),
        didInsertElement: function () {
            var e = this;
            this.$().prev().length || Ember.run.schedule("afterRender", function () {
                e.get("group.selected") || e.send("selectTab")
            })
        },
        actions: {
            selectTab: function () {
                this.get("group").send("selectTab", this.get("toolId"))
            }
        }
    })
}), define("portia-ui/components/tooltip-container", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "",
        delay: {show: 500, hide: 0},
        placement: "top",
        text: !1,
        tooltipClasses: null,
        tooltipContainer: !1,
        tooltipFor: !1,
        triggerEvents: "hover",
        viewport: {selector: "body", padding: 0},
        init: function () {
            this._super(), this.$tooltipElement = null
        },
        didInsertElement: function () {
            Ember.run.next(this, this.createTooltip)
        },
        willDestroyElement: function () {
            Ember.run.next(this, this.destroyTooltip)
        },
        createTooltip: function () {
            var e = this.get("tooltipFor");
            (this.$tooltipElement = Ember.$("#" + e)).tooltip({
                template: Ember.$('[data-tooltip-id="' + this.elementId + '"]').detach(),
                title: !0,
                container: this.get("tooltipContainer"),
                delay: this.get("delay"),
                placement: this.get("placement"),
                trigger: this.get("triggerEvents"),
                viewport: this.get("viewport")
            })
        },
        destroyTooltip: function () {
            this.$tooltipElement.tooltip("destroy"), this.$tooltipElement = null
        },
        toggleChanged: Ember.observer("toggleTooltip", function () {
            var e = this.$tooltipElement;
            if (e) {
                var t = this.get("toggleTooltip") ? "show" : "hide";
                e.tooltip(t)
            }
        })
    })
}), define("portia-ui/components/tooltip-icon", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        tagName: "",
        actions: {
            onClick: function () {
                var e = this.get("onClick");
                e && e()
            }
        }
    })
}), define("portia-ui/components/tree-list-item-row", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        classNames: ["tree-list-item-row"],
        mouseEnter: function () {
            if (this.attrs.onMouseEnter && this.attrs.onMouseEnter.call) {
                var e;
                (e = this.attrs).onMouseEnter.apply(e, arguments)
            }
        },
        mouseLeave: function () {
            if (this.attrs.onMouseLeave && this.attrs.onMouseLeave.call) {
                var e;
                (e = this.attrs).onMouseLeave.apply(e, arguments)
            }
        }
    })
}), define("portia-ui/components/tree-list-item", ["exports", "portia-ui/components/animation-container"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.extend({
        tagName: "li",
        classNames: ["tree-list-item"],
        setWidth: !1,
        isCentered: !1,
        hasChildren: !1
    })
}), define("portia-ui/components/tree-list", ["exports", "portia-ui/components/animation-container"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = function () {
        function e(e, t) {
            var n = [], r = !0, a = !1, l = void 0;
            try {
                for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
            } catch (e) {
                a = !0, l = e
            } finally {
                try {
                    !r && i.return && i.return()
                } finally {
                    if (a) throw l
                }
            }
            return n
        }

        return function (t, n) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return e(t, n);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }();
    e.default = t.default.extend({
        tagName: "div",
        classNames: ["tree-list"],
        reorderable: !1,
        classNameBindings: ["reorderable:reorderable-list"],
        setWidth: !1,
        drop: function (e) {
            if (this.get("reorderable")) {
                e.preventDefault(), this.$(".drop-helper").remove();
                var t = this.$(".dragging"), r = this.getDropTarget(e.originalEvent), a = n(r, 2), l = a[0], o = a[1];
                if (o && l === t.prev()[0] || !o && l === t.next()[0] || l === t[0]) return;
                var i = t.prevAll().length, c = Ember.$(l).prevAll().length + (o ? 1 : 0);
                Ember.$(l).prevAll().filter(t).length && (c -= 1), this.sendAction("reorder", i, c)
            }
        },
        dragLeave: function (e) {
            this.get("reorderable") && (e.preventDefault(), this.$(".drop-helper").remove())
        },
        getDropTarget: function (e) {
            var t = this.$()[0];
            if (e.target === t) return [null, null];
            var n = Ember.$(e.target).parentsUntil(this.$()).get(-1), r = e.target.parentNode === t ? e.target : n,
                a = r.getBoundingClientRect();
            return [r, e.clientY - a.top > a.height / 2]
        },
        dragOver: function (e) {
            if (this.get("reorderable")) {
                this.$(".drop-helper").remove();
                var t = this.getDropTarget(e.originalEvent), r = n(t, 2), a = r[0], l = r[1];
                if (a) {
                    e.preventDefault();
                    Ember.$("<div/>").addClass("drop-helper")[l ? "insertAfter" : "insertBefore"](a)
                }
            }
        }
    })
}), define("portia-ui/components/url-bar", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Component.extend({
        browser: Ember.inject.service(),
        tagName: "form",
        autofocus: !1,
        backDisabled: Ember.computed.or("disabled", "noBackUrl"),
        disabled: Ember.computed.readOnly("browser.disabled"),
        forwardDisabled: Ember.computed.or("disabled", "noForwardUrl"),
        loading: Ember.computed.readOnly("browser.loading"),
        mode: Ember.computed.readOnly("browser.mode"),
        noBackUrl: Ember.computed.equal("browser.backBuffer.length", 0),
        noForwardUrl: Ember.computed.equal("browser.forwardBuffer.length", 0),
        url: Ember.computed.reads("browser.url"),
        updateUrl: Ember.observer("browser.url", function () {
            this.set("url", this.get("browser.url"))
        }),
        submit: function (e) {
            e.stopPropagation(), e.preventDefault()
        },
        actions: {
            back: function () {
                this.get("disabled") || this.get("browser").back()
            }, forward: function () {
                this.get("disabled") || this.get("browser").forward()
            }, submit: function (e) {
                this.get("disabled") || this.setProperties({"browser.url": e, "browser.baseurl": null})
            }
        }
    })
}), define("portia-ui/controllers/projects/project", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Controller.extend({
        browser: Ember.inject.service(),
        queryParams: ["url", "baseurl"],
        url: Ember.computed.alias("browser.url"),
        baseurl: Ember.computed.alias("browser.baseurl"),
        clickHandler: null,
        setClickHandler: function (e) {
            this.clickHandler = e
        },
        clearClickHandler: function () {
            this.clickHandler = null
        },
        actions: {
            viewPortClick: function () {
                this.clickHandler && this.clickHandler.apply(this, arguments)
            }
        }
    })
}), define("portia-ui/controllers/projects/project/conflicts", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Controller.extend({
        projectController: Ember.inject.controller("projects.project"),
        currentFileName: null,
        conflictedKeyPaths: {},
        conflictedFiles: Ember.computed("model", function () {
            return Object.keys(this.get("model")).sort().map(function (e) {
                return {name: e, encodedName: btoa(e)}
            })
        })
    })
}), define("portia-ui/controllers/projects/project/conflicts/conflict", ["exports", "portia-ui/utils/types"], function (e, t) {
    function n(e) {
        if (Array.isArray(e)) {
            for (var t = 0, n = Array(e.length); t < e.length; t++) n[t] = e[t];
            return n
        }
        return Array.from(e)
    }

    function r(e) {
        return (0, t.isObject)(e) && "__CONFLICT" in e
    }

    function a(e) {
        return e.sort(function (e, t) {
            if (e.length !== t.length) return e.length > t.length ? -1 : 1;
            for (var n = 0, r = e.length; n < r; n++) if (e[n] !== t[n]) return /^\d+$/.test(e[n] + t[n]) ? parseInt(t[n]) - parseInt(e[n]) : e[n] > t[n] ? -1 : 1
        })
    }

    function l(e, t) {
        var n = a(Object.keys(t).map(function (e) {
            return e.split(".")
        })), r = !0, l = !1, i = void 0;
        try {
            for (var c, s = n[Symbol.iterator](); !(r = (c = s.next()).done); r = !0) {
                var u = c.value;
                o(e, u, t[u.join(".")])
            }
        } catch (e) {
            l = !0, i = e
        } finally {
            try {
                !r && s.return && s.return()
            } finally {
                if (l) throw i
            }
        }
        return e
    }

    function o(e, a, l) {
        if ((0, t.isArray)(e)) {
            for (var i = parseInt(a[0]) + 1, c = 0, s = e.length; c < s; c++) if (r(e[c]) && 0 === --i) return void e.splice.apply(e, [c, 1].concat(n(l)))
        } else if ((0, t.isObject)(e)) return void (1 === a.length ? e[a] = l : o(e[a[0]], a.slice(1), l));
        throw new Error("Could not patch object")
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Controller.extend({
        projectController: Ember.inject.controller("projects.project"),
        init: function () {
            this.set("pendingPaths", []), this.set("resolvedValues", {}), this._super()
        },
        getResolvedTree: function () {
            var e = this.get("model.contents");
            return e = JSON.parse(JSON.stringify(e)), l(e, this.get("resolvedValues")), e
        },
        haveConflicts: Ember.computed("pendingPaths.[]", function () {
            return this.get("pendingPaths").length > 0
        }),
        actions: {
            updateConflict: function (e, t, n) {
                t ? (this.get("pendingPaths").removeObject(e), this.get("resolvedValues")[e] = n) : this.get("pendingPaths").contains(e) || this.get("pendingPaths").pushObject(e)
            }, saveFile: function () {
                var e = this, t = this.get("projectController.model.id"), n = this.get("model.file"),
                    r = this.getResolvedTree(), a = "/projects/" + t + "/spec/" + n.replace(/\.json$/, "");
                $.post(a, JSON.stringify(r)).then(function () {
                    e.transitionTo("projects.project.conflicts")
                })
            }
        }
    })
}), define("portia-ui/controllers/projects/project/schema/field/options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Controller.extend({
        actions: {
            closeOptions: function () {
                this.send("close")
            }
        }
    })
}), define("portia-ui/controllers/projects/project/spider", ["exports", "portia-ui/utils/colors"], function (e, t) {
    function n(e) {
        return Ember.computed("allLinkElements", "extractedItems.links", function () {
            var t = this.get("allLinkElements"), n = this.getWithDefault("extractedItems.links", {}), r = [], a = !0,
                l = !1, o = void 0;
            try {
                for (var i, c = t[Symbol.iterator](); !(a = (i = c.next()).done); a = !0) {
                    var s = i.value, u = URI(s.href).fragment("").toString();
                    e(u, n) && r.push(s)
                }
            } catch (e) {
                l = !0, o = e
            } finally {
                try {
                    !a && c.return && c.return()
                } finally {
                    if (l) throw o
                }
            }
            return r
        })
    }

    function r(e, t) {
        return Ember.computed.map(e, function (e) {
            return {guid: Ember.guidFor(e), element: e, color: t}
        })
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Controller.extend({
        extractedItems: Ember.inject.service(),
        selectorMatcher: Ember.inject.service(),
        webSocket: Ember.inject.service(),
        linkSelector: 'a[href]:not([href=""]):not([href^="javascript:"])',
        allLinkElements: [],
        showExtractedItems: Ember.computed.bool("extractedItems.items.length"),
        followedLinkElements: n(function (e, t) {
            return "raw" === t[e]
        }),
        jsLinkElements: n(function (e, t) {
            return "js" === t[e]
        }),
        ignoredLinkElements: n(function (e, t) {
            return !t[e]
        }),
        followedLinkOverlayElements: r("followedLinkElements", t.NAMED_COLORS.green),
        jsLinkOverlayElements: r("jsLinkElements", t.NAMED_COLORS.blue),
        ignoredLinkOverlayElements: r("ignoredLinkElements", t.NAMED_COLORS.red),
        linkOverlayElements: Ember.computed("followedLinkOverlayElements", "jsLinkOverlayElements", "ignoredLinkOverlayElements", function () {
            var e = this.get("followedLinkOverlayElements"), t = this.get("jsLinkOverlayElements"),
                n = this.get("ignoredLinkOverlayElements");
            return [].concat(e).concat(t).concat(n)
        }),
        init: function () {
            var e = this.get("webSocket");
            e.addCommand("metadata", this, this.msgMetadata), e.addCommand("update_spider", this, this.msgMetadata)
        },
        activate: function () {
            this.get("selectorMatcher").register(this.linkSelector, this, this.updateLinkElements)
        },
        deactivate: function () {
            this.get("selectorMatcher").unRegister(this.linkSelector, this, this.updateLinkElements)
        },
        updateLinkElements: function (e) {
            this.set("allLinkElements", e)
        }
    })
}), define("portia-ui/controllers/projects/project/spider/link-options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Controller.extend({
        actions: {
            closeOptions: function () {
                this.send("close")
            }
        }
    })
}), define("portia-ui/controllers/projects/project/spider/options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Controller.extend({
        actions: {
            closeOptions: function () {
                this.send("close")
            }
        }
    })
}),define("portia-ui/controllers/projects/project/spider/sample/data", ["exports", "ember-concurrency", "portia-ui/utils/colors", "portia-ui/utils/selectors"], function (e, t, n, r) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Controller.extend({
        browser: Ember.inject.service(),
        dispatcher: Ember.inject.service(),
        uiState: Ember.inject.service(),
        selectionModeIcons: {select: "tool-select", add: "tool-add", remove: "tool-remove", edit: "tool-multiple"},
        selectionModeText: {
            select: "Select an existing annotation",
            add: "Add a new annotation",
            remove: "Remove an annotation",
            edit: "Add/remove extra elements from an existing annotation"
        },
        selectionModeIds: {
            select: "tool-select-button",
            add: "tool-add-button",
            remove: "tool-remove-button",
            edit: "tool-multiple-button"
        },
        cssEnabled: Ember.computed.readOnly("browser.cssEnabled"),
        magicToolActive: Ember.computed.alias("uiState.selectedTools.magicToolActive"),
        hoveredElement: Ember.computed.readOnly("uiState.viewPort.hoveredElement"),
        originalSelectedElement: Ember.computed.alias("uiState.viewPort.originalSelectedElement"),
        sample: Ember.computed.readOnly("model"),
        selectedModel: Ember.computed.alias("uiState.viewPort.selectedModel"),
        selectionMode: Ember.computed.alias("uiState.selectedTools.selectionMode"),
        hoveredModels: Ember.computed("uiState.viewPort.hoveredModels", "hoveredElement", "sample.dataStructure.annotations", {
            get: function (e) {
                var t = this.get("uiState.viewPort.hoveredModels");
                if (t !== this._hoveredModels) return this.set(e, t);
                var n = this.get("hoveredElement"), r = void 0;
                if (n) {
                    var a = this.get("sample.dataStructure.annotations");
                    r = a && a.get(Ember.guidFor(n))
                }
                return r = (r || []).filterBy("constructor.modelName", "annotation"), this.set(e, r)
            }, set: function (e, t) {
                return this._hoveredModels = t, this.set("uiState.viewPort.hoveredModels", t)
            }
        }),
        selectedModelElements: Ember.computed("selectedModel.elements", function () {
            return this.get("selectedModel.elements") || []
        }),
        selectedElement: Ember.computed("uiState.viewPort.selectedElement", "selectedModelElements.[]", {
            get: function () {
                var e = this.get("uiState.viewPort.selectedElement"), t = this.get("selectedModelElements");
                return e && t.includes(e) ? e : this.set("selectedElement", t[0])
            }, set: function (e, t) {
                return this.set("uiState.viewPort.selectedElement", t)
            }
        }),
        activeSelectionMode: Ember.computed("selectionMode", "magicToolActive", "hoveredElement", "hoveredModels.[]", "selectedElement", "selectedModel", "selectedModelElements.length", "generalizableModel", function () {
            var e = this.get("selectionMode"), t = this.get("magicToolActive");
            if (e) return e;
            if (t) {
                var n = this.get("hoveredElement"), r = this.getWithDefault("hoveredModels", []),
                    a = this.get("selectedModel");
                return r.length ? r.includes(a) ? 1 === this.get("selectedModelElements.length") ? "remove" : "edit" : "select" : n ? this.get("generalizableModel") || a && 0 === this.get("selectedModelElements.length") ? "edit" : "add" : "select"
            }
        }),
        annotationColors: Ember.computed("sample.orderedAnnotations.length", "activeSelectionMode", "hoveredElement", function () {
            var e = this.getWithDefault("sample.orderedAnnotations.length", 0);
            return "add" === this.get("activeSelectionMode") && this.get("hoveredElement") ? (0, n.getColors)(e + 1) : e ? (0, n.getColors)(e) : []
        }),
        generalizableModel: Ember.computed("selectionMode", "selectedModel", "hoveredElement", "sample.orderedChildren.@each.elements", function () {
            var e = "edit" === this.get("selectionMode"), t = this.get("selectedModel"), n = this.get("hoveredElement");
            if (n) {
                if (t && e) return t;
                var a = this.get("sample.orderedAnnotations");
                if (a.length) {
                    var l = a.slice();
                    t && (l.removeObject(t), l.unshift(t));
                    var o = (0, r.elementPath)(n), i = l.map(function (t) {
                        var a = r.BaseSelectorGenerator.create({elements: t.get("elements")}),
                            l = a.generalizationDistance(n);
                        if (l < 1 / 0 && !e) {
                            var i = t.get("elements").map(r.elementPath), c = t.get("parent.elements"), s = !0, u = !1,
                                d = void 0;
                            try {
                                e:for (var m, p = c[Symbol.iterator](); !(s = (m = p.next()).done); s = !0) {
                                    var h = m.value, f = (0, r.elementPath)(h), b = f.length - 1, g = !0, v = !1,
                                        y = void 0;
                                    try {
                                        for (var C, x = i[Symbol.iterator](); !(g = (C = x.next()).done); g = !0) {
                                            var E = C.value;
                                            if (h === E[b] && h === o[b]) {
                                                l = 1 / 0;
                                                break e
                                            }
                                        }
                                    } catch (e) {
                                        v = !0, y = e
                                    } finally {
                                        try {
                                            !g && x.return && x.return()
                                        } finally {
                                            if (v) throw y
                                        }
                                    }
                                }
                            } catch (e) {
                                u = !0, d = e
                            } finally {
                                try {
                                    !s && p.return && p.return()
                                } finally {
                                    if (u) throw d
                                }
                            }
                        }
                        return {annotation: t, distance: l}
                    }).sortBy("distance"), c = i[0], s = c.annotation, u = c.distance;
                    if (e || u < (t ? 4 : 2)) return s
                }
            }
        }),
        hoverOverlayColor: Ember.computed("showHoverOverlay", "annotationColors.length", "hoveredModels.firstObject.orderedIndex", "generalizableModel.orderedIndex", "selectedModel.orderedIndex", "activeSelectionMode", function () {
            if (this.get("showHoverOverlay")) {
                var e = this.getWithDefault("annotationColors", []), t = this.get("activeSelectionMode");
                if ("add" === t) return e.get("lastObject");
                if ("select" === t || "remove" === t) return e[this.get("hoveredModels.firstObject.orderedIndex")];
                if ("edit" === t) return e[this.get("generalizableModel.orderedIndex")] || e[this.get("selectedModel.orderedIndex")]
            }
        }),
        showHoverOverlay: Ember.computed("hoveredElement", "hoveredModels.[]", "generalizableModel", "selectedModel", "activeSelectionMode", function () {
            var e = this.get("activeSelectionMode"), t = this.get("hoveredElement"), n = this.get("hoveredModels");
            if (t) {
                if ("add" === e) return !0;
                if (("select" === e || "remove" === e) && n.length) return !0;
                if ("edit" === e && (this.get("generalizableModel") || this.get("selectedModel"))) return !0
            }
            return !1
        }),
        _selectElement: (0, t.task)(regeneratorRuntime.mark(function e() {
            var n, r, a, l, o, i, c, s, u, d, m;
            return regeneratorRuntime.wrap(function (e) {
                for (; ;) switch (e.prev = e.next) {
                    case 0:
                        return e.next = 2, (0, t.timeout)(1e3);
                    case 2:
                        n = this.get("dispatcher"), r = this.get("magicToolActive"), a = this.get("activeSelectionMode"), l = this.get("hoveredElement"), o = this.get("hoveredModels"), i = this.get("selectedModel"), e.t0 = a, e.next = "select" === e.t0 ? 11 : "add" === e.t0 ? 13 : "remove" === e.t0 ? 15 : "edit" === e.t0 ? 20 : 23;
                        break;
                    case 11:
                        return o.length ? (c = o[0], n.selectAnnotationElement(c, l, !0)) : n.clearSelection(), e.abrupt("break", 23);
                    case 13:
                        return l ? n.addAnnotation(null, l, void 0, !0) : n.clearSelection(), e.abrupt("break", 23);
                    case 15:
                        return s = this.get("uiState.models.annotation"), u = s.get("field.content"), s.set("field", u), s.save().then(function () {
                            i ? n.removeAnnotation(i) : o.length ? n.removeAnnotation(o[0]) : n.clearSelection()
                        }), e.abrupt("break", 23);
                    case 20:
                        return d = this.get("generalizableModel") || i, l ? d && !o.includes(d) ? n.addElementToAnnotation(d, l) : o.length && (m = void 0, m = i || (o.find(function (e) {
                            return (e.get("elements") || []).length > 1
                        }) || o[0]), n.removeElementFromAnnotation(m, l)) : n.clearSelection(), e.abrupt("break", 23);
                    case 23:
                        r && this.set("selectionMode", null);
                    case 24:
                    case"end":
                        return e.stop()
                }
            }, e, this)
        })).drop(),
        actions: {
            toggleCSS: function () {
                var e = this.get("browser");
                this.get("cssEnabled") ? e.disableCSS() : e.enableCSS()
            }, toggleMagicTool: function () {
                var e = this.get("magicToolActive"), t = this.get("selectionMode");
                e ? (this.set("magicToolActive", !1), t || this.set("selectionMode", "add")) : this.setProperties({
                    magicToolActive: !0,
                    selectionMode: null
                })
            }, selectElement: function () {
                this.get("_selectElement").perform()
            }
        }
    })
}),define("portia-ui/controllers/projects/project/spider/sample/data/annotation/options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Controller.extend({
        actions: {
            closeOptions: function () {
                this.send("close")
            }
        }
    })
}),define("portia-ui/helpers/and", ["exports", "ember-truth-helpers/helpers/and"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = null;
    Ember.Helper ? n = Ember.Helper.helper(t.andHelper) : Ember.HTMLBars.makeBoundHelper && (n = Ember.HTMLBars.makeBoundHelper(t.andHelper)), e.default = n
}),define("portia-ui/helpers/array-get", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Helper.extend({
        compute: function (e) {
            return this.setProperties({obj: e[0], index: e[1]}), this.get("content")
        }, obj: null, index: null, content: Ember.computed("obj.[]", "index", function () {
            return this.get("obj").get(this.get("index"))
        }), contentDidChange: Ember.observer("content", function () {
            this.recompute()
        })
    })
}),define("portia-ui/helpers/attribute-annotation", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = function () {
        function e(e, t) {
            var n = [], r = !0, a = !1, l = void 0;
            try {
                for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
            } catch (e) {
                a = !0, l = e
            } finally {
                try {
                    !r && i.return && i.return()
                } finally {
                    if (a) throw l
                }
            }
            return n
        }

        return function (t, n) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return e(t, n);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }();
    e.default = Ember.Helper.extend({
        compute: function (e) {
            var n = t(e, 2), r = n[0], a = n[1];
            return this.setProperties({annotations: r, attribute: a}), this.get("content")
        }, annotations: null, attribute: null, content: Ember.computed("annotations.[]", "attribute", function () {
            var e = this.get("attribute");
            return this.getWithDefault("annotations", []).find(function (t) {
                return t.getWithDefault("attribute", null) === e
            }) || {}
        }), contentDidChange: Ember.observer("content", function () {
            this.recompute()
        })
    })
}),define("portia-ui/helpers/cancel-all", ["exports", "ember-concurrency/-helpers"], function (e, t) {
    function n(e) {
        var n = e[0];
        return n && "function" == typeof n.cancelAll || Ember.assert("The first argument passed to the `cancel-all` helper should be a Task or TaskGroup (without quotes); you passed " + n, !1), (0, t.taskHelperClosure)("cancelAll", e)
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.cancelHelper = n, e.default = Ember.Helper.helper(n)
}),define("portia-ui/helpers/chain-actions", ["exports"], function (e) {
    function t(e) {
        return function () {
            var t = !0, n = !1, r = void 0;
            try {
                for (var a, l = e[Symbol.iterator](); !(t = (a = l.next()).done); t = !0) {
                    var o = a.value;
                    o.call && o()
                }
            } catch (e) {
                n = !0, r = e
            } finally {
                try {
                    !t && l.return && l.return()
                } finally {
                    if (n) throw r
                }
            }
        }
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.chainActions = t, e.default = Ember.Helper.helper(t)
}),define("portia-ui/helpers/changeset", ["exports", "ember-changeset-validations/helpers/changeset"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), Object.defineProperty(e, "default", {
        enumerable: !0,
        get: function () {
            return t.default
        }
    }), Object.defineProperty(e, "changeset", {
        enumerable: !0, get: function () {
            return t.changeset
        }
    })
}),define("portia-ui/helpers/eq", ["exports", "ember-truth-helpers/helpers/equal"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = null;
    Ember.Helper ? n = Ember.Helper.helper(t.equalHelper) : Ember.HTMLBars.makeBoundHelper && (n = Ember.HTMLBars.makeBoundHelper(t.equalHelper)), e.default = n
}),define("portia-ui/helpers/gt", ["exports", "ember-truth-helpers/helpers/gt"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = null;
    Ember.Helper ? n = Ember.Helper.helper(t.gtHelper) : Ember.HTMLBars.makeBoundHelper && (n = Ember.HTMLBars.makeBoundHelper(t.gtHelper)), e.default = n
}),define("portia-ui/helpers/gte", ["exports", "ember-truth-helpers/helpers/gte"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = null;
    Ember.Helper ? n = Ember.Helper.helper(t.gteHelper) : Ember.HTMLBars.makeBoundHelper && (n = Ember.HTMLBars.makeBoundHelper(t.gteHelper)), e.default = n
}),define("portia-ui/helpers/guid", ["exports"], function (e) {
    function t(e) {
        var t = n(e, 1), r = t[0];
        return Ember.guidFor(r)
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.guid = t;
    var n = function () {
        function e(e, t) {
            var n = [], r = !0, a = !1, l = void 0;
            try {
                for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
            } catch (e) {
                a = !0, l = e
            } finally {
                try {
                    !r && i.return && i.return()
                } finally {
                    if (a) throw l
                }
            }
            return n
        }

        return function (t, n) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return e(t, n);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }();
    e.default = Ember.Helper.helper(t)
}),define("portia-ui/helpers/includes", ["exports"], function (e) {
    function t(e) {
        var t = n(e, 2), r = t[0], a = t[1];
        return r && r.includes && r.includes(a)
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.includes = t;
    var n = function () {
        function e(e, t) {
            var n = [], r = !0, a = !1, l = void 0;
            try {
                for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
            } catch (e) {
                a = !0, l = e
            } finally {
                try {
                    !r && i.return && i.return()
                } finally {
                    if (a) throw l
                }
            }
            return n
        }

        return function (t, n) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return e(t, n);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }();
    e.default = Ember.Helper.helper(t)
}),define("portia-ui/helpers/indexed-object", ["exports"], function (e) {
    function t(e) {
        var t = n(e, 1), r = t[0], a = {}, l = 0, o = !0, i = !1, c = void 0;
        try {
            for (var s, u = Object.keys(r)[Symbol.iterator](); !(o = (s = u.next()).done); o = !0) {
                var d = s.value;
                a[d] = {index: l, value: r[d]}, l += 1
            }
        } catch (e) {
            i = !0, c = e
        } finally {
            try {
                !o && u.return && u.return()
            } finally {
                if (i) throw c
            }
        }
        return a
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.indexedObject = t;
    var n = function () {
        function e(e, t) {
            var n = [], r = !0, a = !1, l = void 0;
            try {
                for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
            } catch (e) {
                a = !0, l = e
            } finally {
                try {
                    !r && i.return && i.return()
                } finally {
                    if (a) throw l
                }
            }
            return n
        }

        return function (t, n) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return e(t, n);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }();
    e.default = Ember.Helper.helper(t)
}),define("portia-ui/helpers/is-array", ["exports", "ember-truth-helpers/helpers/is-array"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = null;
    Ember.Helper ? n = Ember.Helper.helper(t.isArrayHelper) : Ember.HTMLBars.makeBoundHelper && (n = Ember.HTMLBars.makeBoundHelper(t.isArrayHelper)), e.default = n
}),define("portia-ui/helpers/is-empty-object", ["exports", "portia-ui/helpers/is-object"], function (e, t) {
    function n(e) {
        if (Array.isArray(e)) {
            for (var t = 0, n = Array(e.length); t < e.length; t++) n[t] = e[t];
            return n
        }
        return Array.from(e)
    }

    function r(e) {
        return (0, t.isObject)(e) && !Object.keys.apply(Object, n(e)).length
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.isEmptyObject = r, e.default = Ember.Helper.helper(r)
}),define("portia-ui/helpers/is-equal", ["exports", "ember-truth-helpers/helpers/is-equal"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), Object.defineProperty(e, "default", {
        enumerable: !0,
        get: function () {
            return t.default
        }
    }), Object.defineProperty(e, "isEqual", {
        enumerable: !0, get: function () {
            return t.isEqual
        }
    })
}),define("portia-ui/helpers/is-object-or-array", ["exports", "ember-truth-helpers/helpers/is-array", "portia-ui/helpers/is-object"], function (e, t, n) {
    function r(e) {
        return (0, n.isObject)(e) || (0, t.isArrayHelper)(e)
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.isObjectOrArray = r, e.default = Ember.Helper.helper(r)
}),define("portia-ui/helpers/is-object", ["exports", "portia-ui/utils/types"], function (e, t) {
    function n(e) {
        var n = r(e, 1), a = n[0];
        return "object" === (0, t.toType)(a)
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.isObject = n;
    var r = function () {
        function e(e, t) {
            var n = [], r = !0, a = !1, l = void 0;
            try {
                for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
            } catch (e) {
                a = !0, l = e
            } finally {
                try {
                    !r && i.return && i.return()
                } finally {
                    if (a) throw l
                }
            }
            return n
        }

        return function (t, n) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return e(t, n);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }();
    e.default = Ember.Helper.helper(n)
}),define("portia-ui/helpers/lt", ["exports", "ember-truth-helpers/helpers/lt"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = null;
    Ember.Helper ? n = Ember.Helper.helper(t.ltHelper) : Ember.HTMLBars.makeBoundHelper && (n = Ember.HTMLBars.makeBoundHelper(t.ltHelper)), e.default = n
}),define("portia-ui/helpers/lte", ["exports", "ember-truth-helpers/helpers/lte"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = null;
    Ember.Helper ? n = Ember.Helper.helper(t.lteHelper) : Ember.HTMLBars.makeBoundHelper && (n = Ember.HTMLBars.makeBoundHelper(t.lteHelper)), e.default = n
}),define("portia-ui/helpers/not-eq", ["exports", "ember-truth-helpers/helpers/not-equal"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = null;
    Ember.Helper ? n = Ember.Helper.helper(t.notEqualHelper) : Ember.HTMLBars.makeBoundHelper && (n = Ember.HTMLBars.makeBoundHelper(t.notEqualHelper)), e.default = n
}),define("portia-ui/helpers/not", ["exports", "ember-truth-helpers/helpers/not"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = null;
    Ember.Helper ? n = Ember.Helper.helper(t.notHelper) : Ember.HTMLBars.makeBoundHelper && (n = Ember.HTMLBars.makeBoundHelper(t.notHelper)), e.default = n
}),define("portia-ui/helpers/or", ["exports", "ember-truth-helpers/helpers/or"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = null;
    Ember.Helper ? n = Ember.Helper.helper(t.orHelper) : Ember.HTMLBars.makeBoundHelper && (n = Ember.HTMLBars.makeBoundHelper(t.orHelper)), e.default = n
}),
define("portia-ui/helpers/perform", ["exports", "ember-concurrency/-task-property", "ember-concurrency/-helpers"], function (e, t, n) {
    function r(e, r) {
        var a = e[0];
        return a instanceof t.Task || Ember.assert("The first argument passed to the `perform` helper should be a Task object (without quotes); you passed " + a, !1), (0, n.taskHelperClosure)("perform", e, r)
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.performHelper = r, e.default = Ember.Helper.helper(r)
}),define("portia-ui/helpers/pluralize", ["exports", "ember-inflector/lib/helpers/pluralize"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default
}),define("portia-ui/helpers/route-action", ["exports", "ember-route-action-helper/helpers/route-action"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), Object.defineProperty(e, "default", {
        enumerable: !0,
        get: function () {
            return t.default
        }
    })
}),define("portia-ui/helpers/singularize", ["exports", "ember-inflector/lib/helpers/singularize"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default
}),define("portia-ui/helpers/task", ["exports"], function (e) {
    function t(e) {
        if (Array.isArray(e)) {
            for (var t = 0, n = Array(e.length); t < e.length; t++) n[t] = e[t];
            return n
        }
        return Array.from(e)
    }

    function n(e) {
        return Array.isArray(e) ? e : Array.from(e)
    }

    function r(e) {
        var r = n(e), a = r[0], l = r.slice(1);
        return a._curry.apply(a, t(l))
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Helper.helper(r)
}),define("portia-ui/helpers/xor", ["exports", "ember-truth-helpers/helpers/xor"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = null;
    Ember.Helper ? n = Ember.Helper.helper(t.xorHelper) : Ember.HTMLBars.makeBoundHelper && (n = Ember.HTMLBars.makeBoundHelper(t.xorHelper)), e.default = n
}),define("portia-ui/initializers/app-version", ["exports", "ember-cli-app-version/initializer-factory", "portia-ui/config/environment"], function (e, t, n) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = {
        name: "App Version",
        initialize: (0, t.default)(n.default.APP.name, n.default.APP.version)
    }
}),define("portia-ui/initializers/container-debug-adapter", ["exports", "ember-resolver/container-debug-adapter"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = {
        name: "container-debug-adapter",
        initialize: function () {
            var e = arguments[1] || arguments[0];
            e.register("container-debug-adapter:main", t.default), e.inject("container-debug-adapter:main", "namespace", "application:main")
        }
    }
}),define("portia-ui/initializers/data-adapter", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = {
        name: "data-adapter",
        before: "store",
        initialize: function () {
        }
    }
}),define("portia-ui/initializers/ember-concurrency", ["exports", "ember-concurrency"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = {
        name: "ember-concurrency",
        initialize: function () {
        }
    }
}),define("portia-ui/initializers/ember-data", ["exports", "ember-data/setup-container", "ember-data/-private/core"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = {name: "ember-data", initialize: t.default}
}),define("portia-ui/initializers/export-application-global", ["exports", "portia-ui/config/environment"], function (e, t) {
    function n() {
        var e = arguments[1] || arguments[0];
        if (!1 !== t.default.exportApplicationGlobal) {
            var n;
            if ("undefined" != typeof window) n = window; else if ("undefined" != typeof global) n = global; else {
                if ("undefined" == typeof self) return;
                n = self
            }
            var r, a = t.default.exportApplicationGlobal;
            r = "string" == typeof a ? a : Ember.String.classify(t.default.modulePrefix), n[r] || (n[r] = e, e.reopen({
                willDestroy: function () {
                    this._super.apply(this, arguments), delete n[r]
                }
            }))
        }
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.initialize = n, e.default = {
        name: "export-application-global",
        initialize: n
    }
}),define("portia-ui/initializers/injectStore", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = {
        name: "injectStore",
        before: "store",
        initialize: function () {
        }
    }
}),define("portia-ui/initializers/local-storage-adapter", ["exports", "ember-local-storage/initializers/local-storage-adapter"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), Object.defineProperty(e, "default", {
        enumerable: !0,
        get: function () {
            return t.default
        }
    }), Object.defineProperty(e, "initialize", {
        enumerable: !0, get: function () {
            return t.initialize
        }
    })
}),define("portia-ui/initializers/raf-polyfill", ["exports", "ember-run-raf/initializers/raf-polyfill"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), Object.defineProperty(e, "default", {
        enumerable: !0,
        get: function () {
            return t.default
        }
    }), Object.defineProperty(e, "initialize", {
        enumerable: !0, get: function () {
            return t.initialize
        }
    })
}),define("portia-ui/initializers/store", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = {
        name: "store",
        after: "ember-data",
        initialize: function () {
        }
    }
}),define("portia-ui/initializers/transforms", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = {
        name: "transforms",
        before: "store",
        initialize: function () {
        }
    }
}),define("portia-ui/initializers/truth-helpers", ["exports", "ember-truth-helpers/utils/register-helper", "ember-truth-helpers/helpers/and", "ember-truth-helpers/helpers/or", "ember-truth-helpers/helpers/equal", "ember-truth-helpers/helpers/not", "ember-truth-helpers/helpers/is-array", "ember-truth-helpers/helpers/not-equal", "ember-truth-helpers/helpers/gt", "ember-truth-helpers/helpers/gte", "ember-truth-helpers/helpers/lt", "ember-truth-helpers/helpers/lte"], function (e, t, n, r, a, l, o, i, c, s, u, d) {
    function m() {
        Ember.Helper || ((0, t.registerHelper)("and", n.andHelper), (0, t.registerHelper)("or", r.orHelper), (0, t.registerHelper)("eq", a.equalHelper), (0, t.registerHelper)("not", l.notHelper), (0, t.registerHelper)("is-array", o.isArrayHelper), (0, t.registerHelper)("not-eq", i.notEqualHelper), (0, t.registerHelper)("gt", c.gtHelper), (0, t.registerHelper)("gte", s.gteHelper), (0, t.registerHelper)("lt", u.ltHelper), (0, t.registerHelper)("lte", d.lteHelper))
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.initialize = m, e.default = {
        name: "truth-helpers",
        initialize: m
    }
}),define("portia-ui/initializers/ui-state", ["exports"], function (e) {
    function t(e) {
        e.inject("service:ui-state", "router", "router:main"), e.inject("service:ui-state", "projectRoute", "route:projects/project"), e.inject("service:ui-state", "spiderRoute", "route:projects/project/spider"), e.inject("service:ui-state", "sampleRoute", "route:projects/project/spider/sample"), e.inject("service:ui-state", "dataRoute", "route:projects/project/spider/sample/data"), e.inject("service:ui-state", "itemRoute", "route:projects/project/spider/sample/data/item"), e.inject("service:ui-state", "annotationRoute", "route:projects/project/spider/sample/data/annotation"), e.inject("service:ui-state", "schemaRoute", "route:projects/project/schema"), e.inject("service:ui-state", "fieldRoute", "route:projects/project/schema/field")
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.initialize = t, e.default = {name: "ui-state", initialize: t}
}),define("portia-ui/instance-initializers/ember-data", ["exports", "ember-data/-private/instance-initializers/initialize-store-service"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = {name: "ember-data", initialize: t.default}
}),define("portia-ui/instance-initializers/error-handler", ["exports", "ember-data"], function (e, t) {
    function n(e, t) {
        var n = e.toString(), r = e.stack;
        r && (r.startsWith(n) || (r = n + "\n" + r), n = r), t ? t(n) : Ember.Logger.warn(n)
    }

    function r(e) {
        function r(e) {
            var r = !1;
            window.NREUM && (window.NREUM.noticeError(e), r = !0), window.Raven && (window.Raven.captureException(e), r = !0);
            var o = r ? "Our developers have already been notified." : "Please notify the developers. Details have been logged to the console.";
            if (e instanceof t.default.AdapterError) {
                var i = !0, c = !1, s = void 0;
                try {
                    for (var u, d = e.errors[Symbol.iterator](); !(i = (u = d.next()).done); i = !0) {
                        var m = u.value;
                        m.id && l.has(m.id) || (Ember.Logger.warn("AdapterError: " + m.title + "\n" + m.detail), a.add({
                            title: m.title || "Server error",
                            message: "An error occurred while communicating with the server. " + m.status >= 500 ? o : m.detail,
                            type: +m.status >= 500 ? "danger" : "warning"
                        }), m.id && l.add(m.id))
                    }
                } catch (e) {
                    c = !0, s = e
                } finally {
                    try {
                        !i && d.return && d.return()
                    } finally {
                        if (c) throw s
                    }
                }
            } else !function (e) {
                return e.message && (/event `(didSetProperty|deleteRecord)`.*in state root\./.test(e.message) || /calling set on destroyed object/.test(e.message))
            }(e) ? "websocket-browser-load" === e.fileName ? n(e, Ember.Logger.debug) : (n(e), a.add({
                title: e.title || "Unexpected error",
                message: "An unexpected error has occurred. " + o,
                type: "danger"
            })) : (Ember.Logger.debug("Model Error: " + e.message), n(e, Ember.Logger.debug))
        }

        var a = e.lookup("service:notification-manager"), l = new Set;
        Ember.onerror = r
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.initialize = r, e.default = {
        name: "error-handler",
        initialize: r
    }
}),define("portia-ui/mixins/loading-slider", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.Mixin, n = Ember.inject, r = Ember.isPresent;
    e.default = t.create({
        loadingSlider: n.service(), actions: {
            loading: function () {
                var e = this.get("loadingSlider");
                if (e.startLoading(), r(this.router) && this.router.one("didTransition", function () {
                    e.endLoading()
                }), this.get("bubbleLoadingSlider")) return !0
            }, finished: function () {
                this.get("loadingSlider").endLoading()
            }
        }
    })
}),define("portia-ui/mixins/options-route", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Mixin.create({
        uiState: Ember.inject.service(),
        activate: function () {
            this.set("uiState.slideMain", !0)
        },
        deactivate: function () {
            this.set("uiState.slideMain", !1)
        }
    })
}),define("portia-ui/mixins/save-spider-mixin", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Mixin.create({
        webSocket: Ember.inject.service(),
        saveSpider: function () {
            var e = this, t = this.get("spider").save();
            return t.then(function () {
                return e.get("webSocket").send({
                    spider: e.get("spider.id"),
                    project: e.get("spider.project.id"),
                    _command: "update_spider"
                })
            }), t
        }
    })
}),define("portia-ui/models/annotation", ["exports", "ember-data", "portia-ui/models/base-annotation", "portia-ui/utils/selectors"], function (e, t, n, r) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = n.default.extend({
        attribute: t.default.attr("string", {defaultValue: "content"}),
        text_content: t.default.attr("string", {defaultValue: "content"}),
        required: t.default.attr("boolean", {defaultValue: !1}),
        repeated: t.default.attr("boolean", {defaultValue: !1}),
        selectionMode: t.default.attr("string", {defaultValue: "auto"}),
        selector: t.default.attr("string"),
        xpath: t.default.attr("string"),
        acceptSelectors: t.default.attr("array", {
            defaultValue: function () {
                return []
            }
        }),
        rejectSelectors: t.default.attr("array", {
            defaultValue: function () {
                return []
            }
        }),
        preText: t.default.attr("string"),
        postText: t.default.attr("string"),
        field: t.default.belongsTo(),
        extractors: t.default.hasMany(),
        name: Ember.computed.readOnly("field.name"),
        type: Ember.computed.readOnly("field.type"),
        ownerSample: Ember.computed.readOnly("parent.ownerSample"),
        orderedIndex: Ember.computed("ownerSample.orderedAnnotations", function () {
            return (this.get("ownerSample.orderedAnnotations") || []).indexOf(this)
        }),
        addElement: function (e) {
            this.moveElement(e, "acceptSelectors", "rejectSelectors")
        },
        removeElement: function (e) {
            this.moveElement(e, "rejectSelectors", "acceptSelectors")
        },
        moveElement: function (e, t, n) {
            var a = this.get(t), l = this.get(n), o = (0, r.elementPath)(e), i = o[0], c = (0, r.smartSelector)(e),
                s = [], u = [], d = !0, m = !1, p = void 0;
            try {
                for (var h, f = l[Symbol.iterator](); !(d = (h = f.next()).done); d = !0) {
                    var b = h.value, g = Array.from(i.querySelectorAll(b));
                    if (g.includes(e)) {
                        u.addObject(b), g.removeObject(e);
                        var v = !0, y = !1, C = void 0;
                        try {
                            for (var x, E = g[Symbol.iterator](); !(v = (x = E.next()).done); v = !0) {
                                var N = x.value;
                                s.addObject((0, r.smartSelector)(N))
                            }
                        } catch (e) {
                            y = !0, C = e
                        } finally {
                            try {
                                !v && E.return && E.return()
                            } finally {
                                if (y) throw C
                            }
                        }
                    }
                }
            } catch (e) {
                m = !0, p = e
            } finally {
                try {
                    !d && f.return && f.return()
                } finally {
                    if (m) throw p
                }
            }
            l.removeObjects(u), l.addObjects(s), a.addObject(c)
        },
        setSelector: function (e) {
            this.setProperties({acceptSelectors: e ? [e] : [], rejectSelectors: []})
        }
    })
}),define("portia-ui/models/base-annotation", ["exports", "ember-data/relationships", "portia-ui/models/base"], function (e, t, n) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = n.default.extend({parent: (0, t.belongsTo)("item", {inverse: "annotations"})})
}),define("portia-ui/models/base", ["exports", "ember-data", "ember-data/-private/system/empty-object"], function (e, t, n) {
    function r(e) {
        if (Array.isArray(e)) {
            for (var t = 0, n = Array(e.length); t < e.length; t++) n[t] = e[t];
            return n
        }
        return Array.from(e)
    }

    function a() {
        if (!i || !i.get("isSaving")) for (i = null; c.length;) {
            var e = c.shift();
            if (e.get("isSaving")) return;
            if (!e.get("isDeleted") || e.get("hasDirtyAttributes")) {
                e.get("pendingDelete") && (e.deleteRecord(), e.set("pendingDelete", !1));
                var t = e.get("pendingSave");
                if (t) {
                    e.set("pendingSave", null);
                    var n = t.resolver, r = t.options;
                    return void e.save(r).then(n.resolve, n.reject)
                }
            }
        }
    }

    function l(e, t) {
        if (!e) return t;
        if (t = t || {}, t.coalesce) if (e.coalesce) {
            var n = !0, r = !1, a = void 0;
            try {
                for (var o, i = t.coalesce[Symbol.iterator](); !(n = (o = i.next()).done); n = !0) {
                    var c = o.value, s = c.model, u = c.options, d = e.coalesce.findBy("model", s);
                    d ? d.options = l(d.options, u) : e.coalesce.push(c)
                }
            } catch (e) {
                r = !0, a = e
            } finally {
                try {
                    !n && i.return && i.return()
                } finally {
                    if (r) throw a
                }
            }
        } else e.coalesce = t.coalesce;
        if (t.partial) {
            if (e.partial) {
                var m = !0, p = !1, h = void 0;
                try {
                    for (var f, b = t.partial[Symbol.iterator](); !(m = (f = b.next()).done); m = !0) {
                        var g = f.value;
                        e.partial.includes(g) || e.partial.push(g)
                    }
                } catch (e) {
                    p = !0, h = e
                } finally {
                    try {
                        !m && b.return && b.return()
                    } finally {
                        if (p) throw h
                    }
                }
            }
        } else e.partial && delete e.partial;
        return e
    }

    Object.defineProperty(e, "__esModule", {value: !0});
    var o = Ember.get, i = null, c = [];
    e.default = t.default.Model.extend({
        pendingDelete: !1, pendingSave: null, isDeleted: Ember.computed("currentState", "pendingDelete", function () {
            return o(this._internalModel.currentState, "isDeleted") || this.get("pendingDelete")
        }).readOnly(), save: function (e) {
            var t = i && i.get("isSaving"),
                r = e && e.adapterOptions && e.adapterOptions.coalesce && "extra" === e.adapterOptions.coalesce.type;
            if (t && !r) {
                var a = this.get("pendingSave");
                return a ? a.options = l(a.options, e) : (a = {
                    resolver: Ember.RSVP.defer(),
                    options: e
                }, this.set("pendingSave", a), c.push(this)), a.resolver.promise
            }
            i = this;
            var s = [];
            if (e && e.coalesce) {
                var u = [];
                e.adapterOptions || (e.adapterOptions = {}), e.adapterOptions.coalesce = {type: "main", updates: u};
                var d = !0, m = !1, p = void 0;
                try {
                    for (var h, f = e.coalesce[Symbol.iterator](); !(d = (h = f.next()).done); d = !0) {
                        var b = h.value, g = b.model, v = b.options, y = g._internalModel;
                        if ("root.deleted.saved" === o(y, "currentState.stateName") || y.isDeleted()) throw new Ember.Error("You can not pass deleted models in the coalesce options to the save method.");
                        if (y.isNew()) throw new Ember.Error("You can not pass unsaved models in the coalesce options to the save method.");
                        var C = g.save(Ember.assign({}, v, {adapterOptions: {coalesce: {type: "extra", updates: u}}}));
                        s.push(C)
                    }
                } catch (e) {
                    m = !0, p = e
                } finally {
                    try {
                        !d && f.return && f.return()
                    } finally {
                        if (m) throw p
                    }
                }
            }
            var x = this._internalModel, E = x._attributes;
            if (e && e.partial) {
                e.adapterOptions || (e.adapterOptions = {}), e.adapterOptions.partial = e.partial, x._attributes = new n.default;
                var N = !0, A = !1, R = void 0;
                try {
                    for (var F, w = e.partial[Symbol.iterator](); !(N = (F = w.next()).done); N = !0) {
                        var M = F.value;
                        M in E && (x._attributes[M] = E[M], delete E[M])
                    }
                } catch (e) {
                    A = !0, R = e
                } finally {
                    try {
                        !N && w.return && w.return()
                    } finally {
                        if (A) throw R
                    }
                }
            }
            var T = this._super(e);
            return e && e.partial && (x._attributes = E), s.unshift(T), Ember.RSVP.allSettled(s).then(function () {
                return T
            })
        }, deleteRecord: function () {
            return this.get("isSaving") && this.set("pendingDelete", !0), this._super.apply(this, arguments)
        }, reload: function () {
            var e = this;
            return this.get("isSaving") ? t.default.PromiseObject.create({
                promise: Ember.RSVP.Promise(function (t, n) {
                    e.one("didCommit", function () {
                        t(e), t = n = Ember.K
                    }), e.one("becameInvalid", function () {
                        t(e), t = n = Ember.K
                    }), e.one("becameError", Ember.run.next, function () {
                        n(e.get("adapterError")), t = n = Ember.K
                    })
                })
            }) : this._super.apply(this, arguments)
        }, set: function (e) {
            this._clearPendingDelete(e), this._super.apply(this, arguments)
        }, setProperties: function (e) {
            this._clearPendingDelete.apply(this, r(Object.keys(e))), this._super.apply(this, arguments)
        }, runActions: Ember.on("didCommit", function () {
            i === this && (i = null, Ember.run.next(Ember.run.once, a))
        }), clearPendingAndRunActions: Ember.on("becameError", "becameInvalid", function () {
            this.setProperties({pendingDelete: !1, pendingSave: null}), this.runActions()
        }), _clearPendingDelete: function () {
            if (this.get("pendingDelete")) {
                for (var e = arguments.length, t = Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                var r = !0, a = !1, l = void 0;
                try {
                    for (var o, i = t[Symbol.iterator](); !(r = (o = i.next()).done); r = !0) {
                        if (!["pendingDelete", "pendingSave"].includes(o.value)) {
                            this.set("pendingDelete", !1);
                            break
                        }
                    }
                } catch (e) {
                    a = !0, l = e
                } finally {
                    try {
                        !r && i.return && i.return()
                    } finally {
                        if (a) throw l
                    }
                }
            }
        }
    })
}),define("portia-ui/models/extractor", ["exports", "ember-data", "portia-ui/models/base"], function (e, t, n) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = n.default.extend({
        type: t.default.attr("string"),
        value: t.default.attr("string"),
        project: t.default.belongsTo(),
        annotations: t.default.hasMany()
    })
}),define("portia-ui/models/field", ["exports", "ember-data", "portia-ui/models/base"], function (e, t, n) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.FIELD_TYPES = void 0;
    e.FIELD_TYPES = ["date", "geopoint", "image", "number", "price", "raw html", "safe html", "text", "url"];
    e.default = n.default.extend({
        name: t.default.attr("string"),
        type: t.default.attr("string"),
        required: t.default.attr("boolean"),
        vary: t.default.attr("boolean"),
        schema: t.default.belongsTo({async: !0}),
        annotations: t.default.hasMany({async: !0})
    })
}),define("portia-ui/models/item", ["exports", "ember-data", "portia-ui/models/base-annotation"], function (e, t, n) {
    function r(e) {
        if (Array.isArray(e)) {
            for (var t = 0, n = Array(e.length); t < e.length; t++) n[t] = e[t];
            return n
        }
        return Array.from(e)
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = n.default.extend({
        name: t.default.attr("string"),
        selector: t.default.attr("string"),
        repeatedSelector: t.default.attr("string"),
        siblings: t.default.attr("number", {defaultValue: 0}),
        sample: t.default.belongsTo(),
        schema: t.default.belongsTo(),
        annotations: t.default.hasMany("base-annotation", {inverse: "parent", polymorphic: !0}),
        ownerSample: Ember.computed(function () {
            var e = this;
            return t.default.PromiseObject.create({
                promise: this.get("sample").then(function (t) {
                    return t || e.get("parent.ownerSample")
                })
            })
        }),
        orderedAnnotations: Ember.computed("annotations", "annotations.@each.orderedAnnotations", function () {
            var e;
            return (e = []).concat.apply(e, r(this.get("annotations").map(function (e) {
                return "item" === e.constructor.modelName ? e.getWithDefault("orderedAnnotations", []) : [e]
            })))
        }),
        orderedChildren: Ember.computed("annotations.[]", "annotations.@each.orderedChildren", function () {
            var e;
            return (e = []).concat.apply(e, r(this.get("annotations").map(function (e) {
                return [e].concat("item" === e.constructor.modelName ? e.getWithDefault("orderedChildren", []) : [])
            })))
        }),
        depth: Ember.computed("parent.depth", function () {
            return (this.get("parent.depth") || 0) + 1
        })
    })
}),define("portia-ui/models/project", ["exports", "ember-data", "portia-ui/models/base", "ember-api-actions"], function (e, t, n, r) {
    function a(e) {
        var t = (0, r.memberAction)(e);
        return function (e) {
            var n = this;
            return t.call(this, e).then(function (e) {
                return n.markClean(), e
            })
        }
    }

    Object.defineProperty(e, "__esModule", {value: !0});
    var l = Ember.inject.service, o = n.default.extend({
        changes: l(),
        name: t.default.attr("string"),
        spiders: t.default.hasMany(),
        schemas: t.default.hasMany(),
        extractors: t.default.hasMany(),
        status: (0, r.memberAction)({path: "status", type: "GET"}),
        deploy: (0, r.memberAction)({path: "deploy", type: "POST"}),
        deploy2Crawlab: (0, r.memberAction)({path: "deploy2Crawlab", type: "POST"}),
        publish: a({path: "publish"}),
        copy: a({path: "copy", type: "POST"}),
        reset: a({path: "reset"}),
        markClean: function () {
            this.set("changes.hasChanges", !1)
        }
    });
    e.default = o
}),define("portia-ui/models/sample", ["exports", "ember-data", "portia-ui/models/base"], function (e, t, n) {
    function r(e) {
        if (Array.isArray(e)) {
            for (var t = 0, n = Array(e.length); t < e.length; t++) n[t] = e[t];
            return n
        }
        return Array.from(e)
    }

    Object.defineProperty(e, "__esModule", {value: !0});
    var a = n.default.extend({
        name: t.default.attr("string"),
        url: t.default.attr("string"),
        spider: t.default.belongsTo(),
        items: t.default.hasMany(),
        body: t.default.attr("string", {default: "original_body"}),
        orderedAnnotations: Ember.computed("items.content.@each.orderedAnnotations", function () {
            var e;
            return (e = []).concat.apply(e, r(this.get("items").mapBy("orderedAnnotations")))
        }),
        orderedChildren: Ember.computed("items.content.@each.orderedChildren", function () {
            var e;
            return (e = []).concat.apply(e, r(this.get("items").map(function (e) {
                return [e].concat(e.getWithDefault("orderedChildren", []))
            })))
        })
    });
    a.reopenClass({
        normalizeTitle: function (e) {
            return e.trim().replace(/[^a-z\s_-]/gi, "").substring(0, 48).trim().replace(/\s+/g, " ")
        }
    }), e.default = a
}),define("portia-ui/models/schema", ["exports", "ember-data", "portia-ui/models/base"], function (e, t, n) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = n.default.extend({
        name: t.default.attr("string"),
        default: t.default.attr("boolean"),
        project: t.default.belongsTo(),
        fields: t.default.hasMany(),
        items: t.default.hasMany()
    })
}),define("portia-ui/models/spider", ["exports", "ember-data", "portia-ui/models/base"], function (e, t, n) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = n.default.extend({
        name: t.default.attr("string"),
        nameAlias: Ember.computed("id", "name", {
            get: function () {
                return this.get("name") || this.get("id")
            }, set: function (e, t) {
                return this.set("name", t), t
            }
        }),
        startUrls: t.default.attr("startUrl", {
            defaultValue: function () {
                return []
            }
        }),
        respectNofollow: t.default.attr("boolean"),
        pageActions: t.default.attr("array", {
            defaultValue: function () {
                return []
            }
        }),
        project: t.default.belongsTo(),
        performLogin: t.default.attr("boolean"),
        loginUrl: t.default.attr("string"),
        loginUser: t.default.attr("string"),
        loginPassword: t.default.attr("string"),
        linksToFollow: t.default.attr("string", {defaultValue: "all"}),
        followPatterns: t.default.attr("array", {
            defaultValue: function () {
                return []
            }
        }),
        excludePatterns: t.default.attr("array", {
            defaultValue: function () {
                return []
            }
        }),
        showLinks: t.default.attr("boolean"),
        respectNoFollow: t.default.attr("boolean", {defaultValue: !0}),
        jsEnabled: t.default.attr("boolean"),
        jsEnablePatterns: t.default.attr("array", {
            defaultValue: function () {
                return []
            }
        }),
        jsDisablePatterns: t.default.attr("array", {
            defaultValue: function () {
                return []
            }
        }),
        samples: t.default.hasMany({async: !0}),
        firstUrl: Ember.computed("startUrls.firstObject", function () {
            var e = this.get("startUrls").filterBy("type", "url");
            return 0 !== e.length ? e[0].url : void 0
        })
    })
}),define("portia-ui/models/start-url", ["exports", "portia-ui/utils/utils", "portia-ui/utils/start-urls"], function (e, t, n) {
    function r(e) {
        return {url: a, feed: o, generated: l}[e.type || "url"].create(e)
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = r;
    var a = Ember.Object.extend({
        type: "url",
        isGenerated: !1,
        optionsTitle: "",
        componentName: "project-structure-spider-url",
        show: function () {
            return this.get("url")
        },
        serialize: function () {
            var e = {url: this.show(), type: this.get("type")};
            return this.addSerialized(e)
        },
        addSerialized: function (e) {
            return e
        },
        save: function (e) {
            return e.get("startUrls").pushObject(this), e.save(), this
        }
    }), l = a.extend({
        type: "generated",
        isGenerated: !0,
        optionsTitle: "URL Generation",
        componentName: "project-structure-spider-generated-url",
        optionsComponentName: "generated-url-options",
        init: function () {
            var e = [{type: "fixed", value: this.get("url")}], t = this.get("fragments") || e;
            this.set("fragments", t)
        },
        show: function () {
            return this.get("fragments").map(n.fragmentToString).join("")
        },
        addSerialized: function (e) {
            return e.fragments = this.get("fragments"), e
        },
        generateList: function () {
            var e = Ember.copy(this.get("fragments")), r = e.shiftObject(), a = [[r.value]];
            return e.forEach(function (e) {
                var r = a.map(function (t) {
                    return (0, n.augmentFragmentList)(t, e)
                });
                a = (0, t.flatten)(r)
            }), a
        }
    }), o = a.extend({
        type: "feed",
        optionsTitle: "Feed",
        componentName: "project-structure-spider-feed-url",
        optionsComponentName: "feed-url-options",
        show: function () {
            return this._raw_url()
        },
        _raw_url: function () {
            var e = this.get("url"), t = !e.includes("raw");
            if (e.includes("gist.github") && t) {
                return e + ("/" === e.slice(-1) ? "" : "/") + "raw"
            }
            return e.includes("dropbox.com") && t ? e + "&raw=1" : e.includes("docs.google.com") && !e.includes("export") ? e.split("/").slice(0, -1).concat("export?format=txt").join("/") : e
        }
    })
}),define("portia-ui/resolver", ["exports", "ember-resolver"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default
}),define("portia-ui/router", ["exports", "portia-ui/config/environment"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = Ember.Router.extend({location: t.default.locationType});
    n.map(function () {
        this.route("projects", function () {
            this.route("project", {path: ":project_id"}, function () {
                this.route("spider", {path: "spiders/:spider_id"}, function () {
                    this.route("sample", {path: "samples/:sample_id"}, function () {
                        this.route("data", function () {
                            this.route("annotation", {path: "annotations/:annotation_id"}, function () {
                                this.route("options")
                            }), this.route("item", {path: "items/:item_id"})
                        })
                    }), this.route("options"), this.route("link-options"), this.route("start-url", {path: "start-urls/:start_url_id"}, function () {
                        this.route("options")
                    })
                }), this.route("schema", {path: "schemas/:schema_id"}, function () {
                    this.route("field", {path: "fields/:field_id"}, function () {
                        this.route("options")
                    }), this.route("options")
                }), this.route("conflicts", function () {
                    this.route("conflict", {path: ":file_path"})
                }), this.route("compatibility", {path: "*path"})
            })
        }), this.route("browsers")
    }), e.default = n
}),define("portia-ui/routes/application", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({})
}),define("portia-ui/routes/browsers", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = [{
        name: "Chrome",
        alt: "Chrome logo",
        src: "/portia-assets/images/chrome-logo-449253ca494362e130113eeee69c62a5.jpg",
        href: "https://www.google.com/chrome/browser/desktop/"
    }, {
        name: "Firefox",
        alt: "Firefox logo",
        src: "/portia-assets/images/firefox-logo-b37f0b2cacfe465ce8ef5a3f81edea73.png",
        href: "https://www.mozilla.org/en-US/firefox/new/"
    }];
    e.default = Ember.Route.extend({
        model: function () {
            return t
        }
    })
}),define("portia-ui/routes/index", ["exports", "portia-ui/utils/browser-features"], function (e, t) {
    function n(e) {
        return e
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({
        model: function () {
            return (0, t.default)()
        }, redirect: function (e) {
            var t = e.every(n), r = t ? "projects" : "browsers";
            this.replaceWith(r)
        }
    })
}),define("portia-ui/routes/projects", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({
        model: function () {
            return this.store.findAll("project")
        }
    })
}),define("portia-ui/routes/projects/project", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.inject.service;
    e.default = Ember.Route.extend({
        browser: t(), changes: t(), notificationManager: t(), uiState: t(), beforeModel: function () {
            this.store.unloadAll("spider"), this.store.unloadAll("schema"), this.set("uiState.currentSpider", null)
        }, model: function (e) {
            return this.set("projectId", e.project_id), this.store.findRecord("project", e.project_id)
        }, setupController: function (e, t) {
            this._super(e, t), e.set("projects", this.controllerFor("projects"))
        }, deactivate: function () {
            this.set("browser.url", null)
        }, renderTemplate: function () {
            this.render({
                into: "application",
                outlet: "main"
            }), this.render("projects/project/structure", {
                into: "application",
                outlet: "side-bar"
            }), this.render("options-panels", {
                into: "application",
                outlet: "options-panels"
            }), this.render("tool-panels", {
                into: "application",
                outlet: "tool-panels"
            }), this.render("projects/project/toolbar", {into: "projects/project", outlet: "browser-toolbar"})
        }, projectNotFound: function () {
            var e = this.get("projectId"), t = "Project with id '" + e + "' not found.";
            this.get("notificationManager").showErrorNotification(t)
        }, actions: {
            error: function () {
                this.projectNotFound(), this.transitionTo("projects")
            }, conflict: function () {
                this.transitionTo("projects.project.conflicts")
            }, reload: function () {
                this.transitionTo("projects.project"), this.store.unloadAll("spider"), this.store.unloadAll("schema"), this.refresh()
            }
        }
    })
}),define("portia-ui/routes/projects/project/compatibility", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({
        model: function (e) {
            return e
        }, redirect: function (e, t) {
            var n = e.path, r = t.queryParams;
            if ("items" === n) return void this.transitionTo("projects.project", {queryParams: r});
            var a = n.split("/");
            1 === a.length ? this.transitionTo("projects.project.spider", a[0], {queryParams: r}) : this.transitionTo("projects.project.spider.sample", a[0], a[1], {queryParams: r})
        }
    })
}),define("portia-ui/routes/projects/project/conflicts", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({
        model: function () {
            return $.post("/projects", JSON.stringify({cmd: "conflicts", args: [this.modelFor("projects.project").id]}))
        }, renderTemplate: function () {
            this.render("projects/project/conflicts/file-selector", {
                into: "application",
                outlet: "side-bar"
            }), this.render("projects/project/conflicts/help", {into: "application", outlet: "main"})
        }
    })
}),define("portia-ui/routes/projects/project/conflicts/conflict", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({
        model: function (e) {
            var t = this.modelFor("projects.project.conflicts"), n = atob(e.file_path);
            return {file: n, contents: t[n]}
        }, renderTemplate: function () {
            this.render("projects/project/conflicts/topbar", {
                into: "application",
                outlet: "top-bar"
            }), this.render("projects/project/conflicts/resolver", {into: "application", outlet: "main"})
        }
    })
}),define("portia-ui/routes/projects/project/schema", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({
        model: function (e) {
            return this.store.peekRecord("schema", e.schema_id)
        }, afterModel: function (e) {
            return e.reload()
        }, renderTemplate: function () {
            this.render("projects/project/schema/structure", {
                into: "projects/project/structure",
                outlet: "project-structure"
            })
        }, actions: {
            error: function () {
                this.transitionTo("projects.project", this.modelFor("projects.project"))
            }
        }
    })
}),define("portia-ui/routes/projects/project/schema/field", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({
        model: function (e) {
            return this.store.peekRecord("field", e.field_id)
        }
    })
}),define("portia-ui/routes/projects/project/schema/field/options", ["exports", "portia-ui/mixins/options-route"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend(t.default, {
        model: function () {
            return this.modelFor("projects.project.schema.field")
        }, renderTemplate: function () {
            this.render("projects/project/schema/field/options", {into: "options-panels", outlet: "options-panels"})
        }, actions: {
            close: function () {
                this.transitionTo("projects.project.schema.field")
            }
        }
    })
}),define("portia-ui/routes/projects/project/spider", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({
        browser: Ember.inject.service(), model: function (e) {
            return this.store.peekRecord("spider", e.spider_id)
        }, afterModel: function (e) {
            return e.reload().then(function () {
                return e.get("samples");
            })
        }, redirect: function (e, t) {
            var n = this, r = t.queryParams;
            if (void 0 === r.url && void 0 === r.baseurl) {
                var a = e.get("firstUrl");
                if (void 0 === a) return;
                Ember.run.next(function () {
                    n.transitionTo("projects.project.spider", {queryParams: {url: a, baseurl: null}})
                })
            }
        }, setupController: function (e) {
            this._super.apply(this, arguments), Ember.run.next(function () {
                e.activate()
            })
        }, resetController: function (e, t) {
            Ember.run.next(function () {
                e.deactivate(), t || e.activate()
            })
        }, renderTemplate: function () {
            this.render("projects/project/spider/structure", {
                into: "projects/project/structure",
                outlet: "project-structure"
            }), this.render("projects/project/spider/overlays", {
                into: "projects/project",
                outlet: "browser-overlays"
            }), this.render("projects/project/spider/tools", {
                into: "tool-panels",
                outlet: "tool-panels"
            }), this.render("projects/project/spider/toolbar", {into: "projects/project", outlet: "browser-toolbar"})
        }, actions: {
            error: function () {
                this.transitionTo("projects.project", this.modelFor("projects.project"))
            }, transitionToFragments: function (e) {
                this.transitionTo("projects.project.spider.start-url.options", e)
            }, closeOptions: function () {
                var e = this.modelFor("projects.project.spider");
                this.transitionTo("projects.project.spider", e)
            }
        }
    })
}),define("portia-ui/routes/projects/project/spider/link-options", ["exports", "portia-ui/mixins/options-route"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend(t.default, {
        model: function () {
            return this.modelFor("projects.project.spider")
        }, renderTemplate: function () {
            this.render("projects/project/spider/link-options", {into: "options-panels", outlet: "options-panels"})
        }, actions: {
            close: function () {
                this.transitionTo("projects.project.spider")
            }
        }
    })
}),define("portia-ui/routes/projects/project/spider/options", ["exports", "portia-ui/mixins/options-route"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend(t.default, {
        model: function () {
            return this.modelFor("projects.project.spider")
        }, renderTemplate: function () {
            this.render("projects/project/spider/options", {into: "options-panels", outlet: "options-panels"})
        }, actions: {
            close: function () {
                this.transitionTo("projects.project.spider")
            }
        }
    })
}),define("portia-ui/routes/projects/project/spider/sample", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({
        browser: Ember.inject.service(),
        model: function (e) {
            return this.store.peekRecord("sample", e.sample_id)
        },
        afterModel: function (e) {
            return e.reload().then(function (e) {
                return e
            })
        },
        renderTemplate: function () {
            this.render("projects/project/spider/sample/structure", {
                into: "projects/project/spider/structure",
                outlet: "spider-structure"
            }), this.render("projects/project/spider/sample/toolbar", {
                into: "projects/project",
                outlet: "browser-toolbar"
            })
        },
        actions: {
            error: function () {
                this.transitionTo("projects.project.spider", this.modelFor("projects.project.spider"))
            }
        }
    })
}),define("portia-ui/routes/projects/project/spider/sample/data", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.inject.service, n = Ember.run;
    e.default = Ember.Route.extend({
        annotationStructure: t(), extractedItems: t(), browser: t(), init: function () {
            this._super.apply(this, arguments), this.scheduledRenderOverlays = null
        }, model: function () {
            return this.modelFor("projects.project.spider.sample")
        }, afterModel: function (e) {
            this.updateDataStructure(e), this.get("extractedItems").update()
        }, activate: function () {
            this.get("browser").setAnnotationMode(), this.controllerFor("projects.project").setClickHandler(this.viewPortClick.bind(this))
        }, deactivate: function () {
            this.updateDataStructure(null), this.scheduledRenderOverlays && n.cancel(this.scheduledRenderOverlays), this.get("browser").clearAnnotationMode(), this.controllerFor("projects.project").clearClickHandler()
        }, renderTemplate: function () {
            this.render("projects/project/spider/sample/data/structure", {
                into: "projects/project/spider/sample/structure",
                outlet: "sample-structure"
            }), this.render("projects/project/spider/sample/data/tools", {
                into: "tool-panels",
                outlet: "tool-panels"
            }), this.render("projects/project/spider/sample/data/toolbar", {
                into: "projects/project/spider/sample/toolbar",
                outlet: "browser-toolbar"
            }), this.scheduledRenderOverlays = n.next(this, this.renderOverlayTemplate)
        }, renderOverlayTemplate: function () {
            this.scheduledRenderOverlays = null, this.render("projects/project/spider/sample/data/overlays", {
                into: "projects/project",
                outlet: "browser-overlays"
            })
        }, updateDataStructure: function (e) {
            var t = this.get("annotationStructure"), n = this._dataStructureModel;
            n !== e && (t.removeDataStructure(n), t.addDataStructure(e), this._dataStructureModel = e)
        }, viewPortClick: function () {
            var e;
            (e = this.get("controller")).send.apply(e, ["selectElement"].concat(Array.prototype.slice.call(arguments)))
        }
    })
}),define("portia-ui/routes/projects/project/spider/sample/data/annotation", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({
        uiState: Ember.inject.service(),
        selectedElement: Ember.computed.alias("uiState.viewPort.selectedElement"),
        selectedModel: Ember.computed.alias("uiState.viewPort.selectedModel"),
        model: function (e) {
            return this.store.peekRecord("annotation", e.annotation_id)
        },
        afterModel: function (e) {
            this.get("selectedModel") !== e && this.setProperties({selectedElement: null, selectedModel: e})
        },
        deactivate: function () {
            this.setProperties({selectedElement: null, selectedModel: null})
        },
        actions: {
            error: function () {
                this.transitionTo("projects.project.spider.sample.data")
            }
        }
    })
}),define("portia-ui/routes/projects/project/spider/sample/data/annotation/options", ["exports", "portia-ui/mixins/options-route"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend(t.default, {
        model: function () {
            return this.modelFor("projects.project.spider.sample.data.annotation")
        }, afterModel: function () {
            var e = this.modelFor("projects.project").get("extractors");
            return e.get("isPending") || (e = e.reload()), e
        }, renderTemplate: function () {
            this.render("projects/project/spider/sample/data/annotation/options", {
                into: "options-panels",
                outlet: "options-panels"
            })
        }, actions: {
            close: function () {
                this.transitionTo("projects.project.spider.sample.data.annotation")
            }
        }
    })
}),define("portia-ui/routes/projects/project/spider/sample/data/item", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({
        model: function (e) {
            return this.store.peekRecord("item", e.item_id)
        }, actions: {
            error: function () {
                this.transitionTo("projects.project.spider.sample.data")
            }
        }
    })
}),define("portia-ui/routes/projects/project/spider/sample/index", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({
        redirect: function (e, t) {
            var n = t.queryParams;
            this.transitionTo("projects.project.spider.sample.data", {
                queryParams: Ember.assign({
                    url: null,
                    baseurl: null
                }, n)
            })
        }
    })
}),define("portia-ui/routes/projects/project/spider/start-url", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend({
        model: function (e) {
            return this.modelFor("projects.project.spider").get("startUrls").objectAt(e.start_url_id)
        }
    })
}),define("portia-ui/routes/projects/project/spider/start-url/options", ["exports", "portia-ui/mixins/options-route"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Route.extend(t.default, {
        model: function () {
            var e = this.modelFor("projects.project.spider.start-url");
            return {spider: this.getSpider(), startUrlId: this.getSpider().get("startUrls").indexOf(e)}
        }, afterModel: function (e) {
            e || this.transitionToSpider()
        }, renderTemplate: function () {
            this.render("projects/project/spider/start-url/options", {into: "options-panels", outlet: "options-panels"})
        }, getSpider: function () {
            return this.modelFor("projects.project.spider")
        }, transitionToSpider: function () {
            this.transitionTo("projects.project.spider", this.getSpider())
        }, actions: {
            closeOptions: function () {
                this.transitionToSpider()
            }
        }
    })
}),define("portia-ui/serializers/application", ["exports", "ember-data"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.JSONAPISerializer.extend({
        normalize: function (e, t) {
            var n = this._super.apply(this, arguments);
            return t.links && (n.data.links = t.links), n
        }, serialize: function (e, t) {
            var n = this._super.apply(this, arguments);
            if (t && t.partial) {
                var r = n.data, a = new Set, l = !0, o = !1, i = void 0;
                try {
                    for (var c, s = t.partial[Symbol.iterator](); !(l = (c = s.next()).done); l = !0) {
                        var u = c.value, d = this._getMappedKey(u, e.type);
                        d === u && (d = this.keyForAttribute(u, "serialize")), a.add(d)
                    }
                } catch (e) {
                    o = !0, i = e
                } finally {
                    try {
                        !l && s.return && s.return()
                    } finally {
                        if (o) throw i
                    }
                }
                var m = !0, p = !1, h = void 0;
                try {
                    for (var f, b = Object.keys(r.attributes)[Symbol.iterator](); !(m = (f = b.next()).done); m = !0) {
                        var g = f.value;
                        a.has(g) || delete r.attributes[g]
                    }
                } catch (e) {
                    p = !0, h = e
                } finally {
                    try {
                        !m && b.return && b.return()
                    } finally {
                        if (p) throw h
                    }
                }
                Object.keys(r.attributes).length || delete r.attributes;
                var v = !0, y = !1, C = void 0;
                try {
                    for (var x, E = Object.keys(r.relationships)[Symbol.iterator](); !(v = (x = E.next()).done); v = !0) {
                        var N = x.value;
                        a.has(N) || delete r.relationships[N]
                    }
                } catch (e) {
                    y = !0, C = e
                } finally {
                    try {
                        !v && E.return && E.return()
                    } finally {
                        if (y) throw C
                    }
                }
                Object.keys(r.relationships).length || delete r.relationships
            }
            return n
        }
    })
}),define("portia-ui/services/ajax", ["exports", "ember-ajax/services/ajax"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), Object.defineProperty(e, "default", {
        enumerable: !0,
        get: function () {
            return t.default
        }
    })
}),define("portia-ui/services/annotation-structure", ["exports", "portia-ui/utils/selectors"], function (e, t) {
    function n(e) {
        return e.get("items").then(function (e) {
            return Ember.RSVP.filter(e.toArray(), function (e) {
                return e && !e.get("isDeleted")
            }).then(function (e) {
                return Ember.RSVP.map(e, function (e) {
                    return Ember.RSVP.hash({
                        annotation: e, children: e.get("annotations").then(function e(t) {
                            return t ? Ember.RSVP.filter(t.toArray(), function (e) {
                                return !e.get("isDeleted")
                            }).then(function (t) {
                                return Ember.RSVP.map(t, function (t) {
                                    return "annotation" === t.constructor.modelName ? {annotation: t} : "item" === t.constructor.modelName ? Ember.RSVP.hash({
                                        annotation: t,
                                        children: t.get("annotations").then(e)
                                    }) : void 0
                                })
                            }) : []
                        })
                    })
                })
            })
        })
    }

    function r(e, n) {
        var r = (0, t.createSelectorGenerators)(e, n), l = !0, o = !1, i = void 0;
        try {
            for (var c, s = r[Symbol.iterator](); !(l = (c = s.next()).done); l = !0) {
                var u = c.value, d = a(u, 2), m = d[0], p = d[1], h = p.get("selector");
                if (p instanceof t.AnnotationSelectorGenerator) m.setProperties({
                    selector: h,
                    xpath: p.get("xpath"),
                    repeated: p.get("repeatedAnnotation")
                }), "css" === m.get("selectionMode") && m.setSelector(h); else if (p instanceof t.ContainerSelectorGenerator) {
                    var f = p.get("containerSelector"), b = p.get("siblings"), g = h ? n.query(h) : [];
                    g.length ? g.length > 1 ? m.setProperties({
                        selector: f,
                        repeatedSelector: h,
                        siblings: b
                    }) : m.setProperties({
                        selector: h,
                        repeatedSelector: null,
                        siblings: b
                    }) : m.setProperties({selector: null, repeatedSelector: null, siblings: 0})
                }
                p.destroy()
            }
        } catch (e) {
            o = !0, i = e
        } finally {
            try {
                !l && s.return && s.return()
            } finally {
                if (o) throw i
            }
        }
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.createStructure = n, e.updateStructureSelectors = r;
    var a = function () {
        function e(e, t) {
            var n = [], r = !0, a = !1, l = void 0;
            try {
                for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
            } catch (e) {
                a = !0, l = e
            } finally {
                try {
                    !r && i.return && i.return()
                } finally {
                    if (a) throw l
                }
            }
            return n
        }

        return function (t, n) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return e(t, n);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }(), l = Ember.Object.extend({
        definition: null, selectorMatcher: null, init: function () {
            this._super.apply(this, arguments), this.addObservers()
        }, destroy: function () {
            this.removeObservers(), this._super.apply(this, arguments)
        }, updateDefinition: Ember.observer("definition", function () {
            this.removeObservers(), this.addObservers()
        }), addObservers: function () {
            var e = this, t = [];
            this.set("annotations", Ember.Object.create()), this.set("elements", Ember.Object.create({all: t}));
            var n = this.bindings = [], r = this.get("definition"), a = this.get("selectorMatcher"), l = function r(l) {
                var o = l.annotation, i = l.children, c = Ember.guidFor(o), s = function (n) {
                    (o.get("elements") || []).forEach(function (n) {
                        t.removeObject(n);
                        var r = Ember.guidFor(n), a = e.get("annotations." + r);
                        a && (a.removeObject(o), a.length || e.set("annotations." + r, void 0))
                    }), n.forEach(function (n) {
                        t.addObject(n);
                        var r = Ember.guidFor(n), a = e.get("annotations." + r);
                        a || (a = [], e.set("annotations." + r, a), e.notifyPropertyChange("annotations")), a.addObject(o)
                    }), o.get("isDeleted") || o.set("elements", n), e.set("elements." + c, n), e.notifyPropertyChange("elements")
                };
                if (i) {
                    i.forEach(r);
                    var u = null, d = function () {
                        u && a.unRegister(u, s), (u = o.get("repeatedSelector") || o.get("selector")) && (a.register(u, s), s(a.query(u)))
                    }, m = null;
                    n.push({
                        annotation: o, setup: function () {
                        }, teardown: function () {
                            Ember.run.cancel(m), u && a.unRegister(u, s), o.setProperties({elements: void 0})
                        }, observer: function () {
                            m = Ember.run.scheduleOnce("sync", d)
                        }, observerPaths: ["selector", "repeatedSelector"]
                    })
                } else {
                    var p = null, h = function () {
                        p && a.unRegister(p, s), (p = o.get("selector")) && (a.register(p, s), s(a.query(p)))
                    }, f = null;
                    n.push({
                        annotation: o, setup: function () {
                        }, teardown: function () {
                            Ember.run.cancel(f), p && a.unRegister(p, s), o.setProperties({elements: void 0})
                        }, observer: function () {
                            f = Ember.run.scheduleOnce("sync", h)
                        }, observerPaths: ["selector"]
                    })
                }
            };
            r.forEach(l);
            var o = !0, i = !1, c = void 0;
            try {
                for (var s, u = n[Symbol.iterator](); !(o = (s = u.next()).done); o = !0) {
                    var d = s.value, m = d.setup;
                    m && m()
                }
            } catch (e) {
                i = !0, c = e
            } finally {
                try {
                    !o && u.return && u.return()
                } finally {
                    if (i) throw c
                }
            }
            var p = !0, h = !1, f = void 0;
            try {
                for (var b, g = n[Symbol.iterator](); !(p = (b = g.next()).done); p = !0) {
                    var v = b.value, y = v.annotation, C = v.observer, x = v.observerPaths;
                    if (C) {
                        var E = !0, N = !1, A = void 0;
                        try {
                            for (var R, F = x[Symbol.iterator](); !(E = (R = F.next()).done); E = !0) {
                                var w = R.value;
                                Ember.addObserver(y, w, C)
                            }
                        } catch (e) {
                            N = !0, A = e
                        } finally {
                            try {
                                !E && F.return && F.return()
                            } finally {
                                if (N) throw A
                            }
                        }
                        C()
                    }
                }
            } catch (e) {
                h = !0, f = e
            } finally {
                try {
                    !p && g.return && g.return()
                } finally {
                    if (h) throw f
                }
            }
        }, removeObservers: function () {
            var e = !0, t = !1, n = void 0;
            try {
                for (var r, a = this.bindings[Symbol.iterator](); !(e = (r = a.next()).done); e = !0) {
                    var l = r.value, o = l.annotation, i = l.observer, c = l.observerPaths, s = l.teardown;
                    if (i) {
                        var u = !0, d = !1, m = void 0;
                        try {
                            for (var p, h = c[Symbol.iterator](); !(u = (p = h.next()).done); u = !0) {
                                var f = p.value;
                                Ember.removeObserver(o, f, i)
                            }
                        } catch (e) {
                            d = !0, m = e
                        } finally {
                            try {
                                !u && h.return && h.return()
                            } finally {
                                if (d) throw m
                            }
                        }
                    }
                    s && s()
                }
            } catch (e) {
                t = !0, n = e
            } finally {
                try {
                    !e && a.return && a.return()
                } finally {
                    if (t) throw n
                }
            }
            this.bindings = [];
            for (var b = ["annotations", "elements"], g = 0; g < b.length; g++) {
                var v = b[g], y = this.get(v);
                y && y.destroy(), this.set(v, null)
            }
        }
    }), o = l.extend({
        model: null,
        definition: [],
        setDefinition: Ember.on("init", Ember.observer("model.orderedAnnotations.[]", function () {
            var e = this, t = this.get("model");
            t || this.set("definition", []);
            var r = n(t);
            this.currentPromise = r, r.then(function (t) {
                r === e.currentPromise && (delete e.currentPromise, e.set("definition", t))
            })
        }))
    });
    e.default = Ember.Service.extend({
        selectorMatcher: Ember.inject.service(), addStructure: function (e, t, n) {
            if (e) {
                var r = this.get("selectorMatcher");
                e.set(t, n.create({selectorMatcher: r, model: e}))
            }
        }, removeStructure: function (e, t) {
            if (e) {
                var n = e.get(t);
                n && (n.destroy(), e.set(t, null))
            }
        }, addDataStructure: function (e) {
            this.addStructure(e, "dataStructure", o)
        }, removeDataStructure: function (e) {
            this.removeStructure(e, "dataStructure")
        }
    })
}),define("portia-ui/services/api", ["exports", "ember-api-requests/services/api"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), Object.defineProperty(e, "default", {
        enumerable: !0,
        get: function () {
            return t.default
        }
    })
}),define("portia-ui/services/browser", ["exports", "portia-ui/utils/utils"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.DEFAULT_MODE = e.INTERACTION_MODES = e.ANNOTATION_MODE = e.NAVIGATION_MODE = void 0;
    var n = Ember.computed, r = e.NAVIGATION_MODE = "navigation", a = e.ANNOTATION_MODE = "data-annotation",
        l = e.INTERACTION_MODES = new Set([a]), o = e.DEFAULT_MODE = r;
    e.default = Ember.Service.extend(Ember.Evented, {
        extractedItems: Ember.inject.service(),
        webSocket: Ember.inject.service(),
        backBuffer: [],
        cssEnabled: !0,
        document: null,
        forwardBuffer: [],
        loading: !1,
        mode: o,
        _disabled: !0,
        _url: null,
        baseurl: null,
        validUrl: !0,
        invalidUrl: n.not("validUrl"),
        disabled: Ember.computed("_disabled", "webSocket.closed", "mode", {
            get: function () {
                return this.get("_disabled") || this.get("webSocket.closed") || this.get("mode") !== r
            }, set: function (e, t) {
                return this.set("_disabled", t), t || this.get("webSocket.closed") || this.get("mode") !== r
            }
        }),
        isInteractionMode: Ember.computed("mode", function () {
            return l.has(this.get("mode"))
        }),
        url: Ember.computed("_url", {
            get: function () {
                return this.get("_url")
            }, set: function (e, t) {
                return this.go(t)
            }
        }),
        $document: Ember.computed("document", function () {
            var e = this.get("document");
            return e ? Ember.$(e) : null
        }),
        init: function () {
            var e = this;
            this._super.apply(this, arguments), this.on("contentChanged", function () {
                Ember.run.next(function () {
                    Ember.run.scheduleOnce("sync", e, "checkCSS")
                })
            })
        },
        resetUrl: Ember.observer("document", function () {
            this.get("document") || this.setProperties({_url: null, baseurl: null})
        }),
        invalidateUrl: function () {
            this.set("validUrl", !1)
        },
        go: function (e) {
            this.set("validUrl", !0);
            var n = this.get("_url");
            return e = (0, t.cleanUrl)(e), e && e !== n && (this._extract(), this.beginPropertyChanges(), n && this.get("backBuffer").pushObject(n), this.set("_url", e), this.set("forwardBuffer", []), this.endPropertyChanges()), e
        },
        back: function () {
            this._updateBuffers(this.get("backBuffer"), this.get("forwardBuffer"))
        },
        forward: function () {
            this._updateBuffers(this.get("forwardBuffer"), this.get("backBuffer"))
        },
        reload: function () {
            this.notifyPropertyChange("_url")
        },
        checkCSS: function () {
            var e = this.get("$document"), t = e.find('style[title="portia-show-meta"]'), n = !t.length;
            this.set("cssEnabled", n)
        },
        disableCSS: function () {
            if ([a].includes(this.get("mode"))) {
                var e = this.get("document");
                if (this.get("cssEnabled") && e) {
                    var n = this.get("$document"),
                        r = n.find('style:not([title="portia-show-meta"]), link[rel="stylesheet"]');
                    (0, t.renameAttr)(r, "media", "data-portia-hidden-media"), r.attr("media", "(width: -1px)"), (0, t.renameAttr)(n.find("[style]"), "style", "data-portia-hidden-style"), n.find("body").append("<style title=\"portia-show-meta\">\n    head {\n        display: block;\n        display: -webkit-flex;\n        display: flex;\n        -webkit-flex-direction: column;\n        flex-direction: column;\n    }\n    title, meta, link {\n        display: block;\n    }\n    title {\n        -webkit-order: 0;\n        order: 0;\n        font-weight: bold;\n    }\n    title::before {\n        content: 'Title: ';\n        font-weight: normal;\n    }\n    meta {\n        -webkit-order: 1;\n        order: 1;\n    }\n    meta[name][content]::after {\n        content: attr(name) ': \"' attr(content) '\"';\n    }\n    meta[property][content]::after {\n        content: attr(property) ': \"' attr(content) '\"';\n    }\n    meta[itemprop][content]::after {\n        content: attr(itemprop) ': \"' attr(content) '\"';\n    }\n    link {\n        -webkit-order: 2;\n        order: 2;\n    }\n    link[href][rel]::after {\n        content: 'Link: rel: \"' attr(rel) '\" href: \"' attr(data-portia-href) '\"';\n    }\n    link[href][rel][data-portia-hidden-media]::after {\n        content: 'Link: rel: \"' attr(rel) '\" href: \"' attr(data-portia-href) '\" media: \"' attr(data-portia-hidden-media) '\"';\n    }\n    link[href][rel][type]::after {\n        content: 'Link: rel: \"' attr(rel) '\" href: \"' attr(data-portia-href) '\" type: \"' attr(type) '\"';\n    }\n    link[href][rel][type][data-portia-hidden-media]::after {\n        content: 'Link: rel: \"' attr(rel) '\" href: \"' attr(data-portia-href) '\" type: \"' attr(type) '\" media: \"' attr(data-portia-hidden-media) '\"';\n    }\n</style>"), this.set("cssEnabled", !1)
                }
            }
        },
        enableCSS: function () {
            if ([a].includes(this.get("mode"))) {
                var e = this.get("document");
                if (!this.get("cssEnabled") && e) {
                    var n = this.get("$document");
                    n.find('style[title="portia-show-meta"]').remove();
                    var r = n.find('style:not([title="portia-show-meta"]), link[rel="stylesheet"]');
                    r.attr("media", null), (0, t.renameAttr)(r, "data-portia-hidden-media", "media"), (0, t.renameAttr)(n.find("[data-portia-hidden-style]"), "data-portia-hidden-style", "style"), this.set("cssEnabled", !0)
                }
            }
        },
        setAnnotationMode: function () {
            this.set("mode", a)
        },
        clearAnnotationMode: function () {
            this.get("mode") === a && (this.set("mode", o), this.enableCSS())
        },
        _updateBuffers: function (e, t) {
            if (e.length) {
                this.beginPropertyChanges(), t.pushObject(this.get("_url"));
                var n = e.popObject();
                this._extract(), this.setProperties({_url: n, baseurl: null}), this.endPropertyChanges()
            }
        },
        _extract: function () {
            this.get("extractedItems").activateExtraction()
        }
    })
}),define("portia-ui/services/capabilities", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Service.extend({
        ajax: Ember.inject.service(),
        fetchCapabilities: Ember.on("init", function () {
            var e = this;
            this.get("ajax").request("/portia/server_capabilities").then(function (t) {
                e.setProperties(t)
            }, function () {
                Ember.run.later(e, e.fetchCapabilities, 5e3)
            })
        })
    })
}),define("portia-ui/services/changes", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.observer, n = Ember.computed, r = Ember.inject.service, a = Ember.run.next;
    e.default = Ember.Service.extend({
        uiState: r(),
        capabilities: r(),
        project: n.readOnly("uiState.models.project"),
        versionControlled: n.readOnly("capabilities.capabilities.version_control"),
        changes: null,
        hasChanges: n("changes", "versionControlled", "hasChanges", {
            get: function () {
                var e = this.get("changes"), t = this.get("project");
                if (!(null === e || t && this.get("_project_id") !== t.get("id"))) return e;
                this._checkProjectChanges()
            }, set: function (e, t) {
                return this.get("versionControlled") && t ? (this.set("changes", !0), !0) : (this.set("changes", !1), !1)
            }
        }),
        _project_id: null,
        init: function () {
            this._checkProjectChanges()
        },
        projectChanged: t("project.id", function () {
            this.get("project.id") !== this.get("_project_id") && this._checkProjectChanges()
        }),
        _checkProjectChanges: function () {
            var e = this, t = this.get("project");
            if (!t || !this.get("versionControlled")) return !1;
            a(this, function () {
                t.status().then(function (t) {
                    var n = !!(t && t.meta && t.meta.changes && t.meta.changes.length);
                    e.set("_project_id", e.get("project.id")), e.set("changes", n)
                })
            })
        }
    })
}),define("portia-ui/services/clock", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Service.extend({
        time: new Date,
        metronome: Ember.on("init", function () {
            var e = new Date, t = 1e3 - +e % 1e3;
            this.set("time", e), Ember.run.later(this, this.metronome, t)
        })
    })
}),define("portia-ui/services/dispatcher", ["exports", "portia-ui/models/sample", "portia-ui/utils/start-urls", "portia-ui/models/start-url", "portia-ui/services/annotation-structure", "portia-ui/components/inspector-panel", "ember-concurrency"], function (e, t, n, r, a, l, o) {
    function i() {
        return Ember.computed("browser.url", function () {
            return this.get("browser.url")
        })
    }


    function c(e) {
        return Ember.computed("browser.url", "browser.document", "browser.loading", e + ".samples.@each.url", "browser.loading", function () {
            var t = this.get("browser.url"), n = this.get("browser.document"), r = this.get("browser.loading");
            return t && n && !r && !this.get(e + ".samples").isAny("url", t)
        })
    }

    function s(e) {
        return Ember.computed("browser.url", e + ".samples.@each.url", function () {
            var t = this.get("browser.url");
            if (t) return this.get(e + ".samples").findBy("url", t)
        })
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.computedCanAddSpider = i, e.computedCanAddSample = c, e.computedEditableSample = s, e.default = Ember.Service.extend({
        api: Ember.inject.service(),
        browser: Ember.inject.service(),
        routing: Ember.inject.service("-routing"),
        selectorMatcher: Ember.inject.service(),
        store: Ember.inject.service(),
        uiState: Ember.inject.service(),
        webSocket: Ember.inject.service(),
        addProject: function (e) {
            var t = this, n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], r = this.get("store"),
                a = r.createRecord("project", {name: e});
            return a.save().then(function () {
                if (n) {
                    t.get("routing").transitionTo("projects.project", [a], {}, !0)
                }
                return a
            })
        },
        addSchema: function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                n = "schema" + (e.get("schemas.length") + 1);
            return this.addNamedSchema(e, n, t)
        },
        addNamedSchema: function (e, t) {
            var n = this, r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], a = this.get("store"),
                l = a.createRecord("schema", {name: t, project: e});
            return l.save().then(function () {
                if (r) {
                    l.set("new", !0);
                    n.get("routing").transitionTo("projects.project.schema", [l], {}, !0)
                }
                return l
            })
        },
        addField: function (e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                r = "field" + (e.get("fields.length") + 1);
            return this.addNamedField(e, r, t, n)
        },
        addNamedField: function (e, t, n) {
            var r = this, a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
            return this.get("store").createRecord("field", {
                name: t,
                type: n || "text",
                schema: e
            }).save().then(function (e) {
                return a && (e.set("new", !0), r.get("routing").transitionTo("projects.project.schema.field", [e], {}, !0)), e
            })
        },
        addSpider: function (e) {
            var t = this, n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                a = this.get("browser.url");
            if (a) {
                var l = a, o = a.match("//([a-zA-Z0-9._-]*)"), i = this.get("store");
                l = o && o.length ? o.slice(-1)[0] : a.replace(/[^a-zA-Z0-9_\.-]/g, "");
                for (var c = l, s = 1; i.peekRecord("spider", l);) l = c + "_" + s, s += 1;
                var u = i.createRecord("spider", {id: l, startUrls: [(0, r.default)({url: a})], project: e});
                return u.set("project", e), u.save().then(function () {
                    if (n) {
                        u.set("new", !0);
                        t.get("routing").transitionTo("projects.project.spider", [u], {}, !0)
                    }
                }), u
            }
        },
        addStartUrl: function (e, t) {
            if (t && !(0, n.includesUrl)(e, t)) return (0, r.default)({url: t}).save(e)
        },
        addGeneratedUrl: function (e, t) {
            var a = {type: "generated"};
            return !t || (0, n.includesUrl)(e, t) ? (a.url = "http://", (0, r.default)(a).save(e)) : (0, n.includesUrl)(e, t) ? void 0 : (a.url = t, (0, r.default)(a).save(e))
        },
        addFeedUrl: function (e, t) {
            return (0, r.default)({url: t, type: "feed"}).save(e)
        },
        addSample: function (e) {
            var n = this, r = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                a = this.get("browser.url"), l = this.get("browser.document"), o = this.get("browser.loading");
            if (a && l && !o) {
                var i = this.get("store"), c = t.default.normalizeTitle(this.get("browser.document").title),
                    s = i.createRecord("sample", {name: c, body: "original_body", url: a, spider: e});
                return s.save().then(function () {
                    n.get("webSocket")._sendPromise({
                        _command: "save_html",
                        project: e.get("project.id"),
                        spider: e.get("id"),
                        sample: s.get("id")
                    }).then(function () {
                        if (r) {
                            s.set("new", !0);
                            n.get("routing").transitionTo("projects.project.spider.sample", [s], {}, !0)
                        }
                    })
                }), s
            }
        },
        addItem: function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            return this._addItem({sample: e}, t)
        },
        addNestedItem: function (e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            return this._addItem({parent: e}, t)
        },
        _addItem: function (e) {
            var t = this, n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1], r = this.get("store"),
                a = r.createRecord("item", e);
            return this.saveAnnotationAndRelatedSelectors(a).then(function () {
                if (n) {
                    a.set("new", !0);
                    t.get("routing").transitionTo("projects.project.spider.sample.data.item", [a], {}, !0)
                }
            }), a
        },
        addAnnotation: function (e, t, n) {
            var r = this, a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
            if (!e) {
                var o = void 0, i = void 0;
                e = (o = this.get("uiState.models.item")) ? o : (i = this.get("uiState.models.annotation")) ? i.get("parent") : this.get("uiState.models.sample.items.lastObject")
            }
            var c = this.get("store"), s = c.createRecord("annotation", {parent: e});
            return t && (s.addElement(t), n = n || (0, l.getDefaultAttribute)(t), (0, l.hasContentAttribute)(t) && s.set("text_content", "text-content")), void 0 !== n && s.set("attribute", n), this.saveAnnotationAndRelatedSelectors(s).then(function () {
                a && s.set("new", !0), t ? r.selectAnnotationElement(s, t, a) : a && r.selectAnnotation(s)
            }), s
        },
        saveAnnotationAndRelatedSelectors: function (e) {
            var t = this;
            return e.get("ownerSample") ? e.get("ownerSample").then(function (n) {
                return t.updateSampleSelectors(n).then(function () {
                    var t = [], r = !0, a = !1, l = void 0;
                    try {
                        for (var o, i = n.get("orderedChildren")[Symbol.iterator](); !(r = (o = i.next()).done); r = !0) {
                            var c = o.value;
                            c !== e && ("item" === c.constructor.modelName ? t.push({
                                model: c,
                                options: {partial: ["selector", "repeatedSelector", "siblings"]}
                            }) : "annotation" === c.constructor.modelName && t.push({
                                model: c,
                                options: {partial: ["selectionMode", "selector", "xpath"]}
                            }))
                        }
                    } catch (e) {
                        a = !0, l = e
                    } finally {
                        try {
                            !r && i.return && i.return()
                        } finally {
                            if (a) throw l
                        }
                    }
                    return e.save(t.length ? {coalesce: t} : void 0)
                })
            }) : new Ember.RSVP.Promise.resolve
        },
        addAnnotationTypeExtractor: function (e, t) {
            var n = this.get("store"), r = e.get("ownerSample.spider.project");
            return r.get("extractors").then(function (a) {
                var l = a.find(function (e) {
                    return "type" === e.get("type") && e.get("value") === t
                }), o = void 0;
                if (l) o = Ember.RSVP.resolve(l); else {
                    o = n.createRecord("extractor", {project: r, type: "type", value: t}).save()
                }
                return o.then(function (t) {
                    return e.get("extractors").pushObject(t), e.save().then(function () {
                        return t
                    })
                })
            })
        },
        addAnnotationRegexExtractor: function (e, t) {
            return e.get("extractors").pushObject(t), e.save().then(function () {
                return t
            })
        },
        addNewAnnotationRegexExtractor: function (e) {
            var t = this.get("store"), n = e.get("ownerSample.spider.project");
            return t.createRecord("extractor", {project: n, type: "regex", value: "(.*)"}).save().then(function (t) {
                return t.set("new", !0), e.get("extractors").pushObject(t), e.save().then(function () {
                    return t
                })
            })
        },
        addFragment: function (e) {
            var t = {type: "fixed", value: ""};
            e.fragments.addObject(t)
        },
        changeId: function (e, t) {
            var n = this.get("store"), r = e._internalModel, a = t.data.id, l = n.typeMapFor(r.type).idToRecord;
            delete l[r.id], l[a] = r, r.id = a, r._links.self = t.data.links.self, e.set("id", a)
        },
        changeSpiderName: function (e) {
            if (!e.get("name") || e.get("name") === e.get("id")) return new Ember.RSVP.Promise(function (t) {
                return t({data: {links: {self: e._internalModel._links.self}, id: e.get("id")}})
            });
            var t = {name: e.get("name")};
            return this.get("api").post("rename", {model: e, jsonData: t})
        },
        changeAnnotationSource: function (e, t) {
            e && (e.set("attribute", t), e.save())
        },
        removeSchema: function (e) {
            var t = this.get("uiState.models.schema");
            if (e === t) {
                this.get("routing").transitionTo("projects.project", [], {}, !0)
            }
            e.get("fields").then(function (t) {
                var n = !0, r = !1, a = void 0;
                try {
                    for (var l, o = (t.currentState || [])[Symbol.iterator](); !(n = (l = o.next()).done); n = !0) {
                        l.value.unloadRecord()
                    }
                } catch (e) {
                    r = !0, a = e
                } finally {
                    try {
                        !n && o.return && o.return()
                    } finally {
                        if (r) throw a
                    }
                }
                e.destroyRecord()
            })
        },
        removeField: function (e) {
            e === this.get("uiState.models.field") && this.get("routing").transitionTo("projects.project.schema", [], {}, !0);
            e.destroyRecord()
        },
        removeSpider: function (e) {
            e === this.get("uiState.models.spider") && this.get("routing").transitionTo("projects.project", [], {}, !0);
            e.destroyRecord()
        },
        removeStartUrl: function (e, t) {
            e.get("startUrls").removeObject(t), e.save()
        },
        replaceStartUrl: function (e, t, a) {
            var l = e.get("startUrls"), o = l.filterBy("url", t)[0];
            l.removeObject(o), (0, n.includesUrl)(e, a) || l.addObject((0, r.default)({url: a, type: "url"})), e.save()
        },
        removeSample: function (e) {
            e === this.get("uiState.models.sample") && this.get("routing").transitionTo("projects.project.spider", [], {}, !0);
            e.destroyRecord()
        },
        removeItem: function (e) {
            var t = this.get("uiState.models.item"), n = this.get("uiState.models.annotation");
            if (e === t || e.get("orderedAnnotations").includes(n)) {
                this.get("routing").transitionTo("projects.project.spider.sample.data", [], {}, !0)
            }
            e.deleteRecord(), this.saveAnnotationAndRelatedSelectors(e)
        },
        removeAnnotation: function (e) {
            this.get("_removeAnnotationTask").perform(e)
        },
        _removeAnnotationTask: (0, o.task)(regeneratorRuntime.mark(function e(t) {
            var n, r;
            return regeneratorRuntime.wrap(function (e) {
                for (; ;) switch (e.prev = e.next) {
                    case 0:
                        return n = this.get("uiState.models.annotation"), t === n && (r = this.get("routing"), r.transitionTo("projects.project.spider.sample.data", [], {}, !0)), t.deleteRecord(), e.next = 5, this.saveAnnotationAndRelatedSelectors(t);
                    case 5:
                    case"end":
                        return e.stop()
                }
            }, e, this)
        })).drop(),
        removeAnnotationExtractor: function (e, t) {
            e.get("extractors").removeObject(t), e.save()
        },
        removeFragment: function (e, t) {
            e.fragments.removeObject(t)
        },
        selectAnnotation: function (e) {
            if (this.get("uiState.models.annotation") !== e) {
                this.get("routing").transitionTo("projects.project.spider.sample.data.annotation", [e], {}, !0)
            }
        },
        selectAnnotationElement: function (e, t) {
            var n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
            this.set("uiState.viewPort.selectedElement", t), this.set("uiState.viewPort.originalSelectedElement", t), this.set("uiState.viewPort.selectedModel", e), n && this.selectAnnotation(e)
        },
        clearSelection: function () {
            this.set("uiState.viewPort.selectedElement", null), this.set("uiState.viewPort.originalSelectedElement", null);
            var e = this.get("routing"), t = e.get("router.currentRouteName"), n = void 0;
            n = t.startsWith("projects.project.spider.sample") ? t.split(".").slice(0, 5).join(".") : "projects.project.spider.sample", e.transitionTo(n, [], {}, !0)
        },
        addElementToAnnotation: function (e, t) {
            var n = this;
            e.addElement(t), this.saveAnnotationAndRelatedSelectors(e).then(function () {
                n.selectAnnotationElement(e, t)
            })
        },
        removeElementFromAnnotation: function (e, t) {
            e.removeElement(t), this.selectAnnotation(e), this.saveAnnotationAndRelatedSelectors(e)
        },
        updateSampleSelectors: function (e) {
            var t = this.get("selectorMatcher");
            return (0, a.createStructure)(e).then(function (e) {
                return (0, a.updateStructureSelectors)(e, t), null
            })
        }
    })
}),define("portia-ui/services/extracted-items", ["exports", "ember-concurrency"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = Ember.computed;
    e.default = Ember.Service.extend({
        uiState: Ember.inject.service(),
        webSocket: Ember.inject.service(),
        items: [],
        links: {},
        isExtracting: !1,
        failedExtraction: !1,
        extractionTimeout: 0,
        spider: n.readOnly("uiState.models.spider"),
        sample: n.readOnly("uiState.models.sample"),
        noSamples: n.equal("spider.samples.length", 0),
        init: function () {
            this._super();
            var e = this.get("webSocket");
            e.addCommand("metadata", this, this._setItems), e.addCommand("extract_items", this, this._setExtraction)
        },
        activateExtraction: function () {
            this.set("items", []), this.set("extractionTimeout", 0), this.set("isExtracting", !0), this.set("failedExtraction", !1), this.get("_extract").cancelAll()
        },
        failExtraction: function (e) {
            this._finishExtraction(), this.set("failedExtraction", !0), this.set("failedExtractionMsg", e)
        },
        update: function () {
            Ember.run.throttle(this, this._getitems, 300, !1)
        },
        _getitems: function () {
            var e = this.get("spider.id");
            e && this.get("webSocket").send({
                _command: "extract_items",
                project: this.get("uiState.models.project.id"),
                spider: e,
                sample: this.get("sample.id")
            })
        },
        _setExtraction: function (e) {
            if (this.get("noSamples")) return void this.failExtraction("Samples are needed for extracting data.");
            this._updateItems(e), this._updateExtraction(e), this._setItems(e)
        },
        _extract: (0, t.task)(regeneratorRuntime.mark(function e() {
            var n;
            return regeneratorRuntime.wrap(function (e) {
                for (; ;) switch (e.prev = e.next) {
                    case 0:
                        return n = this.get("extractionTimeout"), e.next = 3, (0, t.timeout)(n);
                    case 3:
                        this.update(), this.set("extractionTimeout", 0 === n ? 2e3 : 2 * n);
                    case 5:
                    case"end":
                        return e.stop()
                }
            }, e, this)
        })).drop(),
        _setItems: function (e) {
            this._startExtraction(e), this.setProperties({
                links: e.links,
                changes: e.changes,
                type: e.type,
                changed: e.changed
            })
        },
        _startExtraction: function (e) {
            e.loaded && this.get("isExtracting") && this.get("_extract").perform()
        },
        _updateItems: function (e) {
            var t = e.items;
            t && t.length >= this.get("items.length") && this.set("items", t)
        },
        _updateExtraction: function (e) {
            var t = e.items && e.items.length > 0, n = this.get("extractionTimeout") > 3e4;
            t || n ? this._finishExtraction() : this.get("_extract").perform()
        },
        _finishExtraction: function () {
            this.set("isExtracting", !1), this.get("_extract").cancelAll()
        }
    })
}),define("portia-ui/services/loading-slider", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.Service, n = Ember.Evented;
    e.default = t.extend(n, {
        startLoading: function () {
            this.trigger("startLoading")
        }, endLoading: function () {
            this.trigger("endLoading")
        }, changeAttrs: function (e) {
            this.trigger("changeAttrs", e)
        }
    })
}),define("portia-ui/services/notification-manager", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Service.extend({
        banners: [],
        notifications: [],
        add: function (e) {
            return this.get("notifications").pushObject(e)
        },
        addBanner: function (e) {
            return this.get("banners").addObject(e)
        },
        removeBanner: function (e) {
            return this.get("banners").removeObject(e)
        },
        showNotification: function (e, t, n) {
            e && !t && (t = e, e = null), t && this.add({title: e, message: t, type: n || "info"})
        },
        showSuccessNotification: function (e, t) {
            this.showNotification(e, t, "success")
        },
        showWarningNotification: function (e, t) {
            this.showNotification(e, t, "warning")
        },
        showErrorNotification: function (e, t) {
            this.showNotification(e, t, "danger")
        }
    })
}),define("portia-ui/services/overlays", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Service.extend({
        counter: 0,
        hasOverlays: Ember.computed.bool("counter"),
        add: function () {
            this.incrementProperty("counter")
        },
        remove: function () {
            this.decrementProperty("counter")
        }
    })
}),define("portia-ui/services/position-monitor", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Service.extend({
        elements: [], timerId: null, registerElement: function (e, t, n, r) {
            var a = {element: e, context: t, readCallback: n, writeCallback: r, rects: null, boundingRect: null};
            this.elements.push(a), null === this.timerId && this.updateRaf()
        }, unRegisterElement: function (e, t, n, r) {
            var a = this.elements, l = a.find(function (a) {
                return a.element === e && a.context === t && a.readCallback === n && a.writeCallback === r
            });
            l && (a.removeObject(l), a.length || (cancelAnimationFrame(this.timerId), this.timerId = null))
        }, updateRaf: function () {
            null !== this.timerId && cancelAnimationFrame(this.timerId), this.update(), this.timerId = requestAnimationFrame(this.updateRaf.bind(this))
        }, update: function (e) {
            e = Array.isArray(e) ? e : this.elements;
            var t = [];
            e.forEach(function (e) {
                var n = e.element, r = e.rects, a = n.getClientRects(), l = !1;
                if (r && r.length === a.length) for (var o = 0; o < r.length; o++) {
                    var i = r[o], c = a[o];
                    if (c.top !== i.top || c.bottom !== i.bottom || c.left !== i.left || c.right !== i.right) {
                        l = !0;
                        break
                    }
                } else l = !0;
                l && (e.rects = a, e.boundingRect = n.getBoundingClientRect(), t.push(e))
            }), t.forEach(function (e) {
                var t = e.element, n = e.context, r = e.readCallback, a = e.rects, l = e.boundingRect;
                r && r.call(n, a, l, t)
            }), t.forEach(function (e) {
                var t = e.element, n = e.context, r = e.writeCallback, a = e.rects, l = e.boundingRect;
                r.call(n, a, l, t)
            })
        }
    })
}),define("portia-ui/services/saving-notification", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var t = Ember.computed, n = Ember.inject.service;
    e.default = Ember.Service.extend({
        extractedItems: n(),
        counter: 0,
        lastSaved: null,
        isSaving: t.bool("counter"),
        start: function () {
            this.get("extractedItems").activateExtraction(), this.incrementProperty("counter")
        },
        end: function () {
            this.decrementProperty("counter"), this.get("counter") || this.set("lastSaved", new Date), this.get("extractedItems").update()
        }
    })
}),define("portia-ui/services/selector-matcher", ["exports"], function (e) {
    function t(e, t) {
        if (e.length !== t.length) return !1;
        for (var n = e.length; n--;) if (e[n] !== t[n]) return !1;
        return !0
    }

    Object.defineProperty(e, "__esModule", {value: !0});
    var n = function () {
        function e(e, t) {
            var n = [], r = !0, a = !1, l = void 0;
            try {
                for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
            } catch (e) {
                a = !0, l = e
            } finally {
                try {
                    !r && i.return && i.return()
                } finally {
                    if (a) throw l
                }
            }
            return n
        }

        return function (t, n) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return e(t, n);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }();
    e.default = Ember.Service.extend(Ember.Evented, {
        browser: Ember.inject.service(),
        selectors: new Map,
        timerId: null,
        updateInterval: 100,
        register: function (e, t, n) {
            var r = this.selectors.get(e);
            r ? n ? n.call(t, r) : t(r) : this.selectors.set(e, []), null === this.timerId && this.scheduleUpdate(1), this.on.apply(this, arguments)
        },
        unRegister: function (e) {
            this.off.apply(this, arguments), this.has(e) || (this.selectors.delete(e), this.selectors.size || (Ember.run.cancel(this.timerId), this.timerId = null))
        },
        watch: function (e, t) {
            this.on("changed", e, t)
        },
        unWatch: function (e, t) {
            this.off("changed", e, t)
        },
        query: function (e) {
            var t = this.get("browser.$document");
            if (t) {
                var n = this.selectors.get(e);
                return n ? (n.length || (n = t.find(e).toArray(), this.selectors.set(e, n)), n) : t.find(e).toArray()
            }
            return []
        },
        scheduleUpdate: function (e) {
            Ember.run.cancel(this.timerId), this.timerId = Ember.run.later(this, this.update, e)
        },
        update: function () {
            var e = this, r = this.get("browser.$document");
            if (r) {
                var a = [];
                this.selectors.forEach(function (n, l) {
                    var o = r.find(l).toArray();
                    t(n, o) || (e.selectors.set(l, o), a.push([l, o]))
                }), a.length && (a.forEach(function (t) {
                    var r = n(t, 2), a = r[0], l = r[1];
                    e.trigger(a, l)
                }), this.trigger("changed", a))
            }
            this.scheduleUpdate(this.updateInterval)
        }
    })
});
define("portia-ui/services/store", ["exports", "ember-data"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.Store.extend({
        didSaveRecord: function (e, t) {
            var n = this.typeMapFor(e.type).idToRecord;
            if (null !== e.id && !(e.id in n)) {
                var r = !0, a = !1, l = void 0;
                try {
                    for (var o, i = Object.keys(n)[Symbol.iterator](); !(r = (o = i.next()).done); r = !0) {
                        var c = o.value;
                        n[c] === e && (delete n[c], n[e.id] = e)
                    }
                } catch (e) {
                    a = !0, l = e
                } finally {
                    try {
                        !r && i.return && i.return()
                    } finally {
                        if (a) throw l
                    }
                }
            }
            return t && t.data && t.data.links && this.updateRecordLinks(e, t.data.links), this._super.apply(this, arguments)
        }, _load: function (e) {
            var t = this._super.apply(this, arguments);
            return this.updateRecordLinks(t, e.links), t
        }, updateRecordLinks: function (e, t) {
            e._links = t || e._links || {}
        }
    })
}), define("portia-ui/services/ui-state", ["exports", "ember-local-storage"], function (e, t) {
    function n(e) {
        if (Array.isArray(e)) {
            for (var t = 0, n = Array(e.length); t < e.length; t++) n[t] = e[t];
            return n
        }
        return Array.from(e)
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.Service.extend({
        models: function (e) {
            var t = Object.keys(e);
            return Ember.computed.apply(Ember, ["router.currentState"].concat(n(t.map(function (t) {
                return e[t]
            })), [function () {
                var n = this, r = {}, a = this.get("router.currentRouteName");
                return t.forEach(function (t) {
                    var l = e[t], o = n.get(l + ".routeName"), i = a && a.startsWith(o);
                    r[t] = i ? n.get(l).modelFor(o) : null
                }), r
            }]))
        }({
            project: "projectRoute",
            spider: "spiderRoute",
            sample: "sampleRoute",
            item: "itemRoute",
            annotation: "annotationRoute",
            schema: "schemaRoute",
            field: "fieldRoute"
        }),
        routes: function (e) {
            var t = Object.keys(e);
            return Ember.computed.apply(Ember, ["router.currentState"].concat(n(t.map(function (t) {
                return e[t]
            })), [function () {
                var n = this, r = {}, a = this.get("router.currentRouteName");
                return t.forEach(function (t) {
                    var l = e[t], o = n.get(l + ".routeName");
                    r[t] = a.startsWith(o)
                }), r
            }]))
        }({
            project: "projectRoute",
            spider: "spiderRoute",
            sample: "sampleRoute",
            data: "dataRoute",
            item: "itemRoute",
            annotation: "annotationRoute",
            schema: "schemaRoute",
            field: "fieldRoute"
        }),
        slideMain: !1,
        selectedTools: (0, t.storageFor)("uiStateSelectedTools"),
        collapsedPanels: (0, t.storageFor)("uiStateCollapsedPanels"),
        viewPort: {
            hoveredElement: null,
            hoveredModels: [],
            originalSelectedElement: null,
            selectedElement: null,
            selectedModel: null,
            hoverOverlayColor: null
        }
    })
}), define("portia-ui/services/web-socket", ["exports", "portia-ui/config/environment", "portia-ui/utils/utils"], function (e, t, n) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var r = Ember.computed, a = Ember.run, l = Ember.Evented, o = Ember.Logger, i = Ember.RSVP, c = Ember.Service;
    e.default = c.extend(l, {
        closed: !0,
        opened: r.not("closed"),
        connecting: !1,
        ws: null,
        heartbeat: null,
        nextConnect: null,
        reconnectTimeout: 5e3,
        deferreds: {},
        url: function () {
            var e = URI.parse(t.default.SLYD_URL || window.location.protocol + "//" + window.location.host);
            return /wss?/.test(e.protocol) || (e.protocol = "https" === e.protocol ? "wss" : "ws"), e.path = "/portia/ws", URI.build(e)
        }(),
        secondsUntilReconnect: 0,
        reconnectImminent: r("reconnectMessage", "secondsUntilReconnect", function () {
            return this.get("secondsUntilReconnect") < 2 && 0 === this.get("reconnectMessage").length
        }),
        reconnectComponent: null,
        reconnectMessage: "",
        showBanner: r.or("closed", "reconnectComponent"),
        init: function (e) {
            var t = this;
            e && this.setProperties(e), window.addEventListener("beforeunload", function () {
                t.get("opened") && t.close(4001)
            })
        },
        connect: function () {
            if (this.get("closed")) return this._createWebsocket()
        },
        _updateCountdownTimer: function () {
            var e = this;
            0 === this.secondsUntilReconnect && this.get("countdownTid") ? (clearInterval(this.get("countdownTid")), this.set("countdownTid", null)) : this.secondsUntilReconnect > 0 && !this.get("countdownTid") && this.set("countdownTid", setInterval(function () {
                e.decrementProperty("secondsUntilReconnect")
            }, 1e3))
        }.observes("secondsUntilReconnect"),
        _onclose: function (e) {
            if (this.heartbeat && clearInterval(this.heartbeat), this.set("closed", !0), this.set("connecting", !1), o.log("<Closed Websocket>"), 4001 !== e.code && 1e3 !== e.code) {
                if (!window.navigator.onLine) return this.set("reconnectMessage", "You are currently offline, you will be reconnected as soon as possible, or "), void window.addEventListener("online", this.connect, !1);
                var t = this._connectTimeout();
                this.set("secondsUntilReconnect", Math.round(t / 1e3));
                var n = a.later(this, this.connect, t);
                this.set("reconnectTid", n)
            }
        },
        _onmessage: function (e) {
            var t = e.data;
            try {
                t = JSON.parse(t)
            } catch (l) {
                return (0, n.logError)("Error parsing data returned by server: " + l + "\n" + t)
            }
            var r = t._command;
            if (!r) return (0, n.logError)("Received response with no command: " + JSON.stringify(t));
            var a = t.id;
            if (a in this.get("deferreds")) {
                if (a = this.get("deferreds." + a), delete this.get("deferreds")[t.id], t.error) {
                    var l = new Error(t.reason);
                    throw l.reason = {jqXHR: {responseText: t.reason}}, a.reject(l), l
                }
                a.resolve(t)
            }
            if (!this.has(r)) return o.debug("Received unknown command: " + r);
            this.trigger(r, t)
        },
        _onopen: function () {
            o.log("<Opened Websocket>"), this.set("closed", !1), this.set("reconnectMessage", ""), this.set("connecting", !1), this.set("reconnectTimeout", 5e3), this.heartbeat = setInterval(function () {
                this.send({_command: "heartbeat"})
            }.bind(this), 2e4), window.removeEventListener("online", this.connect, !1)
        },
        _createWebsocket: function () {
            this.get("reconnectTid") && (a.cancel(this.get("reconnectTid")), this.set("reconnectTid", null)), this.set("secondsUntilReconnect", 0), this.set("connecting", !0);
            var e;
            try {
                e = new WebSocket(this.get("url"))
            } catch (e) {
                return o.log("Error connecting to server: " + e), void this.set("connecting", !1)
            }
            e.onclose = this._onclose.bind(this), e.onmessage = this._onmessage.bind(this), e.onopen = this._onopen.bind(this), this.set("ws", e)
        },
        _connectTimeout: function () {
            var e = Math.max(this.get("reconnectTimeout"), 5e3);
            return this.set("reconnectTimeout", Math.min(2 * e, 6e4)), this.get("reconnectTimeout")
        },
        addCommand: function () {
            this.on.apply(this, arguments)
        },
        removeCommand: function () {
            this.off.apply(this, arguments)
        },
        close: function (e, t) {
            return e = e || 1e3, t = t || "application called close", this.get("ws").close(e, t)
        },
        send: function (e) {
            if (!this.get("closed") && e) {
                if ("string" != typeof e) try {
                    e = JSON.stringify(e)
                } catch (e) {
                    return (0, n.logError)("Error serializing data: " + e)
                }
                return this.get("ws").send(e)
            }
        },
        _sendPromise: function (e) {
            var t = new i.defer;
            return e._meta ? e._meta.id || (e._meta.id = (0, n.shortGuid)()) : e._meta = this._metadata(null), this.get("opened") ? (this.set("deferreds." + e._meta.id, t), this.send(e)) : t.reject("Websocket is closed"), t.promise
        },
        _metadata: function (e) {
            return {type: e, id: (0, n.shortGuid)()}
        }
    })
}), define("portia-ui/storages/cookies", ["exports", "ember-local-storage/local/object"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.extend()
}), define("portia-ui/storages/page-loads", ["exports", "ember-local-storage/local/object"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.extend()
}), define("portia-ui/storages/ui-state-collapsed-panels", ["exports", "ember-local-storage/local/object"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.extend()
}), define("portia-ui/storages/ui-state-selected-tools", ["exports", "ember-local-storage/local/object"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0});
    var n = t.default.extend({
        init: function () {
            this._super.apply(this, arguments), this.get("magicToolActive") && this.set("selectionMode", null)
        }
    });
    n.reopenClass({
        initialState: function () {
            return {magicToolActive: !0, selectionMode: null}
        }
    }), e.default = n
}), define("portia-ui/templates/application", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 18, column: 8}, end: {line: 22, column: 8}},
                    moduleName: "portia-ui/templates/application.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n            ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n            ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(3);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r
                },
                statements: [["inline", "outlet", ["options-panels"], [], ["loc", [null, [19, 12], [19, 39]]]], ["inline", "outlet", ["main"], [], ["loc", [null, [20, 12], [20, 29]]]], ["inline", "outlet", ["tool-panels"], [], ["loc", [null, [21, 12], [21, 36]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 25, column: 0}},
                moduleName: "portia-ui/templates/application.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("section");
                e.setAttribute(n, "id", "window");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("nav");
                e.setAttribute(r, "id", "top-bar"), e.setAttribute(r, "class", "navbar navbar-default navbar-static-top");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "navbar-header navbar-left");
                var l = e.createTextNode("\n            ");
                e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createTextNode("\n        ");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("ul");
                e.setAttribute(a, "class", "nav navbar-nav navbar-left");
                var l = e.createTextNode("\n            ");
                e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createTextNode("\n        ");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("div");
                e.setAttribute(a, "class", "navbar-right");
                var l = e.createTextNode("\n            ");
                e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createTextNode("\n        ");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n\n    ");
                e.appendChild(n, r);
                var r = e.createElement("section"), a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = e.childAt(r, [3]), l = e.childAt(r, [5]), o = new Array(7);
                return o[0] = e.createMorphAt(r, 1, 1), o[1] = e.createMorphAt(e.childAt(a, [1]), 1, 1), o[2] = e.createMorphAt(e.childAt(a, [3]), 1, 1), o[3] = e.createMorphAt(e.childAt(a, [5]), 1, 1), o[4] = e.createMorphAt(l, 1, 1), o[5] = e.createMorphAt(l, 3, 3), o[6] = e.createMorphAt(l, 5, 5), o
            },
            statements: [["inline", "loading-slider", [], ["isLoading", ["subexpr", "@mut", [["get", "loading", ["loc", [null, [2, 31], [2, 38]]]]], [], []], "duration", 200], ["loc", [null, [2, 4], [2, 53]]]], ["inline", "partial", ["branding"], [], ["loc", [null, [5, 12], [5, 34]]]], ["content", "scrapinghub-links", ["loc", [null, [8, 12], [8, 33]]]], ["inline", "outlet", ["top-bar"], [], ["loc", [null, [11, 12], [11, 32]]]], ["content", "notification-container", ["loc", [null, [16, 8], [16, 34]]]], ["inline", "outlet", ["side-bar"], [], ["loc", [null, [17, 8], [17, 29]]]], ["block", "sliding-main", [], [], 0, null, ["loc", [null, [18, 8], [22, 25]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/branding", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 4, column: 0}},
                moduleName: "portia-ui/templates/branding.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("span");
                e.setAttribute(n, "class", "navbar-brand");
                var r = e.createTextNode("\n     可视化爬虫(portia) ");
                e.appendChild(n, r);
                var r = e.createElement("span");
                e.setAttribute(r, "class", "label label-info");
                var a = e.createTextNode("v1.0");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function () {
                return []
            }, statements: [], locals: [], templates: []
        }
    }())
}), define("portia-ui/templates/browsers", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 7, column: 0}},
                moduleName: "portia-ui/templates/browsers.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div");
                e.setAttribute(n, "class", "browser-list-container");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("h3"),
                    a = e.createTextNode("Unfortunately your browser doesn't support some of the features required to give you a great experience with Portia.");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("p");
                e.setAttribute(r, "class", "browser-p");
                var a = e.createTextNode("Please try using an up-to-date version of one of these browsers, which are known to work well with Portia.");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 5, 5), r
            },
            statements: [["inline", "browser-list", [], ["browsers", ["subexpr", "@mut", [["get", "model", ["loc", [null, [5, 28], [5, 33]]]]], [], []]], ["loc", [null, [5, 4], [5, 35]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/components/add-start-url-button", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 4, column: 8}, end: {line: 8, column: 8}},
                            moduleName: "portia-ui/templates/components/add-start-url-button.hbs"
                        }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createElement("p"),
                                r = e.createTextNode("\n                Add this page as a start page for your spider\n            ");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: [], templates: []
                    }
                }(), t = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 8, column: 8}, end: {line: 12, column: 8}},
                            moduleName: "portia-ui/templates/components/add-start-url-button.hbs"
                        }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createElement("p"),
                                r = e.createTextNode("\n                Remove this page from your spider's start pages\n            ");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: [], templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 13, column: 4}},
                        moduleName: "portia-ui/templates/components/add-start-url-button.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        Toggle start page\n");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["get", "newStartUrl", ["loc", [null, [4, 14], [4, 25]]]]], [], 0, 1, ["loc", [null, [4, 8], [12, 15]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }(), t = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 13, column: 4}, end: {line: 17, column: 4}},
                        moduleName: "portia-ui/templates/components/add-start-url-button.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createElement("button");
                        e.setAttribute(n, "id", "start-url-button"), e.setAttribute(n, "type", "button");
                        var r = e.createTextNode("\n            ");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode("开始页面");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [1]), a = new Array(4);
                        return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createAttrMorph(r, "disabled"), a[2] = e.createElementMorph(r), a[3] = e.createMorphAt(r, 1, 1), a
                    },
                    statements: [["attribute", "class", ["concat", ["btn btn-default ", ["subexpr", "if", [["subexpr", "not", [["get", "newStartUrl", ["loc", [null, [14, 85], [14, 96]]]]], [], ["loc", [null, [14, 80], [14, 97]]]], "active"], [], ["loc", [null, [14, 75], [14, 108]]]]]]], ["attribute", "disabled", ["get", "disableStartUrl", ["loc", [null, [14, 121], [14, 136]]]]], ["element", "action", ["toggleStartUrl"], [], ["loc", [null, [14, 139], [14, 166]]]], ["inline", "icon-button", [], ["icon", "url"], ["loc", [null, [15, 12], [15, 38]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 18, column: 0}},
                    moduleName: "portia-ui/templates/components/add-start-url-button.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [2, 14], [2, 29]]]], "tooltip"], [], ["loc", [null, [2, 10], [2, 40]]]]], [], 0, 1, ["loc", [null, [2, 4], [17, 11]]]]],
                locals: ["options"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 19, column: 0}},
                moduleName: "portia-ui/templates/components/add-start-url-button.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tooltip-container", [], ["tooltipFor", "start-url-button", "tooltipContainer", "body"], 0, null, ["loc", [null, [1, 0], [18, 22]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/animation-container", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 4, column: 0}},
                moduleName: "portia-ui/templates/components/animation-container.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div");
                e.setAttribute(n, "class", "animation-content");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
            }, statements: [["content", "yield", ["loc", [null, [2, 4], [2, 13]]]]], locals: [], templates: []
        }
    }())
}), define("portia-ui/templates/components/annotation-options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 7, column: 8}, end: {line: 9, column: 8}},
                    moduleName: "portia-ui/templates/components/annotation-options.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(),
                        n = e.createTextNode("            Only extract items that have this annotation. Only this sample will be affected\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function () {
                    return []
                }, statements: [], locals: [], templates: []
            }
        }(), t = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 18, column: 12}, end: {line: 21, column: 12}},
                        moduleName: "portia-ui/templates/components/annotation-options.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n                ");
                        e.appendChild(t, n);
                        var n = e.createElement("span"),
                            r = e.createTextNode("The input value is not a valid CSS selector.");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [3]), a = new Array(2);
                        return a[0] = e.createMorphAt(t, 1, 1, n), a[1] = e.createAttrMorph(r, "class"), a
                    },
                    statements: [["inline", "buffered-input", [], ["type", "text", "name", "selector", "class", "form-control", "value", ["subexpr", "mut", [["get", "cssSelector", ["loc", [null, [19, 93], [19, 104]]]]], [], ["loc", [null, [19, 88], [19, 105]]]], "viewValue", ["subexpr", "mut", [["get", "editedCssSelector", ["loc", [null, [19, 121], [19, 138]]]]], [], ["loc", [null, [19, 116], [19, 139]]]], "onChange", ["subexpr", "action", ["save"], [], ["loc", [null, [19, 149], [19, 164]]]]], ["loc", [null, [19, 16], [19, 166]]]], ["attribute", "class", ["concat", ["help-block", ["subexpr", "if", [["subexpr", "not", [["get", "invalidSelector", ["loc", [null, [20, 49], [20, 64]]]]], [], ["loc", [null, [20, 44], [20, 65]]]], " hide"], [], ["loc", [null, [20, 39], [20, 75]]]]]]]],
                    locals: [],
                    templates: []
                }
            }(), t = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 21, column: 12}, end: {line: 23, column: 12}},
                        moduleName: "portia-ui/templates/components/annotation-options.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "input", [], ["type", "text", "name", "selector", "class", "form-control", "value", ["subexpr", "get", [["get", "annotation", ["loc", [null, [22, 84], [22, 94]]]], ["get", "annotation.selectionMode", ["loc", [null, [22, 95], [22, 119]]]]], [], ["loc", [null, [22, 79], [22, 120]]]], "readonly", !0], ["loc", [null, [22, 16], [22, 136]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 15, column: 4}, end: {line: 25, column: 4}},
                    moduleName: "portia-ui/templates/components/annotation-options.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createElement("div"), r = e.createTextNode("\n            ");
                    e.appendChild(n, r);
                    var r = e.createElement("label");
                    e.setAttribute(r, "for", "selector");
                    var a = e.createTextNode("Selector");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createTextNode("\n");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("        ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = e.childAt(t, [1]), a = new Array(2);
                    return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createMorphAt(r, 3, 3), a
                },
                statements: [["attribute", "class", ["concat", ["form-group", ["subexpr", "if", [["get", "invalidSelector", ["loc", [null, [16, 35], [16, 50]]]], " has-error"], [], ["loc", [null, [16, 30], [16, 65]]]]]]], ["block", "if", [["subexpr", "eq", [["get", "annotation.selectionMode", ["loc", [null, [18, 22], [18, 46]]]], "css"], [], ["loc", [null, [18, 18], [18, 53]]]]], [], 0, 1, ["loc", [null, [18, 12], [23, 19]]]]],
                locals: [],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 31, column: 0}},
                moduleName: "portia-ui/templates/components/annotation-options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("h3"), r = e.createTextNode("Annotation");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createElement("form"), r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "checkbox");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("label"), l = e.createTextNode("\n            ");
                e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createTextNode(" Required\n        ");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "form-group");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("label");
                e.setAttribute(a, "for", "selectionMode");
                var l = e.createTextNode("Selection mode");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "form-group");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("label");
                e.setAttribute(a, "for", "attribute");
                var l = e.createTextNode("Source");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [2]), a = e.childAt(r, [1]), l = new Array(6);
                return l[0] = e.createElementMorph(r), l[1] = e.createMorphAt(e.childAt(a, [1]), 1, 1), l[2] = e.createMorphAt(a, 3, 3), l[3] = e.createMorphAt(e.childAt(r, [3]), 3, 3), l[4] = e.createMorphAt(r, 5, 5), l[5] = e.createMorphAt(e.childAt(r, [7]), 3, 3), l
            },
            statements: [["element", "action", ["save"], ["on", "change"], ["loc", [null, [2, 6], [2, 35]]]], ["inline", "input", [], ["type", "checkbox", "name", "required", "checked", ["subexpr", "mut", [["get", "annotation.required", ["loc", [null, [5, 65], [5, 84]]]]], [], ["loc", [null, [5, 60], [5, 85]]]]], ["loc", [null, [5, 12], [5, 87]]]], ["block", "help-icon", [], [], 0, null, ["loc", [null, [7, 8], [9, 22]]]], ["inline", "select-box", [], ["name", "selectionMode", "value", ["subexpr", "mut", [["get", "selectionMode", ["loc", [null, [13, 53], [13, 66]]]]], [], ["loc", [null, [13, 48], [13, 67]]]], "valueAttribute", "label", "choices", ["subexpr", "@mut", [["get", "selectionModeOptions", ["loc", [null, [13, 99], [13, 119]]]]], [], []], "onChange", ["subexpr", "action", ["save"], [], ["loc", [null, [13, 129], [13, 144]]]]], ["loc", [null, [13, 8], [13, 146]]]], ["block", "if", [["subexpr", "not-eq", [["get", "annotation.selectionMode", ["loc", [null, [15, 18], [15, 42]]]], "auto"], [], ["loc", [null, [15, 10], [15, 50]]]]], [], 1, null, ["loc", [null, [15, 4], [25, 11]]]], ["inline", "select-box", [], ["name", "attribute", "value", ["subexpr", "mut", [["get", "attribute", ["loc", [null, [28, 49], [28, 58]]]]], [], ["loc", [null, [28, 44], [28, 59]]]], "valueAttribute", "name", "choices", ["subexpr", "@mut", [["get", "attributes", ["loc", [null, [28, 90], [28, 100]]]]], [], []], "onChange", ["subexpr", "action", ["save"], [], ["loc", [null, [28, 110], [28, 125]]]]], ["loc", [null, [28, 8], [28, 127]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/browser-iframe", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["empty-body"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 1, column: 0}},
                moduleName: "portia-ui/templates/components/browser-iframe.hbs"
            }, isEmpty: !0, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                return e.createDocumentFragment()
            }, buildRenderNodes: function () {
                return []
            }, statements: [], locals: [], templates: []
        }
    }())
}), define("portia-ui/templates/components/browser-list", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 2, column: 4}, end: {line: 7, column: 4}},
                    moduleName: "portia-ui/templates/components/browser-list.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createElement("a");
                    e.setAttribute(n, "class", "no-decoration");
                    var r = e.createTextNode("\n            ");
                    e.appendChild(n, r);
                    var r = e.createElement("img");
                    e.setAttribute(r, "class", "browser-logo browser-mg"), e.appendChild(n, r);
                    var r = e.createTextNode("\n            ");
                    e.appendChild(n, r);
                    var r = e.createElement("p");
                    e.setAttribute(r, "class", "browser-p browser-mg");
                    var a = e.createComment("");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createTextNode("\n        ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = e.childAt(t, [1]), a = e.childAt(r, [1]), l = new Array(4);
                    return l[0] = e.createAttrMorph(r, "href"), l[1] = e.createAttrMorph(a, "src"), l[2] = e.createAttrMorph(a, "alt"), l[3] = e.createMorphAt(e.childAt(r, [3]), 0, 0), l
                },
                statements: [["attribute", "href", ["concat", [["get", "browser.href", ["loc", [null, [3, 41], [3, 53]]]]]]], ["attribute", "src", ["get", "browser.src", ["loc", [null, [4, 55], [4, 66]]]]], ["attribute", "alt", ["get", "browser.alt", ["loc", [null, [4, 75], [4, 86]]]]], ["content", "browser.name", ["loc", [null, [5, 44], [5, 60]]]]],
                locals: ["browser"],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 9, column: 0}},
                moduleName: "portia-ui/templates/components/browser-list.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div");
                e.setAttribute(n, "class", "browser-logos");
                var r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
            },
            statements: [["block", "each", [["get", "browsers", ["loc", [null, [2, 12], [2, 20]]]]], [], 0, null, ["loc", [null, [2, 4], [7, 13]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/browser-url-blocked", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/components/browser-url-blocked.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(),
                    n = e.createTextNode("Portia is having trouble loading this page at the moment. Try a different page or try again later.\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function () {
                return []
            }, statements: [], locals: [], templates: []
        }
    }())
}), define("portia-ui/templates/components/browser-url-failing", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/components/browser-url-failing.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(),
                    n = e.createTextNode("Portia is currently having trouble loading this page would you like to ");
                e.appendChild(t, n);
                var n = e.createElement("a");
                e.setAttribute(n, "class", "alert-link");
                var r = e.createTextNode("try again");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("?\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [1]), a = new Array(1);
                return a[0] = e.createElementMorph(r), a
            },
            statements: [["element", "action", ["reloadPage"], [], ["loc", [null, [1, 93], [1, 116]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/components/browser-view-port", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 8, column: 4}, end: {line: 10, column: 4}},
                    moduleName: "portia-ui/templates/components/browser-view-port.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        Connecting ...\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function () {
                    return []
                }, statements: [], locals: [], templates: []
            }
        }(), t = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 11, column: 8}, end: {line: 13, column: 8}},
                            moduleName: "portia-ui/templates/components/browser-view-port.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(),
                                n = e.createTextNode("            Reconnecting to Portia server in ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode(" seconds.\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["content", "webSocket.secondsUntilReconnect", ["loc", [null, [12, 45], [12, 80]]]]],
                        locals: [],
                        templates: []
                    }
                }(), t = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 13, column: 8}, end: {line: 15, column: 8}},
                                moduleName: "portia-ui/templates/components/browser-view-port.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n        ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["content", "websocket.reconnectMessage", ["loc", [null, [14, 12], [14, 42]]]]],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 13, column: 8}, end: {line: 15, column: 8}},
                            moduleName: "portia-ui/templates/components/browser-view-port.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["get", "websocket.reconnectMessage", ["loc", [null, [13, 18], [13, 44]]]]], [], 0, null, ["loc", [null, [13, 8], [15, 8]]]]],
                        locals: [],
                        templates: [e]
                    }
                }(), n = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 16, column: 8}, end: {line: 18, column: 8}},
                            moduleName: "portia-ui/templates/components/browser-view-port.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createElement("a");
                            e.setAttribute(n, "class", "alert-link");
                            var r = e.createTextNode("Try Again");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode(".\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = e.childAt(t, [1]), a = new Array(1);
                            return a[0] = e.createElementMorph(r), a
                        },
                        statements: [["element", "action", ["reconnectWebsocket"], [], ["loc", [null, [17, 34], [17, 65]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 10, column: 4}, end: {line: 19, column: 4}},
                        moduleName: "portia-ui/templates/components/browser-view-port.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["get", "webSocket.secondsUntilReconnect", ["loc", [null, [11, 14], [11, 45]]]]], [], 0, 1, ["loc", [null, [11, 8], [15, 15]]]], ["block", "unless", [["get", "webSocket.reconnectImminent", ["loc", [null, [16, 18], [16, 45]]]]], [], 2, null, ["loc", [null, [16, 8], [18, 19]]]]],
                    locals: [],
                    templates: [e, t, n]
                }
            }(), t = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 19, column: 4}, end: {line: 21, column: 4}},
                            moduleName: "portia-ui/templates/components/browser-view-port.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["inline", "component", [["get", "webSocket.reconnectComponent", ["loc", [null, [20, 20], [20, 48]]]]], [], ["loc", [null, [20, 8], [20, 50]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 19, column: 4}, end: {line: 21, column: 4}},
                        moduleName: "portia-ui/templates/components/browser-view-port.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["get", "webSocket.reconnectComponent", ["loc", [null, [19, 14], [19, 42]]]]], [], 0, null, ["loc", [null, [19, 4], [21, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 10, column: 4}, end: {line: 21, column: 4}},
                    moduleName: "portia-ui/templates/components/browser-view-port.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["get", "webSocket.closed", ["loc", [null, [10, 14], [10, 30]]]]], [], 0, 1, ["loc", [null, [10, 4], [21, 4]]]]],
                locals: [],
                templates: [e, t]
            }
        }(), n = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 34, column: 4}, end: {line: 38, column: 4}},
                    moduleName: "portia-ui/templates/components/browser-view-port.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createElement("p"),
                        r = e.createTextNode("您也可以从左边的爬虫列表选择现有的爬虫.");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function () {
                    return []
                }, statements: [], locals: [], templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 40, column: 0}},
                moduleName: "portia-ui/templates/components/browser-view-port.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div");
                e.setAttribute(n, "class", "browser-navigation panel-heading");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "browser-toolbar");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createElement("div"), r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "class", "frame-container panel-body");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "overlay-container");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n\n");
                e.appendChild(t, n);
                var n = e.createElement("div"), r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("img");
                e.setAttribute(r, "src", "/portia-assets/images/portia-logo.svg"), e.setAttribute(r, "alt", "Portia logo"), e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("h3"), a = e.createTextNode("你想爬取啥?");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = e.childAt(t, [2]), l = e.childAt(t, [4]), o = e.childAt(t, [6]),
                    i = new Array(9);
                return i[0] = e.createMorphAt(r, 1, 1), i[1] = e.createMorphAt(e.childAt(r, [3]), 1, 1), i[2] = e.createAttrMorph(a, "class"), i[3] = e.createMorphAt(a, 1, 1), i[4] = e.createMorphAt(e.childAt(l, [1]), 1, 1), i[5] = e.createMorphAt(l, 3, 3), i[6] = e.createAttrMorph(o, "class"), i[7] = e.createMorphAt(o, 5, 5), i[8] = e.createMorphAt(o, 7, 7), i
            },
            statements: [["inline", "url-bar", [], ["class", "navbar-form", "role", "navigation"], ["loc", [null, [2, 4], [2, 53]]]], ["inline", "yield", [["subexpr", "hash", [], ["section", "toolbar"], ["loc", [null, [4, 16], [4, 40]]]]], [], ["loc", [null, [4, 8], [4, 42]]]], ["attribute", "class", ["concat", ["browser-banner", ["subexpr", "unless", [["get", "webSocket.showBanner", ["loc", [null, [7, 35], [7, 55]]]], " hide"], [], ["loc", [null, [7, 26], [7, 65]]]]]]], ["block", "if", [["get", "webSocket.connecting", ["loc", [null, [8, 10], [8, 30]]]]], [], 0, 1, ["loc", [null, [8, 4], [21, 11]]]], ["inline", "yield", [["subexpr", "hash", [], ["section", "overlays"], ["loc", [null, [25, 16], [25, 41]]]]], [], ["loc", [null, [25, 8], [25, 43]]]], ["inline", "browser-iframe", [], ["clickHandler", ["subexpr", "action", ["viewPortClick"], [], ["loc", [null, [27, 34], [27, 58]]]]], ["loc", [null, [27, 4], [27, 60]]]], ["attribute", "class", ["concat", ["browser-start-page ", ["subexpr", "if", [["get", "browser.url", ["loc", [null, [30, 36], [30, 47]]]], "hide"], [], ["loc", [null, [30, 31], [30, 56]]]]]]], ["inline", "url-bar", [], ["class", "navbar-form", "role", "navigation", "autofocus", !0], ["loc", [null, [33, 4], [33, 68]]]], ["block", "if", [["get", "uiState.models.project.spiders.length", ["loc", [null, [34, 10], [34, 47]]]]], [], 2, null, ["loc", [null, [34, 4], [38, 11]]]]],
            locals: [],
            templates: [e, t, n]
        }
    }())
}), define("portia-ui/templates/components/buffered-input", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/components/buffered-input.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            },
            statements: [["inline", "input", [], ["id", ["subexpr", "@mut", [["get", "inputId", ["loc", [null, [1, 11], [1, 18]]]]], [], []], "type", ["subexpr", "@mut", [["get", "type", ["loc", [null, [1, 24], [1, 28]]]]], [], []], "class", ["subexpr", "concat", ["form-control ", ["subexpr", "if", [["get", "focused", ["loc", [null, [1, 63], [1, 70]]]], "focused "], [], ["loc", [null, [1, 59], [1, 82]]]], ["get", "class", ["loc", [null, [1, 83], [1, 88]]]]], [], ["loc", [null, [1, 35], [1, 89]]]], "value", ["subexpr", "mut", [["get", "displayedValue", ["loc", [null, [1, 101], [1, 115]]]]], [], ["loc", [null, [1, 96], [1, 116]]]], "enter", ["subexpr", "if", [["get", "focused", ["loc", [null, [1, 127], [1, 134]]]], ["subexpr", "action", ["endEditing", "enter"], [], ["loc", [null, [1, 135], [1, 164]]]]], [], ["loc", [null, [1, 123], [1, 165]]]], "escape-press", ["subexpr", "if", [["get", "focused", ["loc", [null, [1, 183], [1, 190]]]], ["subexpr", "action", ["cancelEditing"], [], ["loc", [null, [1, 191], [1, 215]]]]], [], ["loc", [null, [1, 179], [1, 216]]]], "focus-in", ["subexpr", "action", ["startEditing"], [], ["loc", [null, [1, 226], [1, 249]]]], "bubbles", !0, "focus-out", ["subexpr", "if", [["get", "focused", ["loc", [null, [1, 277], [1, 284]]]], ["subexpr", "action", ["endEditing", "focus-out"], [], ["loc", [null, [1, 285], [1, 318]]]]], [], ["loc", [null, [1, 273], [1, 319]]]], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [1, 332], [1, 343]]]]], [], []], "autofocus", ["subexpr", "@mut", [["get", "autofocus", ["loc", [null, [1, 354], [1, 363]]]]], [], []], "disabled", ["subexpr", "@mut", [["get", "disabled", ["loc", [null, [1, 373], [1, 381]]]]], [], []], "spellcheck", ["subexpr", "@mut", [["get", "spellcheck", ["loc", [null, [1, 393], [1, 403]]]]], [], []]], ["loc", [null, [1, 0], [1, 405]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/components/colored-badge", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 41}, end: {line: 1, column: 66}},
                    moduleName: "portia-ui/templates/components/colored-badge.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                }, statements: [["content", "yield", ["loc", [null, [1, 57], [1, 66]]]]], locals: [], templates: []
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 66}, end: {line: 1, column: 83}},
                    moduleName: "portia-ui/templates/components/colored-badge.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                }, statements: [["content", "value", ["loc", [null, [1, 74], [1, 83]]]]], locals: [], templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/components/colored-badge.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("span");
                e.setAttribute(n, "class", "badge");
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = new Array(2);
                return a[0] = e.createAttrMorph(r, "style"), a[1] = e.createMorphAt(r, 0, 0), a
            },
            statements: [["attribute", "style", ["get", "badgeStyle", ["loc", [null, [1, 28], [1, 38]]]]], ["block", "if", [["get", "hasBlock", ["loc", [null, [1, 47], [1, 55]]]]], [], 0, 1, ["loc", [null, [1, 41], [1, 90]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/colored-span", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/components/colored-span.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            }, statements: [["content", "yield", ["loc", [null, [1, 0], [1, 13]]]]], locals: [], templates: []
        }
    }())
}), define("portia-ui/templates/components/combo-box", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 10, column: 4}},
                        moduleName: "portia-ui/templates/components/combo-box.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createElement("div");
                        e.setAttribute(n, "class", "combo-input");
                        var r = e.createTextNode("\n            ");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode("\n            ");
                        e.appendChild(n, r);
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "caret-container");
                        var a = e.createTextNode("\n                ");
                        e.appendChild(r, a);
                        var a = e.createElement("span");
                        e.setAttribute(a, "class", "caret"), e.appendChild(r, a);
                        var a = e.createTextNode("\n            ");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("\n        ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [1]), a = e.childAt(r, [3]), l = new Array(3);
                        return l[0] = e.createMorphAt(r, 1, 1), l[1] = e.createElementMorph(a), l[2] = e.createMorphAt(t, 3, 3, n), l
                    },
                    statements: [["inline", "input", [], ["id", ["subexpr", "@mut", [["get", "inputId", ["loc", [null, [4, 23], [4, 30]]]]], [], []], "type", "text", "class", ["subexpr", "concat", ["form-control dropdown-toggle ", ["get", "inputClass", ["loc", [null, [4, 89], [4, 99]]]]], [], ["loc", [null, [4, 49], [4, 100]]]], "value", ["subexpr", "@mut", [["get", "query", ["loc", [null, [4, 107], [4, 112]]]]], [], []], "escape-press", ["subexpr", "action", [["get", "widget.closeMenu", ["loc", [null, [4, 134], [4, 150]]]], "escape"], [], ["loc", [null, [4, 126], [4, 160]]]], "focus-in", ["subexpr", "chain-actions", [["get", "widget.openMenu", ["loc", [null, [4, 185], [4, 200]]]], ["get", "widget.focusIn", ["loc", [null, [4, 201], [4, 215]]]]], [], ["loc", [null, [4, 170], [4, 216]]]], "bubbles", !0, "focus-out", ["subexpr", "chain-actions", [["get", "widget.focusOut", ["loc", [null, [4, 255], [4, 270]]]], ["subexpr", "action", ["restoreFocus"], [], ["loc", [null, [4, 271], [4, 294]]]]], [], ["loc", [null, [4, 240], [4, 295]]]], "spellcheck", ["subexpr", "@mut", [["get", "spellcheck", ["loc", [null, [4, 307], [4, 317]]]]], [], []]], ["loc", [null, [4, 12], [4, 319]]]], ["element", "action", [["get", "widget.toggleMenu", ["loc", [null, [5, 51], [5, 68]]]], "button"], [], ["loc", [null, [5, 42], [5, 79]]]], ["content", "currentValue", ["loc", [null, [9, 8], [9, 24]]]]],
                    locals: [],
                    templates: []
                }
            }(), t = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 11, column: 8}, end: {line: 13, column: 8}},
                                moduleName: "portia-ui/templates/components/combo-box.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "yield", [["subexpr", "hash", [], ["menu", ["get", "widget.menu", ["loc", [null, [12, 31], [12, 42]]]], "header", ["get", "widget.header", ["loc", [null, [12, 50], [12, 63]]]], "item", ["get", "widget.item", ["loc", [null, [12, 69], [12, 80]]]], "divider", ["get", "widget.divider", ["loc", [null, [12, 89], [12, 103]]]], "query", ["get", "query", ["loc", [null, [12, 110], [12, 115]]]], "setValue", ["subexpr", "action", ["setValue"], [], ["loc", [null, [12, 125], [12, 144]]]], "setViewValue", ["subexpr", "action", ["setViewValue"], [], ["loc", [null, [12, 158], [12, 181]]]], "setValueAndClose", ["subexpr", "action", ["setValueAndClose"], [], ["loc", [null, [12, 199], [12, 226]]]], "closeMenu", ["get", "widget.closeMenu", ["loc", [null, [12, 237], [12, 253]]]]], ["loc", [null, [12, 20], [12, 254]]]]], [], ["loc", [null, [12, 12], [12, 256]]]]],
                            locals: [],
                            templates: []
                        }
                    }(), t = function () {
                        var e = function () {
                            var e = function () {
                                var e = function () {
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 16, column: 20},
                                                end: {line: 18, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/combo-box.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                                        },
                                        statements: [["inline", "get", [["get", "choice", ["loc", [null, [17, 30], [17, 36]]]], ["get", "valueAttribute", ["loc", [null, [17, 37], [17, 51]]]]], [], ["loc", [null, [17, 24], [17, 53]]]]],
                                        locals: [],
                                        templates: []
                                    }
                                }(), t = function () {
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 18, column: 20},
                                                end: {line: 20, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/combo-box.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                                        },
                                        statements: [["content", "choice", ["loc", [null, [19, 24], [19, 34]]]]],
                                        locals: [],
                                        templates: []
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 15, column: 16}, end: {line: 21, column: 16}},
                                        moduleName: "portia-ui/templates/components/combo-box.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [["block", "if", [["get", "valueAttribute", ["loc", [null, [16, 26], [16, 40]]]]], [], 0, 1, ["loc", [null, [16, 20], [20, 27]]]]],
                                    locals: [],
                                    templates: [e, t]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 14, column: 12}, end: {line: 22, column: 12}},
                                    moduleName: "portia-ui/templates/components/combo-box.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("")
                                    ;
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "widget.item", [], ["value", ["subexpr", "@mut", [["get", "choice", ["loc", [null, [15, 37], [15, 43]]]]], [], []], "action", ["subexpr", "action", ["setValueAndClose", ["get", "choice", ["loc", [null, [15, 78], [15, 84]]]]], [], ["loc", [null, [15, 51], [15, 85]]]]], 0, null, ["loc", [null, [15, 16], [21, 32]]]]],
                                locals: ["choice"],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 13, column: 8}, end: {line: 23, column: 8}},
                                moduleName: "portia-ui/templates/components/combo-box.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "each", [["get", "choices", ["loc", [null, [14, 20], [14, 27]]]]], [], 0, null, ["loc", [null, [14, 12], [22, 21]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 10, column: 4}, end: {line: 24, column: 4}},
                            moduleName: "portia-ui/templates/components/combo-box.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                        },
                        statements: [["block", "if", [["get", "hasBlock", ["loc", [null, [11, 14], [11, 22]]]]], [], 0, 1, ["loc", [null, [11, 8], [23, 15]]]]],
                        locals: [],
                        templates: [e, t]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 10, column: 4}, end: {line: 24, column: 4}},
                        moduleName: "portia-ui/templates/components/combo-box.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "widget.section", ["loc", [null, [10, 18], [10, 32]]]], "menu"], [], ["loc", [null, [10, 14], [10, 40]]]]], [], 0, null, ["loc", [null, [10, 4], [24, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 25, column: 0}},
                    moduleName: "portia-ui/templates/components/combo-box.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "widget.section", ["loc", [null, [2, 14], [2, 28]]]], "widget"], [], ["loc", [null, [2, 10], [2, 38]]]]], [], 0, 1, ["loc", [null, [2, 4], [24, 11]]]]],
                locals: ["widget"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 26, column: 0}},
                moduleName: "portia-ui/templates/components/combo-box.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "dropdown-widget", [], ["class", "combo-box", "events", ["subexpr", "@mut", [["get", "this", ["loc", [null, [1, 44], [1, 48]]]]], [], []], "open", ["subexpr", "mut", [["get", "open", ["loc", [null, [1, 59], [1, 63]]]]], [], ["loc", [null, [1, 54], [1, 64]]]], "active", ["subexpr", "mut", [["get", "viewValue", ["loc", [null, [1, 77], [1, 86]]]]], [], ["loc", [null, [1, 72], [1, 87]]]], "focused", ["subexpr", "@mut", [["get", "value", ["loc", [null, [1, 96], [1, 101]]]]], [], []], "orderItemsForSearch", ["subexpr", "@mut", [["get", "orderItemsForSearch", ["loc", [null, [1, 122], [1, 141]]]]], [], []], "valuesEqual", ["subexpr", "@mut", [["get", "valuesEqual", ["loc", [null, [1, 154], [1, 165]]]]], [], []], "menuContainer", ["subexpr", "@mut", [["get", "menuContainer", ["loc", [null, [1, 180], [1, 193]]]]], [], []], "menuClass", ["subexpr", "@mut", [["get", "menuClass", ["loc", [null, [1, 204], [1, 213]]]]], [], []], "menuAlign", ["subexpr", "@mut", [["get", "menuAlign", ["loc", [null, [1, 224], [1, 233]]]]], [], []], "onClose", ["subexpr", "action", ["menuClosed"], [], ["loc", [null, [1, 242], [1, 263]]]]], 0, null, ["loc", [null, [1, 0], [25, 20]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/create-project-button", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 12, column: 4}, end: {line: 14, column: 4}},
                        moduleName: "portia-ui/templates/components/create-project-button.hbs"
                    }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                        e.appendChild(t, n);
                        var n = e.createElement("h5"), r = e.createTextNode("或");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    }, buildRenderNodes: function () {
                        return []
                    }, statements: [], locals: [], templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["multiple-nodes", "wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 15, column: 0}},
                    moduleName: "portia-ui/templates/components/create-project-button.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("p");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n    ");
                    e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "input-group project-create-input");
                    var r = e.createTextNode("\n        ");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("\n        ");
                    e.appendChild(n, r);
                    var r = e.createElement("span");
                    e.setAttribute(r, "class", "input-group-btn");
                    var a = e.createTextNode("\n            ");
                    e.appendChild(r, a);
                    var a = e.createElement("button");
                    e.setAttribute(a, "type", "button"), e.setAttribute(a, "class", "btn btn-primary");
                    var l = e.createTextNode("\n                ");
                    e.appendChild(a, l);
                    var l = e.createComment("");
                    e.appendChild(a, l);
                    var l = e.createTextNode("\n            ");
                    e.appendChild(a, l), e.appendChild(r, a);
                    var a = e.createTextNode("\n        ");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createTextNode("\n    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = e.childAt(t, [3]), a = e.childAt(r, [3, 1]), l = new Array(5);
                    return l[0] = e.createMorphAt(r, 1, 1), l[1] = e.createAttrMorph(a, "disabled"), l[2] = e.createElementMorph(a), l[3] = e.createMorphAt(a, 1, 1), l[4] = e.createMorphAt(t, 5, 5, n), e.insertBoundary(t, null), l
                },
                statements: [["inline", "input", [], ["type", "text", "class", "form-control", "value", ["subexpr", "mut", [["get", "projectName", ["loc", [null, [4, 60], [4, 71]]]]], [], ["loc", [null, [4, 55], [4, 72]]]], "placeholder", "创建新项目", "enter", ["subexpr", "action", ["addProject"], [], ["loc", [null, [5, 16], [5, 37]]]]], ["loc", [null, [4, 8], [5, 39]]]], ["attribute", "disabled", ["subexpr", "not", [["get", "projectName", ["loc", [null, [7, 73], [7, 84]]]]], [], ["loc", [null, [7, 67], [7, 86]]]]], ["element", "action", ["addProject"], [], ["loc", [null, [7, 87], [7, 110]]]], ["inline", "icon-button", [], ["icon", "spider"], ["loc", [null, [8, 16], [8, 45]]]], ["block", "if", [["get", "projects", ["loc", [null, [12, 10], [12, 18]]]]], [], 0, null, ["loc", [null, [12, 4], [14, 11]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 16, column: 0}},
                moduleName: "portia-ui/templates/components/create-project-button.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["get", "canCreateProjects", ["loc", [null, [1, 6], [1, 23]]]]], [], 0, null, ["loc", [null, [1, 0], [15, 7]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/create-spider-button", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "modifiers", modifiers: ["action"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 4, column: 0}},
                moduleName: "portia-ui/templates/components/create-spider-button.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("button");
                e.setAttribute(n, "type", "button"), e.setAttribute(n, "class", "btn btn-primary");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("新爬虫\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = new Array(3);
                return a[0] = e.createAttrMorph(r, "disabled"), a[1] = e.createElementMorph(r), a[2] = e.createMorphAt(r, 1, 1), a
            },
            statements: [["attribute", "disabled", ["subexpr", "not", [["get", "canAddSpider", ["loc", [null, [1, 61], [1, 73]]]]], [], ["loc", [null, [1, 55], [1, 75]]]]], ["element", "action", ["addSpider"], [], ["loc", [null, [1, 76], [1, 98]]]], ["inline", "icon-button", [], ["icon", "spider"], ["loc", [null, [2, 4], [2, 33]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/components/data-structure-annotations", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                        moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                    }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    }, buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    }, statements: [["content", "yield", ["loc", [null, [3, 8], [3, 17]]]]], locals: [], templates: []
                }
            }(), t = function () {
                var e = function () {
                    var e = function () {
                        var e = function () {
                            var e = function () {
                                var e = function () {
                                    var e = function () {
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 16, column: 24},
                                                    end: {line: 18, column: 24}
                                                },
                                                moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode("                            Change type of selected field\n");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function () {
                                                return []
                                            },
                                            statements: [],
                                            locals: [],
                                            templates: []
                                        }
                                    }(), t = function () {
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 19, column: 24},
                                                    end: {line: 21, column: 24}
                                                },
                                                moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode("                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function (e, t, n) {
                                                var r = new Array(1);
                                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                                            },
                                            statements: [["inline", "list-item-icon", [], ["icon", "options"], ["loc", [null, [20, 28], [20, 61]]]]],
                                            locals: [],
                                            templates: []
                                        }
                                    }();
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 8, column: 20},
                                                end: {line: 23, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(7);
                                            return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r[3] = e.createMorphAt(t, 7, 7, n), r[4] = e.createMorphAt(t, 9, 9, n), r[5] = e.createMorphAt(t, 10, 10, n), r[6] = e.createMorphAt(t, 12, 12, n), r
                                        },
                                        statements: [["inline", "indentation-spacer", [], ["isSmall", !0], ["loc", [null, [9, 24], [9, 59]]]], ["inline", "list-item-badge", [], ["value", ["subexpr", "or", [["get", "annotation.elements.length", ["loc", [null, [11, 36], [11, 62]]]], 0], [], ["loc", [null, [11, 32], [11, 65]]]], "color", ["subexpr", "array-get", [["get", "annotationColors", ["loc", [null, [12, 43], [12, 59]]]], ["get", "annotation.orderedIndex", ["loc", [null, [12, 60], [12, 83]]]]], [], ["loc", [null, [12, 32], [12, 84]]]]], ["loc", [null, [10, 24], [13, 26]]]], ["inline", "list-item-icon", [], ["icon", ["subexpr", "@mut", [["get", "annotation.type", ["loc", [null, [14, 46], [14, 61]]]]], [], []]], ["loc", [null, [14, 24], [14, 63]]]], ["inline", "list-item-annotation-field", [], ["annotation", ["subexpr", "@mut", [["get", "annotation", ["loc", [null, [15, 64], [15, 74]]]]], [], []], "selecting", ["subexpr", "mut", [["get", "annotation.new", ["loc", [null, [15, 90], [15, 104]]]]], [], ["loc", [null, [15, 85], [15, 105]]]]], ["loc", [null, [15, 24], [15, 107]]]], ["block", "list-item-field-type", [], ["field", ["subexpr", "@mut", [["get", "annotation.field", ["loc", [null, [16, 54], [16, 70]]]]], [], []]], 0, null, ["loc", [null, [16, 24], [18, 49]]]], ["block", "link-to", ["projects.project.spider.sample.data.annotation.options", ["get", "annotation", ["loc", [null, [19, 92], [19, 102]]]]], ["bubbles", !1, "class", "ignore-active"], 1, null, ["loc", [null, [19, 24], [21, 36]]]], ["inline", "list-item-icon", [], ["icon", "remove", "action", ["subexpr", "action", ["removeAnnotation", ["get", "annotation", ["loc", [null, [22, 89], [22, 99]]]]], [], ["loc", [null, [22, 62], [22, 100]]]], "bubbles", !1], ["loc", [null, [22, 24], [22, 116]]]]],
                                        locals: [],
                                        templates: [e, t]
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 7, column: 16}, end: {line: 24, column: 16}},
                                        moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 1,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [["block", "link-to", ["projects.project.spider.sample.data.annotation", ["get", "annotation", ["loc", [null, [8, 80], [8, 90]]]]], [], 0, null, ["loc", [null, [8, 20], [23, 32]]]]],
                                    locals: ["options"],
                                    templates: [e]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 6, column: 12}, end: {line: 25, column: 12}},
                                    moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "tree-list-item", [], ["onMouseEnter", ["subexpr", "action", ["enterAnnotation", ["get", "annotation", ["loc", [null, [7, 73], [7, 83]]]]], [], ["loc", [null, [7, 47], [7, 84]]]], "onMouseLeave", ["subexpr", "action", ["leaveAnnotation", ["get", "item", ["loc", [null, [7, 124], [7, 128]]]]], [], ["loc", [null, [7, 98], [7, 129]]]]], 0, null, ["loc", [null, [7, 16], [24, 35]]]]],
                                locals: [],
                                templates: [e]
                            }
                        }(), t = function () {
                            var e = function () {
                                var e = function () {
                                    var e = function () {
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 27, column: 20},
                                                    end: {line: 34, column: 20}
                                                },
                                                moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode("                        ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                        ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                        ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                        ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                        ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                        ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function (e, t, n) {
                                                var r = new Array(6);
                                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r[3] = e.createMorphAt(t, 7, 7, n), r[4] = e.createMorphAt(t, 9, 9, n), r[5] = e.createMorphAt(t, 11, 11, n), r
                                            },
                                            statements: [["inline", "list-item-icon", [], ["icon", "schema"], ["loc", [null, [28, 24], [28, 56]]]], ["inline", "list-item-badge", [], ["value", ["subexpr", "or", [["get", "annotation.elements.length", ["loc", [null, [29, 52], [29, 78]]]], 0], [], ["loc", [null, [29, 48], [29, 81]]]]], ["loc", [null, [29, 24], [29, 83]]]], ["inline", "list-item-editable", [], ["value", ["subexpr", "mut", [["get", "annotation.name", ["loc", [null, [30, 56], [30, 71]]]]], [], ["loc", [null, [30, 51], [30, 72]]]], "editing", ["subexpr", "mut", [["get", "annotation.new", ["loc", [null, [30, 86], [30, 100]]]]], [], ["loc", [null, [30, 81], [30, 101]]]], "onChange", ["subexpr", "action", ["saveItem", ["get", "annotation", ["loc", [null, [30, 130], [30, 140]]]]], [], ["loc", [null, [30, 111], [30, 141]]]]], ["loc", [null, [30, 24], [30, 143]]]], ["inline", "list-item-item-schema", [], ["item", ["subexpr", "@mut", [["get", "annotation", ["loc", [null, [31, 53], [31, 63]]]]], [], []]], ["loc", [null, [31, 24], [31, 65]]]], ["inline", "list-item-add-annotation-menu", [], ["item", ["subexpr", "@mut", [["get", "annotation", ["loc", [null, [32, 61], [32, 71]]]]], [], []]], ["loc", [null, [32, 24], [32, 73]]]], ["inline", "list-item-icon", [], ["icon", "remove", "action", ["subexpr", "action", ["removeItem", ["get", "annotation", ["loc", [null, [33, 83], [33, 93]]]]], [], ["loc", [null, [33, 62], [33, 94]]]], "bubbles", !1], ["loc", [null, [33, 24], [33, 110]]]]],
                                            locals: [],
                                            templates: []
                                        }
                                    }();
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 26, column: 16},
                                                end: {line: 35, column: 16}
                                            },
                                            moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(), n = e.createComment("");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                        },
                                        statements: [["block", "link-to", ["projects.project.spider.sample.data.item", ["get", "annotation", ["loc", [null, [27, 74], [27, 84]]]]], [], 0, null, ["loc", [null, [27, 20], [34, 32]]]]],
                                        locals: [],
                                        templates: [e]
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 25, column: 12}, end: {line: 36, column: 12}},
                                        moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("            ");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                                    },
                                    statements: [["block", "data-structure-annotations", [], ["sample", ["subexpr", "@mut", [["get", "sample", ["loc", [null, [26, 53], [26, 59]]]]], [], []], "item", ["subexpr", "@mut", [["get", "annotation", ["loc", [null, [26, 65], [26, 75]]]]], [], []], "annotationColors", ["subexpr", "@mut", [["get", "annotationColors", ["loc", [null, [26, 93], [26, 109]]]]], [], []]], 0, null, ["loc", [null, [26, 16], [35, 47]]]]],
                                    locals: [],
                                    templates: [e]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 25, column: 12}, end: {line: 36, column: 12}},
                                    moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "if", [["subexpr", "eq", [["get", "annotation.constructor.modelName", ["loc", [null, [25, 26], [25, 58]]]], "item"], [], ["loc", [null, [25, 22], [25, 66]]]]], [], 0, null, ["loc", [null, [25, 12], [36, 12]]]]],
                                locals: [],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 5, column: 8}, end: {line: 37, column: 8}},
                                moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                            },
                            isEmpty: !1,
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "if", [["subexpr", "eq", [["get", "annotation.constructor.modelName", ["loc", [null, [6, 22], [6, 54]]]], "annotation"], [], ["loc", [null, [6, 18], [6, 68]]]]], [], 0, 1, ["loc", [null, [6, 12], [36, 19]]]]],
                            locals: ["annotation"],
                            templates: [e, t]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 4, column: 4}, end: {line: 38, column: 4}},
                            moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                        },
                        statements: [["block", "each", [["get", "item.annotations", ["loc", [null, [5, 16], [5, 32]]]]], [], 0, null, ["loc", [null, [5, 8], [37, 17]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 4, column: 4}, end: {line: 38, column: 4}},
                        moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [4, 18], [4, 33]]]], "subtrees"], [], ["loc", [null, [4, 14], [4, 45]]]]], [], 0, null, ["loc", [null, [4, 4], [38, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 39, column: 0}},
                    moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [2, 14], [2, 29]]]], "item"], [], ["loc", [null, [2, 10], [2, 37]]]]], [], 0, 1, ["loc", [null, [2, 4], [38, 11]]]]],
                locals: ["options"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 40, column: 0}},
                moduleName: "portia-ui/templates/components/data-structure-annotations.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tree-list-item", [], ["hasChildren", ["subexpr", "@mut", [["get", "item.annotations.length", ["loc", [null, [1, 30], [1, 53]]]]], [], []], "onMouseEnter", ["subexpr", "action", ["enterItem", ["get", "item", ["loc", [null, [1, 87], [1, 91]]]]], [], ["loc", [null, [1, 67], [1, 92]]]], "onMouseLeave", ["subexpr", "action", ["leaveItem", ["get", "item", ["loc", [null, [1, 126], [1, 130]]]]], [], ["loc", [null, [1, 106], [1, 131]]]]], 0, null, ["loc", [null, [1, 0], [39, 19]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/data-structure-listing", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 4, column: 12}, end: {line: 6, column: 12}},
                                moduleName: "portia-ui/templates/components/data-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                Items\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function () {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 8, column: 8}},
                            moduleName: "portia-ui/templates/components/data-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), r
                        },
                        statements: [["block", "list-item-text", [], ["class", "title"], 0, null, ["loc", [null, [4, 12], [6, 31]]]], ["inline", "list-item-icon", [], ["icon", "add", "action", ["subexpr", "action", ["addItem", ["get", "sample", ["loc", [null, [7, 65], [7, 71]]]]], [], ["loc", [null, [7, 47], [7, 72]]]]], ["loc", [null, [7, 12], [7, 74]]]]],
                        locals: [],
                        templates: [e]
                    }
                }(), t = function () {
                    var e = function () {
                        var e = function () {
                            var e = function () {
                                var e = function () {
                                    var e = function () {
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 12, column: 24},
                                                    end: {line: 18, column: 24}
                                                },
                                                moduleName: "portia-ui/templates/components/data-structure-listing.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode("                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function (e, t, n) {
                                                var r = new Array(5);
                                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r[3] = e.createMorphAt(t, 7, 7, n), r[4] = e.createMorphAt(t, 9, 9, n), r
                                            },
                                            statements: [["inline", "list-item-badge", [], ["value", ["subexpr", "or", [["get", "item.elements.length", ["loc", [null, [13, 56], [13, 76]]]], 0], [], ["loc", [null, [13, 52], [13, 79]]]]], ["loc", [null, [13, 28], [13, 81]]]], ["inline", "list-item-icon", [], ["icon", "schema"], ["loc", [null, [14, 28], [14, 60]]]], ["inline", "list-item-item-schema", [], ["item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [15, 57], [15, 61]]]]], [], []], "selecting", ["subexpr", "mut", [["get", "item.new", ["loc", [null, [15, 77], [15, 85]]]]], [], ["loc", [null, [15, 72], [15, 86]]]]], ["loc", [null, [15, 28], [15, 88]]]], ["inline", "list-item-add-annotation-menu", [], ["item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [16, 65], [16, 69]]]]], [], []]], ["loc", [null, [16, 28], [16, 71]]]], ["inline", "list-item-icon", [], ["icon", "remove", "action", ["subexpr", "action", ["removeItem", ["get", "item", ["loc", [null, [17, 87], [17, 91]]]]], [], ["loc", [null, [17, 66], [17, 92]]]], "disabled", ["subexpr", "lte", [["get", "sample.items.length", ["loc", [null, [17, 107], [17, 126]]]], 1], [], ["loc", [null, [17, 102], [17, 129]]]], "bubbles", !1], ["loc", [null, [17, 28], [17, 145]]]]],
                                            locals: [],
                                            templates: []
                                        }
                                    }();
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 11, column: 20},
                                                end: {line: 19, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/data-structure-listing.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(), n = e.createComment("");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                        },
                                        statements: [["block", "link-to", ["projects.project.spider.sample.data.item", ["get", "item", ["loc", [null, [12, 78], [12, 82]]]]], [], 0, null, ["loc", [null, [12, 24], [18, 36]]]]],
                                        locals: [],
                                        templates: [e]
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 10, column: 16}, end: {line: 20, column: 16}},
                                        moduleName: "portia-ui/templates/components/data-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [["block", "data-structure-annotations", [], ["sample", ["subexpr", "@mut", [["get", "sample", ["loc", [null, [11, 57], [11, 63]]]]], [], []], "item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [11, 69], [11, 73]]]]], [], []], "annotationColors", ["subexpr", "@mut", [["get", "annotationColors", ["loc", [null, [11, 91], [11, 107]]]]], [], []]], 0, null, ["loc", [null, [11, 20], [19, 51]]]]],
                                    locals: [],
                                    templates: [e]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 9, column: 12}, end: {line: 21, column: 12}},
                                    moduleName: "portia-ui/templates/components/data-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "unless", [["get", "item.parent", ["loc", [null, [10, 26], [10, 37]]]]], [], 0, null, ["loc", [null, [10, 16], [20, 27]]]]],
                                locals: ["item"],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 8, column: 8}, end: {line: 22, column: 8}},
                                moduleName: "portia-ui/templates/components/data-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("        ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                            },
                            statements: [["block", "each", [["get", "sample.items", ["loc", [null, [9, 20], [9, 32]]]]], [], 0, null, ["loc", [null, [9, 12], [21, 21]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 8, column: 8}, end: {line: 22, column: 8}},
                            moduleName: "portia-ui/templates/components/data-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [8, 22], [8, 37]]]], "subtrees"], [], ["loc", [null, [8, 18], [8, 49]]]]], [], 0, null, ["loc", [null, [8, 8], [22, 8]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 23, column: 4}},
                        moduleName: "portia-ui/templates/components/data-structure-listing.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [3, 18], [3, 33]]]], "item"], [], ["loc", [null, [3, 14], [3, 41]]]]], [], 0, 1, ["loc", [null, [3, 8], [22, 15]]]]],
                    locals: ["options"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 24, column: 0}},
                    moduleName: "portia-ui/templates/components/data-structure-listing.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tree-list-item", [], ["hasChildren", ["subexpr", "@mut", [["get", "sample.items.length", ["loc", [null, [2, 34], [2, 53]]]]], [], []]], 0, null, ["loc", [null, [2, 4], [23, 23]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 25, column: 0}},
                moduleName: "portia-ui/templates/components/data-structure-listing.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tree-list", [], [], 0, null, ["loc", [null, [1, 0], [24, 14]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/dropdown-delete", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "modifiers", modifiers: ["action"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 4, column: 0}},
                moduleName: "portia-ui/templates/components/dropdown-delete.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("a"), r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = new Array(3);
                return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(r, 1, 1), a[2] = e.createMorphAt(r, 2, 2), a
            },
            statements: [["element", "action", ["onDelete"], [], ["loc", [null, [1, 3], [1, 24]]]], ["inline", "list-item-icon", [], ["class", "icon", "icon", "remove"], ["loc", [null, [2, 4], [2, 49]]]], ["inline", "if", [["get", "isConfirmed", ["loc", [null, [2, 54], [2, 65]]]], "是否确认?", ["get", "text", ["loc", [null, [2, 82], [2, 86]]]]], [], ["loc", [null, [2, 49], [2, 88]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/components/dropdown-divider", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["empty-body"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 1, column: 0}},
                moduleName: "portia-ui/templates/components/dropdown-divider.hbs"
            }, isEmpty: !0, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                return e.createDocumentFragment()
            }, buildRenderNodes: function () {
                return []
            }, statements: [], locals: [], templates: []
        }
    }())
}), define("portia-ui/templates/components/dropdown-header", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/components/dropdown-header.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            }, statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]]]], locals: [], templates: []
        }
    }())
}), define("portia-ui/templates/components/dropdown-item", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                    moduleName: "portia-ui/templates/components/dropdown-item.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "yield", [["get", "value", ["loc", [null, [3, 16], [3, 21]]]]], [], ["loc", [null, [3, 8], [3, 23]]]]],
                locals: [],
                templates: []
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 4, column: 4}, end: {line: 6, column: 4}},
                    moduleName: "portia-ui/templates/components/dropdown-item.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                }, statements: [["content", "value", ["loc", [null, [5, 8], [5, 17]]]]], locals: [], templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "modifiers", modifiers: ["action"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 8, column: 0}},
                moduleName: "portia-ui/templates/components/dropdown-item.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("a"), r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = new Array(2);
                return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(r, 1, 1), a
            },
            statements: [["element", "action", ["performAction", ["get", "value", ["loc", [null, [1, 28], [1, 33]]]]], [], ["loc", [null, [1, 3], [1, 35]]]], ["block", "if", [["get", "hasBlock", ["loc", [null, [2, 10], [2, 18]]]]], [], 0, 1, ["loc", [null, [2, 4], [6, 11]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/dropdown-menu", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/components/dropdown-menu.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            },
            statements: [["inline", "yield", [["subexpr", "hash", [], ["menu", ["get", "this", ["loc", [null, [1, 19], [1, 23]]]], "header", ["subexpr", "component", ["dropdown-header"], [], ["loc", [null, [1, 31], [1, 60]]]], "item", ["subexpr", "component", ["dropdown-item"], ["menu", ["subexpr", "@mut", [["get", "this", ["loc", [null, [1, 98], [1, 102]]]]], [], []]], ["loc", [null, [1, 66], [1, 103]]]], "divider", ["subexpr", "component", ["dropdown-divider"], [], ["loc", [null, [1, 112], [1, 142]]]]], ["loc", [null, [1, 8], [1, 143]]]]], [], ["loc", [null, [1, 0], [1, 145]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/components/dropdown-widget", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 3, column: 4}, end: {line: 5, column: 4}},
                        moduleName: "portia-ui/templates/components/dropdown-widget.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "yield", [["subexpr", "hash", [], ["section", "menu", "menu", ["get", "options.menu", ["loc", [null, [4, 42], [4, 54]]]], "header", ["get", "options.header", ["loc", [null, [4, 62], [4, 76]]]], "item", ["get", "options.item", ["loc", [null, [4, 82], [4, 94]]]], "divider", ["get", "options.divider", ["loc", [null, [4, 103], [4, 118]]]], "openMenu", ["subexpr", "action", ["openMenu"], [], ["loc", [null, [4, 128], [4, 147]]]], "closeMenu", ["subexpr", "action", ["closeMenu"], [], ["loc", [null, [4, 158], [4, 178]]]], "toggleMenu", ["subexpr", "action", ["toggleMenu"], [], ["loc", [null, [4, 190], [4, 211]]]], "focusIn", ["subexpr", "action", ["focusIn"], [], ["loc", [null, [4, 220], [4, 238]]]], "focusOut", ["subexpr", "action", ["focusOut"], [], ["loc", [null, [4, 248], [4, 267]]]], "keyDown", ["subexpr", "action", ["keyDown"], [], ["loc", [null, [4, 276], [4, 294]]]]], ["loc", [null, [4, 16], [4, 295]]]]], [], ["loc", [null, [4, 8], [4, 297]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 2, column: 0}, end: {line: 6, column: 0}},
                    moduleName: "portia-ui/templates/components/dropdown-widget.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["get", "open", ["loc", [null, [3, 10], [3, 14]]]]], [], 0, null, ["loc", [null, [3, 4], [5, 11]]]]],
                locals: ["options"],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 7, column: 0}},
                moduleName: "portia-ui/templates/components/dropdown-widget.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["inline", "yield", [["subexpr", "hash", [], ["section", "widget", "openMenu", ["subexpr", "action", ["openMenu"], [], ["loc", [null, [1, 40], [1, 59]]]], "closeMenu", ["subexpr", "action", ["closeMenu"], [], ["loc", [null, [1, 70], [1, 90]]]], "toggleMenu", ["subexpr", "action", ["toggleMenu"], [], ["loc", [null, [1, 102], [1, 123]]]], "focusIn", ["subexpr", "action", ["focusIn"], [], ["loc", [null, [1, 132], [1, 150]]]], "focusOut", ["subexpr", "action", ["focusOut"], [], ["loc", [null, [1, 160], [1, 179]]]], "keyDown", ["subexpr", "action", ["keyDown"], [], ["loc", [null, [1, 188], [1, 206]]]]], ["loc", [null, [1, 8], [1, 207]]]]], [], ["loc", [null, [1, 0], [1, 209]]]], ["block", "dropdown-menu", [], ["class", ["subexpr", "@mut", [["get", "menuClasses", ["loc", [null, [2, 23], [2, 34]]]]], [], []], "events", ["subexpr", "@mut", [["get", "events", ["loc", [null, [2, 42], [2, 48]]]]], [], []], "keyNavigate", ["subexpr", "@mut", [["get", "keyNavigate", ["loc", [null, [2, 61], [2, 72]]]]], [], []], "active", ["subexpr", "mut", [["get", "active", ["loc", [null, [2, 85], [2, 91]]]]], [], ["loc", [null, [2, 80], [2, 92]]]], "focused", ["subexpr", "mut", [["get", "focused", ["loc", [null, [2, 106], [2, 113]]]]], [], ["loc", [null, [2, 101], [2, 114]]]], "orderItemsForSearch", ["subexpr", "@mut", [["get", "orderItemsForSearch", ["loc", [null, [2, 135], [2, 154]]]]], [], []], "valuesEqual", ["subexpr", "@mut", [["get", "valuesEqual", ["loc", [null, [2, 167], [2, 178]]]]], [], []], "onFocusIn", ["subexpr", "action", ["focusIn"], [], ["loc", [null, [2, 189], [2, 207]]]], "onFocusOut", ["subexpr", "action", ["focusOut"], [], ["loc", [null, [2, 219], [2, 238]]]]], 0, null, ["loc", [null, [2, 0], [6, 18]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/edit-sample-button", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                        moduleName: "portia-ui/templates/components/edit-sample-button.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("编辑模版");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "icon-button", [], ["icon", "sample"], ["loc", [null, [3, 8], [3, 37]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 5, column: 0}},
                    moduleName: "portia-ui/templates/components/edit-sample-button.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "link-to", ["projects.project.spider.sample", ["get", "editableSample", ["loc", [null, [2, 48], [2, 62]]]]], ["class", "btn btn-primary"], 0, null, ["loc", [null, [2, 4], [4, 16]]]]],
                locals: [],
                templates: [e]
            }
        }(), t = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 10, column: 16}, end: {line: 14, column: 16}},
                                    moduleName: "portia-ui/templates/components/edit-sample-button.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                    ");
                                    e.appendChild(t, n);
                                    var n = e.createElement("p"),
                                        r = e.createTextNode("\n                        This spider is from a different domain to your spider. Maybe you would like to create a new spider for this sample?\n                    ");
                                    e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 8, column: 12}, end: {line: 15, column: 12}},
                                moduleName: "portia-ui/templates/components/edit-sample-button.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("                Create a new sample from the current page so you can start annotating the data you want to extract\n");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "unless", [["get", "sameDomain", ["loc", [null, [10, 26], [10, 36]]]]], [], 0, null, ["loc", [null, [10, 16], [14, 27]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 7, column: 8}, end: {line: 16, column: 8}},
                            moduleName: "portia-ui/templates/components/edit-sample-button.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "unless", [["get", "editableSample", ["loc", [null, [8, 22], [8, 36]]]]], [], 0, null, ["loc", [null, [8, 12], [15, 23]]]]],
                        locals: [],
                        templates: [e]
                    }
                }(), t = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 16, column: 8}, end: {line: 20, column: 8}},
                            moduleName: "portia-ui/templates/components/edit-sample-button.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createElement("button");
                            e.setAttribute(n, "id", "add-spider-browser-button"), e.setAttribute(n, "type", "button"), e.setAttribute(n, "class", "btn btn-primary");
                            var r = e.createTextNode("\n                ");
                            e.appendChild(n, r);
                            var r = e.createComment("");
                            e.appendChild(n, r);
                            var r = e.createTextNode("新模版");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = e.childAt(t, [1]), a = new Array(3);
                            return a[0] = e.createAttrMorph(r, "disabled"), a[1] = e.createElementMorph(r), a[2] = e.createMorphAt(r, 1, 1), a
                        },
                        statements: [["attribute", "disabled", ["get", "disableSample", ["loc", [null, [17, 100], [17, 113]]]]], ["element", "action", ["addSample"], [], ["loc", [null, [17, 116], [17, 138]]]], ["inline", "icon-button", [], ["icon", "sample"], ["loc", [null, [18, 16], [18, 45]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 6, column: 4}, end: {line: 21, column: 4}},
                        moduleName: "portia-ui/templates/components/edit-sample-button.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [7, 18], [7, 33]]]], "tooltip"], [], ["loc", [null, [7, 14], [7, 44]]]]], [], 0, 1, ["loc", [null, [7, 8], [20, 15]]]]],
                    locals: ["options"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 5, column: 0}, end: {line: 22, column: 0}},
                    moduleName: "portia-ui/templates/components/edit-sample-button.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tooltip-container", [], ["tooltipFor", "add-spider-browser-button", "tooltipContainer", "body"], 0, null, ["loc", [null, [6, 4], [21, 26]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 23, column: 0}},
                moduleName: "portia-ui/templates/components/edit-sample-button.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["get", "editableSample", ["loc", [null, [1, 6], [1, 20]]]]], [], 0, 1, ["loc", [null, [1, 0], [22, 7]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/element-overlay", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 3, column: 0}},
                    moduleName: "portia-ui/templates/components/element-overlay.hbs"
                },
                isEmpty: !1,
                arity: 2,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "element-rect-overlay", [], ["index", ["subexpr", "@mut", [["get", "index", ["loc", [null, [2, 33], [2, 38]]]]], [], []], "icon", ["subexpr", "@mut", [["get", "icon", ["loc", [null, [2, 44], [2, 48]]]]], [], []], "color", ["subexpr", "@mut", [["get", "color", ["loc", [null, [2, 55], [2, 60]]]]], [], []], "positionMode", ["subexpr", "@mut", [["get", "positionMode", ["loc", [null, [2, 74], [2, 86]]]]], [], []], "class", ["subexpr", "@mut", [["get", "class", ["loc", [null, [2, 93], [2, 98]]]]], [], []], "overlay", ["subexpr", "@mut", [["get", "this", ["loc", [null, [2, 107], [2, 111]]]]], [], []]], ["loc", [null, [2, 4], [2, 113]]]]],
                locals: ["rect", "index"],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 4, column: 0}},
                moduleName: "portia-ui/templates/components/element-overlay.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "each", [["get", "rects", ["loc", [null, [1, 8], [1, 13]]]]], ["key", "@index"], 0, null, ["loc", [null, [1, 0], [3, 9]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/element-rect-overlay", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 7, column: 0}},
                moduleName: "portia-ui/templates/components/element-rect-overlay.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div");
                e.setAttribute(n, "class", "overlay-box");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("span");
                e.setAttribute(r, "class", "overlay-icon");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "overlay-box-background"), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = e.childAt(r, [1]), l = e.childAt(r, [3]), o = new Array(4);
                return o[0] = e.createAttrMorph(r, "style"), o[1] = e.createAttrMorph(a, "style"), o[2] = e.createMorphAt(a, 1, 1), o[3] = e.createAttrMorph(l, "style"), o
            },
            statements: [["attribute", "style", ["get", "shadowStyle", ["loc", [null, [1, 33], [1, 44]]]]], ["attribute", "style", ["get", "textShadowStyle", ["loc", [null, [2, 39], [2, 54]]]]], ["inline", "icon-button", [], ["icon", ["subexpr", "@mut", [["get", "icon", ["loc", [null, [3, 27], [3, 31]]]]], [], []]], ["loc", [null, [3, 8], [3, 33]]]], ["attribute", "style", ["get", "backgroundStyle", ["loc", [null, [5, 48], [5, 63]]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/components/extracted-item-table", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 10, column: 20}, end: {line: 12, column: 20}},
                                moduleName: "portia-ui/templates/components/extracted-item-table.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                        ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "extracted-item-table", [], ["item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [11, 52], [11, 56]]]]], [], []]], ["loc", [null, [11, 24], [11, 58]]]]],
                            locals: [],
                            templates: []
                        }
                    }(), t = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 12, column: 20}, end: {line: 18, column: 20}},
                                moduleName: "portia-ui/templates/components/extracted-item-table.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                        ");
                                e.appendChild(t, n);
                                var n = e.createElement("table"),
                                    r = e.createTextNode("\n                            ");
                                e.appendChild(n, r);
                                var r = e.createElement("tr"),
                                    a = e.createTextNode("\n                                ");
                                e.appendChild(r, a);
                                var a = e.createElement("td"), l = e.createComment("");
                                e.appendChild(a, l), e.appendChild(r, a);
                                var a = e.createTextNode("\n                            ");
                                e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createTextNode("\n                        ");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(e.childAt(t, [1, 1, 1]), 0, 0), r
                            },
                            statements: [["content", "item", ["loc", [null, [15, 36], [15, 44]]]]],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 9, column: 16}, end: {line: 19, column: 16}},
                            moduleName: "portia-ui/templates/components/extracted-item-table.hbs"
                        },
                        isEmpty: !1,
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "is-object", [["get", "item", ["loc", [null, [10, 37], [10, 41]]]]], [], ["loc", [null, [10, 26], [10, 42]]]]], [], 0, 1, ["loc", [null, [10, 20], [18, 27]]]]],
                        locals: ["item"],
                        templates: [e, t]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 22, column: 4}},
                        moduleName: "portia-ui/templates/components/extracted-item-table.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createElement("tr"), r = e.createTextNode("\n            ");
                        e.appendChild(n, r);
                        var r = e.createElement("td"), a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("\n            ");
                        e.appendChild(n, r);
                        var r = e.createElement("td");
                        e.appendChild(n, r);
                        var r = e.createTextNode("\n        ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n        ");
                        e.appendChild(t, n);
                        var n = e.createElement("tr"), r = e.createTextNode("\n            ");
                        e.appendChild(n, r);
                        var r = e.createElement("td");
                        e.setAttribute(r, "colspan", "2");
                        var a = e.createTextNode("\n");
                        e.appendChild(r, a);
                        var a = e.createComment("");
                        e.appendChild(r, a);
                        var a = e.createTextNode("            ");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("\n        ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(e.childAt(t, [1, 1]), 0, 0), r[1] = e.createMorphAt(e.childAt(t, [3, 1]), 1, 1), r
                    },
                    statements: [["content", "key", ["loc", [null, [4, 16], [4, 23]]]], ["block", "each", [["get", "value", ["loc", [null, [9, 24], [9, 29]]]]], ["key", "@index"], 0, null, ["loc", [null, [9, 16], [19, 25]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), t = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 27, column: 8}, end: {line: 33, column: 8}},
                                moduleName: "portia-ui/templates/components/extracted-item-table.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createElement("tr"), r = e.createTextNode("\n                ");
                                e.appendChild(n, r);
                                var r = e.createElement("td");
                                e.setAttribute(r, "colspan", "2");
                                var a = e.createTextNode("\n                    ");
                                e.appendChild(r, a);
                                var a = e.createComment("");
                                e.appendChild(r, a);
                                var a = e.createTextNode("\n                ");
                                e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createTextNode("\n            ");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(e.childAt(t, [1, 1]), 1, 1), r
                            },
                            statements: [["inline", "extracted-item-table", [], ["item", ["subexpr", "@mut", [["get", "value", ["loc", [null, [30, 48], [30, 53]]]]], [], []]], ["loc", [null, [30, 20], [30, 55]]]]],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 22, column: 4}, end: {line: 34, column: 4}},
                            moduleName: "portia-ui/templates/components/extracted-item-table.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                            e.appendChild(t, n);
                            var n = e.createElement("tr"), r = e.createTextNode("\n            ");
                            e.appendChild(n, r);
                            var r = e.createElement("td"), a = e.createComment("");
                            e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createTextNode("\n            ");
                            e.appendChild(n, r);
                            var r = e.createElement("td");
                            e.appendChild(n, r);
                            var r = e.createTextNode("\n        ");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            e.appendChild(t, n);
                            var n = e.createComment("")
                            ;
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(e.childAt(t, [1, 1]), 0, 0), r[1] = e.createMorphAt(t, 3, 3, n), e.insertBoundary(t, null), r
                        },
                        statements: [["content", "key", ["loc", [null, [24, 16], [24, 23]]]], ["block", "unless", [["subexpr", "is-empty-object", [["get", "value", ["loc", [null, [27, 35], [27, 40]]]]], [], ["loc", [null, [27, 18], [27, 41]]]]], [], 0, null, ["loc", [null, [27, 8], [33, 19]]]]],
                        locals: [],
                        templates: [e]
                    }
                }(), t = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 34, column: 4}, end: {line: 41, column: 4}},
                            moduleName: "portia-ui/templates/components/extracted-item-table.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                            e.appendChild(t, n);
                            var n = e.createElement("tr"), r = e.createTextNode("\n            ");
                            e.appendChild(n, r);
                            var r = e.createElement("td"), a = e.createComment("");
                            e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createTextNode("\n            ");
                            e.appendChild(n, r);
                            var r = e.createElement("td"), a = e.createTextNode("\n                ");
                            e.appendChild(r, a);
                            var a = e.createComment("");
                            e.appendChild(r, a);
                            var a = e.createTextNode("\n            ");
                            e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createTextNode("\n        ");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = e.childAt(t, [1]), a = new Array(2);
                            return a[0] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a[1] = e.createMorphAt(e.childAt(r, [3]), 1, 1), a
                        },
                        statements: [["content", "key", ["loc", [null, [36, 16], [36, 23]]]], ["content", "value", ["loc", [null, [38, 16], [38, 25]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 22, column: 4}, end: {line: 41, column: 4}},
                        moduleName: "portia-ui/templates/components/extracted-item-table.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "is-object", [["get", "value", ["loc", [null, [22, 25], [22, 30]]]]], [], ["loc", [null, [22, 14], [22, 31]]]]], [], 0, 1, ["loc", [null, [22, 4], [41, 4]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 42, column: 0}},
                    moduleName: "portia-ui/templates/components/extracted-item-table.hbs"
                },
                isEmpty: !1,
                arity: 2,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "is-array", [["get", "value", ["loc", [null, [2, 20], [2, 25]]]]], [], ["loc", [null, [2, 10], [2, 26]]]]], [], 0, 1, ["loc", [null, [2, 4], [41, 11]]]]],
                locals: ["key", "value"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 43, column: 0}},
                moduleName: "portia-ui/templates/components/extracted-item-table.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "each-in", [["get", "item", ["loc", [null, [1, 11], [1, 15]]]]], [], 0, null, ["loc", [null, [1, 0], [42, 12]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/extracted-items-group", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 4, column: 12}, end: {line: 6, column: 12}},
                                moduleName: "portia-ui/templates/components/extracted-items-group.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("提取内容项");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function () {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 7, column: 8}},
                            moduleName: "portia-ui/templates/components/extracted-items-group.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "extracted-items-tab", [], [], 0, null, ["loc", [null, [4, 12], [6, 36]]]]],
                        locals: [],
                        templates: [e]
                    }
                }(), t = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 8, column: 8}, end: {line: 10, column: 8}},
                            moduleName: "portia-ui/templates/components/extracted-items-group.hbs"
                        }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            JSON\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: [], templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 12, column: 4}},
                        moduleName: "portia-ui/templates/components/extracted-items-group.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(3);
                        return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), r[2] = e.createMorphAt(t, 3, 3, n), e.insertBoundary(t, 0), r
                    },
                    statements: [["block", "group.tab", [], ["toolId", "extracted-items"], 0, null, ["loc", [null, [3, 8], [7, 22]]]], ["block", "group.tab", [], ["toolId", "extracted-items-json"], 1, null, ["loc", [null, [8, 8], [10, 22]]]], ["content", "extracted-items-status", ["loc", [null, [11, 8], [11, 34]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }(), t = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 13, column: 8}, end: {line: 15, column: 8}},
                                moduleName: "portia-ui/templates/components/extracted-items-group.hbs"
                            },
                            isEmpty: !1,
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "extracted-items-panel", [], ["selected", ["subexpr", "@mut", [["get", "active", ["loc", [null, [14, 45], [14, 51]]]]], [], []]], ["loc", [null, [14, 12], [14, 53]]]]],
                            locals: ["active"],
                            templates: []
                        }
                    }(), t = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 16, column: 8}, end: {line: 18, column: 8}},
                                moduleName: "portia-ui/templates/components/extracted-items-group.hbs"
                            },
                            isEmpty: !1,
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "extracted-items-json-panel", [], ["selected", ["subexpr", "@mut", [["get", "active", ["loc", [null, [17, 50], [17, 56]]]]], [], []]], ["loc", [null, [17, 12], [17, 58]]]]],
                            locals: ["active"],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 12, column: 4}, end: {line: 19, column: 4}},
                            moduleName: "portia-ui/templates/components/extracted-items-group.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), r
                        },
                        statements: [["block", "group.panel", [], ["class", "extracted-items container-fluid", "toolId", "extracted-items"], 0, null, ["loc", [null, [13, 8], [15, 24]]]], ["block", "group.panel", [], ["class", "extracted-items-json", "toolId", "extracted-items-json"], 1, null, ["loc", [null, [16, 8], [18, 24]]]]],
                        locals: [],
                        templates: [e, t]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 12, column: 4}, end: {line: 19, column: 4}},
                        moduleName: "portia-ui/templates/components/extracted-items-group.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [12, 18], [12, 31]]]], "panels"], [], ["loc", [null, [12, 14], [12, 41]]]]], [], 0, null, ["loc", [null, [12, 4], [19, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 20, column: 0}},
                    moduleName: "portia-ui/templates/components/extracted-items-group.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [2, 14], [2, 27]]]], "tabs"], [], ["loc", [null, [2, 10], [2, 35]]]]], [], 0, 1, ["loc", [null, [2, 4], [19, 11]]]]],
                locals: ["group"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 21, column: 0}},
                moduleName: "portia-ui/templates/components/extracted-items-group.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tool-group", [], ["id", "extracted-items-group"], 0, null, ["loc", [null, [1, 0], [20, 15]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/extracted-items-json-panel", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 2, column: 0}, end: {line: 4, column: 0}},
                    moduleName: "portia-ui/templates/components/extracted-items-json-panel.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["inline", "extracted-items-json", [], ["json", ["subexpr", "@mut", [["get", "extractedItems.items", ["loc", [null, [3, 32], [3, 52]]]]], [], []], "position", 0], ["loc", [null, [3, 4], [3, 65]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["multiple-nodes", "wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 5, column: 0}},
                moduleName: "portia-ui/templates/components/extracted-items-json-panel.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("span");
                e.setAttribute(n, "class", "json-character-size");
                var r = e.createTextNode("a");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["get", "selected", ["loc", [null, [2, 6], [2, 14]]]]], [], 0, null, ["loc", [null, [2, 0], [4, 8]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/extracted-items-json-value", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: {name: "triple-curlies"},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 1, column: 72}},
                    moduleName: "portia-ui/templates/components/extracted-items-json-value.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createElement("span");
                    e.setAttribute(n, "class", "json-array-spacing");
                    var r = e.createComment("");
                    return e.appendChild(n, r), e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                },
                statements: [["content", "depthSpaces", ["loc", [null, [1, 50], [1, 65]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 3, column: 0}},
                moduleName: "portia-ui/templates/components/extracted-items-json-value.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(3);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), r[2] = e.createMorphAt(t, 3, 3, n), e.insertBoundary(t, 0), r
            },
            statements: [["block", "if", [["get", "fromArray", ["loc", [null, [1, 6], [1, 15]]]]], [], 0, null, ["loc", [null, [1, 0], [1, 79]]]], ["content", "escapedValue", ["loc", [null, [2, 0], [2, 16]]]], ["content", "comma", ["loc", [null, [2, 16], [2, 25]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/extracted-items-json", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 5, column: 8}},
                            moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createElement("b"), r = e.createComment("");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r
                        },
                        statements: [["content", "openingCharacter", ["loc", [null, [4, 15], [4, 35]]]]],
                        locals: [],
                        templates: []
                    }
                }(), t = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 8, column: 12}, end: {line: 10, column: 12}},
                                moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                e.appendChild(t, n);
                                var n = e.createElement("br");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function () {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 8}, end: {line: 11, column: 8}},
                            moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createElement("b");
                            e.setAttribute(n, "class", "new-line");
                            var r = e.createComment("");
                            e.appendChild(n, r);
                            var r = e.createComment("");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = e.childAt(t, [0]), a = new Array(3);
                            return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 1, 1), a[2] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), a
                        },
                        statements: [["content", "depthPlus1Spaces", ["loc", [null, [7, 32], [7, 52]]]], ["content", "openChild", ["loc", [null, [7, 52], [7, 65]]]], ["block", "if", [["subexpr", "is-object", [["get", "json", ["loc", [null, [8, 30], [8, 34]]]]], [], ["loc", [null, [8, 19], [8, 35]]]]], [], 0, null, ["loc", [null, [8, 12], [10, 20]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 12, column: 4}},
                        moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "unless", [["get", "fromKey", ["loc", [null, [3, 18], [3, 25]]]]], [], 0, null, ["loc", [null, [3, 8], [5, 19]]]], ["block", "if", [["get", "openChild", ["loc", [null, [6, 15], [6, 24]]]]], [], 1, null, ["loc", [null, [6, 8], [11, 15]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }(), t = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 15, column: 12}, end: {line: 15, column: 69}},
                                moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createElement("b");
                                return e.setAttribute(n, "class", "new-line"), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function () {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 14, column: 8}, end: {line: 17, column: 8}},
                            moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                        },
                        isEmpty: !1,
                        arity: 2,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "and", [["get", "fromKey", ["loc", [null, [15, 23], [15, 30]]]], ["subexpr", "not", [["get", "index", ["loc", [null, [15, 36], [15, 41]]]]], [], ["loc", [null, [15, 31], [15, 42]]]]], [], ["loc", [null, [15, 18], [15, 43]]]]], [], 0, null, ["loc", [null, [15, 12], [15, 76]]]], ["inline", "extracted-items-json", [], ["json", ["subexpr", "@mut", [["get", "value", ["loc", [null, [16, 40], [16, 45]]]]], [], []], "position", ["subexpr", "@mut", [["get", "index", ["loc", [null, [16, 55], [16, 60]]]]], [], []], "from", "array", "parent", ["subexpr", "@mut", [["get", "json", ["loc", [null, [16, 81], [16, 85]]]]], [], []], "depth", ["subexpr", "@mut", [["get", "depth", ["loc", [null, [16, 92], [16, 97]]]]], [], []]], ["loc", [null, [16, 12], [16, 101]]]]],
                        locals: ["value", "index"],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 13, column: 4}, end: {line: 18, column: 4}},
                        moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "each", [["get", "json", ["loc", [null, [14, 16], [14, 20]]]]], [], 0, null, ["loc", [null, [14, 8], [17, 18]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), n = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 19, column: 8}, end: {line: 19, column: 65}},
                                moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createElement("b");
                                return e.setAttribute(n, "class", "new-line"), e.appendChild(t, n), t
                            },
                            buildRenderNodes: function () {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(), t = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 21, column: 66}, end: {line: 21, column: 93}},
                                    moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("[");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: [],
                                templates: []
                            }
                        }(), t = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 21, column: 100}, end: {line: 21, column: 129}},
                                    moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("{ ");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 20, column: 8}, end: {line: 23, column: 8}},
                                moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                            },
                            isEmpty: !1,
                            arity: 2,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createElement("span");
                                e.setAttribute(n, "class", "json-key");
                                var r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createTextNode('"');
                                e.appendChild(n, r);
                                var r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createTextNode('": ');
                                e.appendChild(n, r);
                                var r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createComment("");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = e.childAt(t, [0]), a = new Array(5);
                                return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 2, 2), a[2] = e.createMorphAt(r, 4, 4), a[3] = e.createMorphAt(r, 5, 5), a[4] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), a
                            },
                            statements: [["content", "depthPlus1Spaces", ["loc", [null, [21, 35], [21, 55]]]], ["content", "key", ["loc", [null, [21, 56], [21, 63]]]], ["block", "if", [["subexpr", "is-array", [["get", "v.value", ["loc", [null, [21, 82], [21, 89]]]]], [], ["loc", [null, [21, 72], [21, 90]]]]], [], 0, null, ["loc", [null, [21, 66], [21, 100]]]], ["block", "if", [["subexpr", "is-object", [["get", "v.value", ["loc", [null, [21, 117], [21, 124]]]]], [], ["loc", [null, [21, 106], [21, 125]]]]], [], 1, null, ["loc", [null, [21, 100], [21, 136]]]], ["inline", "extracted-items-json", [], ["json", ["subexpr", "@mut", [["get", "v.value", ["loc", [null, [22, 41], [22, 48]]]]], [], []], "position", ["subexpr", "@mut", [["get", "v.index", ["loc", [null, [22, 58], [22, 65]]]]], [], []], "from", "key", "parent", ["subexpr", "@mut", [["get", "json", ["loc", [null, [22, 84], [22, 88]]]]], [], []], "depth", ["subexpr", "@mut", [["get", "depth", ["loc", [null, [22, 95], [22, 100]]]]], [], []], "key", ["subexpr", "@mut", [["get", "key", ["loc", [null, [22, 105], [22, 108]]]]], [], []]], ["loc", [null, [22, 12], [22, 112]]]]],
                            locals: ["key", "v"],
                            templates: [e, t]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 18, column: 4}, end: {line: 24, column: 4}},
                            moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "and", [["get", "fromKey", ["loc", [null, [19, 19], [19, 26]]]], ["subexpr", "not", [["get", "index", ["loc", [null, [19, 32], [19, 37]]]]], [], ["loc", [null, [19, 27], [19, 38]]]]], [], ["loc", [null, [19, 14], [19, 39]]]]], [], 0, null, ["loc", [null, [19, 8], [19, 72]]]], ["block", "each-in", [["subexpr", "indexed-object", [["get", "json", ["loc", [null, [20, 35], [20, 39]]]]], [], ["loc", [null, [20, 19], [20, 40]]]]], [], 1, null, ["loc", [null, [20, 8], [23, 21]]]]],
                        locals: [],
                        templates: [e, t]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 18, column: 4}, end: {line: 24, column: 4}},
                        moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "is-object", [["get", "json", ["loc", [null, [18, 25], [18, 29]]]]], [], ["loc", [null, [18, 14], [18, 30]]]]], [], 0, null, ["loc", [null, [18, 4], [24, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), r = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 25, column: 4}, end: {line: 29, column: 4}},
                        moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createElement("b"), r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n        ");
                        e.appendChild(t, n);
                        var n = e.createElement("b"), r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n        ");
                        e.appendChild(t, n);
                        var n = e.createElement("b");
                        e.setAttribute(n, "class", "new-line"), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [0]), a = e.childAt(t, [2]), l = new Array(5);
                        return l[0] = e.createMorphAt(r, 0, 0), l[1] = e.createMorphAt(r, 1, 1), l[2] = e.createMorphAt(r, 2, 2), l[3] = e.createMorphAt(a, 0, 0), l[4] = e.createMorphAt(a, 1, 1), l
                    },
                    statements: [["content", "depthSpaces", ["loc", [null, [26, 11], [26, 26]]]], ["content", "closingCharacter", ["loc", [null, [26, 26], [26, 46]]]], ["content", "comma", ["loc", [null, [26, 46], [26, 55]]]], ["content", "depthSpaces", ["loc", [null, [27, 11], [27, 26]]]], ["content", "openSibling", ["loc", [null, [27, 26], [27, 41]]]]],
                    locals: [],
                    templates: []
                }
            }(), a = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 29, column: 4}, end: {line: 31, column: 4}},
                        moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createElement("b");
                        e.setAttribute(n, "class", "new-line");
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        return e.appendChild(n, r), e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [1]), a = new Array(3);
                        return a[0] = e.createMorphAt(r, 0, 0), a[1] = e.createMorphAt(r, 1, 1), a[2] = e.createMorphAt(r, 2, 2), a
                    },
                    statements: [["content", "depthSpaces", ["loc", [null, [30, 28], [30, 43]]]], ["content", "closingCharacter", ["loc", [null, [30, 43], [30, 63]]]], ["content", "comma", ["loc", [null, [30, 63], [30, 72]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 32, column: 0}},
                    moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(3);
                    return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), r[2] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["get", "showOpen", ["loc", [null, [2, 10], [2, 18]]]]], [], 0, null, ["loc", [null, [2, 4], [12, 12]]]], ["block", "if", [["subexpr", "is-array", [["get", "json", ["loc", [null, [13, 20], [13, 24]]]]], [], ["loc", [null, [13, 10], [13, 25]]]]], [], 1, 2, ["loc", [null, [13, 4], [24, 12]]]], ["block", "if", [["get", "openSibling", ["loc", [null, [25, 11], [25, 22]]]]], [], 3, 4, ["loc", [null, [25, 4], [31, 14]]]]],
                locals: [],
                templates: [e, t, n, r, a]
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 32, column: 0}, end: {line: 35, column: 0}},
                    moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createElement("b");
                    return e.setAttribute(n, "class", "new-line"), e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                },
                statements: [["inline", "extracted-items-json-value", [], ["value", ["subexpr", "@mut", [["get", "json", ["loc", [null, [33, 39], [33, 43]]]]], [], []], "depth", ["subexpr", "@mut", [["get", "depth", ["loc", [null, [33, 50], [33, 55]]]]], [], []], "position", ["subexpr", "@mut", [["get", "position", ["loc", [null, [33, 65], [33, 73]]]]], [], []], "maxPosition", ["subexpr", "@mut", [["get", "maxPosition", ["loc", [null, [33, 86], [33, 97]]]]], [], []], "key", ["subexpr", "@mut", [["get", "key", ["loc", [null, [33, 102], [33, 105]]]]], [], []], "from", ["subexpr", "@mut", [["get", "from", ["loc", [null, [33, 111], [33, 115]]]]], [], []]], ["loc", [null, [33, 4], [33, 119]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 36, column: 0}},
                moduleName: "portia-ui/templates/components/extracted-items-json.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["subexpr", "is-object-or-array", [["get", "json", ["loc", [null, [1, 26], [1, 30]]]]], [], ["loc", [null, [1, 6], [1, 31]]]]], [], 0, 1, ["loc", [null, [1, 0], [35, 8]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/extracted-items-panel", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["multiple-nodes"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 6, column: 0}},
                    moduleName: "portia-ui/templates/components/extracted-items-panel.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "mid-align twice-x spaced");
                    var r = e.createTextNode("\n      ");
                    e.appendChild(n, r);
                    var r = e.createElement("span");
                    e.setAttribute(r, "class", "fa fa-spin fa-refresh"), e.appendChild(n, r);
                    var r = e.createTextNode("\n    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n    ");
                    e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "mid-align one-half-x spaced");
                    var r = e.createTextNode("Extracting data...");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function () {
                    return []
                }, statements: [], locals: [], templates: []
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 8, column: 0}, end: {line: 15, column: 0}},
                    moduleName: "portia-ui/templates/components/extracted-items-panel.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "mid-align twice-x spaced");
                    var r = e.createTextNode("\n      ");
                    e.appendChild(n, r);
                    var r = e.createElement("span");
                    e.setAttribute(r, "class", "fa fa-ban"), e.appendChild(n, r);
                    var r = e.createTextNode("\n    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n    ");
                    e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "mid-align one-half-x spaced");
                    var r = e.createTextNode("\n      ");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("\n    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(e.childAt(t, [3]), 1, 1), r
                }, statements: [["content", "failedMsg", ["loc", [null, [13, 6], [13, 19]]]]], locals: [], templates: []
            }
        }(), n = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 18, column: 4}, end: {line: 20, column: 4}},
                        moduleName: "portia-ui/templates/components/extracted-items-panel.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "extracted-item-table", [], ["item", ["subexpr", "@mut", [["get", "item", ["loc", [null, [19, 36], [19, 40]]]]], [], []]], ["loc", [null, [19, 8], [19, 42]]]]],
                    locals: ["item"],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 17, column: 0}, end: {line: 21, column: 0}},
                    moduleName: "portia-ui/templates/components/extracted-items-panel.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "each", [["get", "extractedItems.items", ["loc", [null, [18, 12], [18, 32]]]]], ["key", "@index"], 0, null, ["loc", [null, [18, 4], [20, 13]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 22, column: 0}},
                moduleName: "portia-ui/templates/components/extracted-items-panel.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(3);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), r[2] = e.createMorphAt(t, 4, 4, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["get", "isExtracting", ["loc", [null, [1, 6], [1, 18]]]]], [], 0, null, ["loc", [null, [1, 0], [6, 7]]]], ["block", "if", [["get", "failedExtraction", ["loc", [null, [8, 6], [8, 22]]]]], [], 1, null, ["loc", [null, [8, 0], [15, 7]]]], ["block", "if", [["subexpr", "and", [["get", "selected", ["loc", [null, [17, 11], [17, 19]]]], ["subexpr", "not", [["get", "isExtracting", ["loc", [null, [17, 25], [17, 37]]]]], [], ["loc", [null, [17, 20], [17, 38]]]]], [], ["loc", [null, [17, 6], [17, 39]]]]], [], 2, null, ["loc", [null, [17, 0], [21, 7]]]]],
            locals: [],
            templates: [e, t, n]
        }
    }())
}), define("portia-ui/templates/components/extracted-items-status", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 5, column: 8}},
                            moduleName: "portia-ui/templates/components/extracted-items-status.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["content", "changeInfo.text", ["loc", [null, [4, 12], [4, 31]]]]],
                        locals: [],
                        templates: []
                    }
                }(), t = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 5, column: 8}, end: {line: 7, column: 8}},
                            moduleName: "portia-ui/templates/components/extracted-items-status.hbs"
                        }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(),
                                n = e.createTextNode("            Your sample is correctly configured for extraction\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: [], templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 8, column: 4}},
                        moduleName: "portia-ui/templates/components/extracted-items-status.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["get", "hasWarning", ["loc", [null, [3, 14], [3, 24]]]]], [], 0, 1, ["loc", [null, [3, 8], [7, 15]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 9, column: 0}},
                    moduleName: "portia-ui/templates/components/extracted-items-status.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "help-icon", [], ["icon", ["subexpr", "@mut", [["get", "icon", ["loc", [null, [2, 22], [2, 26]]]]], [], []], "placement", "left"], 0, null, ["loc", [null, [2, 4], [8, 18]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 10, column: 0}},
                moduleName: "portia-ui/templates/components/extracted-items-status.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "link-to", [["get", "changeInfo.path", ["loc", [null, [1, 11], [1, 26]]]], ["get", "changeInfo.model", ["loc", [null, [1, 27], [1, 43]]]]], ["bubbles", !1], 0, null, ["loc", [null, [1, 0], [9, 12]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/extracted-items-tab", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 3, column: 0}, end: {line: 5, column: 0}},
                    moduleName: "portia-ui/templates/components/extracted-items-tab.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("span");
                    e.setAttribute(n, "class", "badge");
                    var r = e.createComment("");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r
                }, statements: [["content", "numItems", ["loc", [null, [4, 24], [4, 36]]]]], locals: [], templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 6, column: 0}},
                moduleName: "portia-ui/templates/components/extracted-items-tab.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]]], ["block", "unless", [["get", "isExtracting", ["loc", [null, [3, 10], [3, 22]]]]], [], 0, null, ["loc", [null, [3, 0], [5, 11]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/extractor-options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 4, column: 12}, end: {line: 6, column: 12}},
                                moduleName: "portia-ui/templates/components/extractor-options.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("                Extractors\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function () {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }(), t = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 8, column: 16}, end: {line: 8, column: 60}},
                                    moduleName: "portia-ui/templates/components/extractor-options.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createTextNode("Add field type extractor");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: [],
                                templates: []
                            }
                        }(), t = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 10, column: 20}, end: {line: 12, column: 20}},
                                        moduleName: "portia-ui/templates/components/extractor-options.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 1,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                        ");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(2);
                                        return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 2, 2, n), r
                                    },
                                    statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", ["subexpr", "@mut", [["get", "type", ["loc", [null, [11, 59], [11, 63]]]]], [], []]], ["loc", [null, [11, 24], [11, 65]]]], ["content", "type", ["loc", [null, [11, 65], [11, 73]]]]],
                                    locals: ["value"],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 9, column: 16}, end: {line: 13, column: 16}},
                                    moduleName: "portia-ui/templates/components/extractor-options.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "dropdown.item", [], ["action", ["subexpr", "chain-actions", [["subexpr", "action", ["addTypeExtractor", ["get", "type", ["loc", [null, [10, 86], [10, 90]]]]], [], ["loc", [null, [10, 59], [10, 91]]]], ["get", "dropdown.closeMenu", ["loc", [null, [10, 92], [10, 110]]]]], [], ["loc", [null, [10, 44], [10, 111]]]]], 0, null, ["loc", [null, [10, 20], [12, 38]]]]],
                                locals: ["type"],
                                templates: [e]
                            }
                        }(), n = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 14, column: 16}, end: {line: 14, column: 68}},
                                    moduleName: "portia-ui/templates/components/extractor-options.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createTextNode("Add regular expression extractor");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: [],
                                templates: []
                            }
                        }(), r = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 16, column: 20}, end: {line: 18, column: 20}},
                                        moduleName: "portia-ui/templates/components/extractor-options.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 1,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                        ");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(2);
                                        return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 2, 2, n), r
                                    },
                                    statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", "regular expression"], ["loc", [null, [17, 24], [17, 81]]]], ["content", "extractor.value", ["loc", [null, [17, 81], [17, 100]]]]],
                                    locals: ["value"],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 15, column: 16}, end: {line: 19, column: 16}},
                                    moduleName: "portia-ui/templates/components/extractor-options.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "dropdown.item", [], ["action", ["subexpr", "chain-actions", [["subexpr", "action", ["addRegexExtractor", ["get", "extractor", ["loc", [null, [16, 87], [16, 96]]]]], [], ["loc", [null, [16, 59], [16, 97]]]], ["get", "dropdown.closeMenu", ["loc", [null, [16, 98], [16, 116]]]]], [], ["loc", [null, [16, 44], [16, 117]]]]], 0, null, ["loc", [null, [16, 20], [18, 38]]]]],
                                locals: ["extractor"],
                                templates: [e]
                            }
                        }(), a = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 20, column: 16}, end: {line: 22, column: 16}},
                                    moduleName: "portia-ui/templates/components/extractor-options.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                    ");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("New regular expression\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                                },
                                statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", "add"], ["loc", [null, [21, 20], [21, 62]]]]],
                                locals: ["value"],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 7, column: 12}, end: {line: 23, column: 12}},
                                moduleName: "portia-ui/templates/components/extractor-options.hbs"
                            },
                            isEmpty: !1,
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("                ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(5);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r[3] = e.createMorphAt(t, 7, 7, n), r[4] = e.createMorphAt(t, 8, 8, n), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "dropdown.header", [], [], 0, null, ["loc", [null, [8, 16], [8, 80]]]], ["block", "each", [["get", "types", ["loc", [null, [9, 24], [9, 29]]]]], [], 1, null, ["loc", [null, [9, 16], [13, 25]]]], ["block", "dropdown.header", [], [], 2, null, ["loc", [null, [14, 16], [14, 88]]]], ["block", "each", [["get", "regexExtractors", ["loc", [null, [15, 24], [15, 39]]]]], [], 3, null, ["loc", [null, [15, 16], [19, 25]]]], ["block", "dropdown.item", [], ["action", ["subexpr", "chain-actions", [["subexpr", "action", ["addNewRegexExtractor"], [], ["loc", [null, [20, 55], [20, 86]]]], ["get", "dropdown.closeMenu", ["loc", [null, [20, 87], [20, 105]]]]], [], ["loc", [null, [20, 40], [20, 106]]]]], 4, null, ["loc", [null, [20, 16], [22, 34]]]]],
                            locals: ["dropdown"],
                            templates: [e, t, n, r, a]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 24, column: 8}},
                            moduleName: "portia-ui/templates/components/extractor-options.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "list-item-text", [], ["class", "title"], 0, null, ["loc", [null, [4, 12], [6, 31]]]], ["block", "list-item-icon-menu", [], ["icon", "add-dropdown"], 1, null, ["loc", [null, [7, 12], [23, 36]]]]],
                        locals: [],
                        templates: [e, t]
                    }
                }(), t = function () {
                    var e = function () {
                        var e = function () {
                            var e = function () {
                                var e = function () {
                                    var e = function () {
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 29, column: 24},
                                                    end: {line: 31, column: 24}
                                                },
                                                moduleName: "portia-ui/templates/components/extractor-options.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode("                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function (e, t, n) {
                                                var r = new Array(1);
                                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                                            },
                                            statements: [["content", "extractor.value", ["loc", [null, [30, 28], [30, 47]]]]],
                                            locals: [],
                                            templates: []
                                        }
                                    }();
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 27, column: 20},
                                                end: {line: 32, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/extractor-options.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(2);
                                            return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), e.insertBoundary(t, null), r
                                        },
                                        statements: [["inline", "list-item-icon", [], ["icon", ["subexpr", "@mut", [["get", "extractor.value", ["loc", [null, [28, 46], [28, 61]]]]], [], []]], ["loc", [null, [28, 24], [28, 63]]]], ["block", "list-item-text", [], [], 0, null, ["loc", [null, [29, 24], [31, 43]]]]],
                                        locals: [],
                                        templates: [e]
                                    }
                                }(), t = function () {
                                    var e = function () {
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 32, column: 20},
                                                    end: {line: 35, column: 20}
                                                },
                                                moduleName: "portia-ui/templates/components/extractor-options.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode("                        ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                        ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                    ");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function (e, t, n) {
                                                var r = new Array(2);
                                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r
                                            },
                                            statements: [["inline", "list-item-icon", [], ["icon", "regular expression"], ["loc", [null, [33, 24], [33, 68]]]], ["inline", "list-item-editable", [], ["value", ["subexpr", "mut", [["get", "extractor.value", ["loc", [null, [34, 56], [34, 71]]]]], [], ["loc", [null, [34, 51], [34, 72]]]], "editing", ["subexpr", "mut", [["get", "extractor.new", ["loc", [null, [34, 86], [34, 99]]]]], [], ["loc", [null, [34, 81], [34, 100]]]], "onChange", ["subexpr", "action", ["saveExtractor", ["get", "extractor", ["loc", [null, [34, 134], [34, 143]]]]], [], ["loc", [null, [34, 110], [34, 144]]]]], ["loc", [null, [34, 24], [34, 146]]]]],
                                            locals: [],
                                            templates: []
                                        }
                                    }();
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 32, column: 20},
                                                end: {line: 35, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/extractor-options.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(), n = e.createComment("");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                        },
                                        statements: [["block", "if", [["subexpr", "eq", [["get", "extractor.type", ["loc", [null, [32, 34], [32, 48]]]], "regex"], [], ["loc", [null, [32, 30], [32, 57]]]]], [], 0, null, ["loc", [null, [32, 20], [35, 20]]]]],
                                        locals: [],
                                        templates: [e]
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 26, column: 16}, end: {line: 37, column: 16}},
                                        moduleName: "portia-ui/templates/components/extractor-options.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("                    ");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(2);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), r
                                    },
                                    statements: [["block", "if", [["subexpr", "eq", [["get", "extractor.type", ["loc", [null, [27, 30], [27, 44]]]], "type"], [], ["loc", [null, [27, 26], [27, 52]]]]], [], 0, 1, ["loc", [null, [27, 20], [35, 27]]]], ["inline", "list-item-icon", [], ["icon", "remove", "action", ["subexpr", "action", ["removeExtractor", ["get", "extractor", ["loc", [null, [36, 84], [36, 93]]]]], [], ["loc", [null, [36, 58], [36, 94]]]], "bubbles", !1], ["loc", [null, [36, 20], [36, 110]]]]],
                                    locals: [],
                                    templates: [e, t]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 25, column: 12}, end: {line: 38, column: 12}},
                                    moduleName: "portia-ui/templates/components/extractor-options.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "tree-list-item", [], [], 0, null, ["loc", [null, [26, 16], [37, 35]]]]],
                                locals: ["extractor"],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 24, column: 8}, end: {line: 39, column: 8}},
                                moduleName: "portia-ui/templates/components/extractor-options.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("        ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                            },
                            statements: [["block", "each", [["get", "annotation.extractors", ["loc", [null, [25, 20], [25, 41]]]]], [], 0, null, ["loc", [null, [25, 12], [38, 21]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 24, column: 8}, end: {line: 39, column: 8}},
                            moduleName: "portia-ui/templates/components/extractor-options.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [24, 22], [24, 37]]]], "subtrees"], [], ["loc", [null, [24, 18], [24, 49]]]]], [], 0, null, ["loc", [null, [24, 8], [39, 8]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 40, column: 4}},
                        moduleName: "portia-ui/templates/components/extractor-options.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [3, 18], [3, 33]]]], "item"], [], ["loc", [null, [3, 14], [3, 41]]]]], [], 0, 1, ["loc", [null, [3, 8], [39, 15]]]]],
                    locals: ["options"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 41, column: 0}},
                    moduleName: "portia-ui/templates/components/extractor-options.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tree-list-item", [], ["hasChildren", !0], 0, null, ["loc", [null, [2, 4], [40, 23]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 42, column: 0}},
                moduleName: "portia-ui/templates/components/extractor-options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tree-list", [], ["class", "extractor-options"], 0, null, ["loc", [null, [1, 0], [41, 14]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/feed-url-options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 19, column: 0}},
                moduleName: "portia-ui/templates/components/feed-url-options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div");
                e.setAttribute(n, "class", "spaced");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("p");
                e.setAttribute(r, "class", "txt-describe");
                var a = e.createTextNode("\n        Enter a publicly available URL containing newline separated URLs\n        ");
                e.appendChild(r, a);
                var a = e.createElement("a");
                e.setAttribute(a, "target", "_blank");
                var l = e.createTextNode("like this.");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n\n");
                e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "class", "spaced");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("label");
                e.setAttribute(r, "for", "feedUrl");
                var a = e.createTextNode("Feed URL");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0, 1, 1]), a = new Array(2);
                return a[0] = e.createAttrMorph(r, "href"), a[1] = e.createMorphAt(e.childAt(t, [2]), 3, 3), a
            },
            statements: [["attribute", "href", ["get", "feedLink", ["loc", [null, [4, 18], [4, 26]]]]], ["inline", "input", [], ["type", "text", "id", "feedUrl", "class", "form-control focus-control", "value", ["subexpr", "mut", [["get", "startUrl.url", ["loc", [null, [14, 17], [14, 29]]]]], [], ["loc", [null, [14, 12], [14, 30]]]], "focus-out", "saveFeedUrl", "placeholder", "https://gist.github.com/user/gist_id"], ["loc", [null, [10, 4], [17, 6]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/components/field-options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 7, column: 8}, end: {line: 9, column: 8}},
                    moduleName: "portia-ui/templates/components/field-options.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(),
                        n = e.createTextNode("            Only extract items that have this field. All samples using this data format will be affected\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function () {
                    return []
                }, statements: [], locals: [], templates: []
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 15, column: 8}, end: {line: 17, column: 8}},
                    moduleName: "portia-ui/templates/components/field-options.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(),
                        n = e.createTextNode("            The value of this field will be ignored when checking for duplicate items\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function () {
                    return []
                }, statements: [], locals: [], templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 20, column: 0}},
                moduleName: "portia-ui/templates/components/field-options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("h3"), r = e.createTextNode("Field");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createElement("form"), r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "checkbox");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("label"), l = e.createTextNode("\n            ");
                e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createTextNode(" Required\n        ");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n    ")
                ;e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "checkbox");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("label"), l = e.createTextNode("\n            ");
                e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createTextNode(" Vary\n        ");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [2]), a = e.childAt(r, [1]), l = e.childAt(r, [3]), o = new Array(5);
                return o[0] = e.createElementMorph(r), o[1] = e.createMorphAt(e.childAt(a, [1]), 1, 1), o[2] = e.createMorphAt(a, 3, 3), o[3] = e.createMorphAt(e.childAt(l, [1]), 1, 1), o[4] = e.createMorphAt(l, 3, 3), o
            },
            statements: [["element", "action", ["save"], ["on", "change"], ["loc", [null, [2, 6], [2, 35]]]], ["inline", "input", [], ["type", "checkbox", "name", "required", "checked", ["subexpr", "mut", [["get", "field.required", ["loc", [null, [5, 65], [5, 79]]]]], [], ["loc", [null, [5, 60], [5, 80]]]]], ["loc", [null, [5, 12], [5, 82]]]], ["block", "help-icon", [], [], 0, null, ["loc", [null, [7, 8], [9, 22]]]], ["inline", "input", [], ["type", "checkbox", "name", "vary", "checked", ["subexpr", "mut", [["get", "field.vary", ["loc", [null, [13, 61], [13, 71]]]]], [], ["loc", [null, [13, 56], [13, 72]]]]], ["loc", [null, [13, 12], [13, 74]]]], ["block", "help-icon", [], [], 1, null, ["loc", [null, [15, 8], [17, 22]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/fragment-options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 3, column: 0}},
                    moduleName: "portia-ui/templates/components/fragment-options.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "list-item-badge", [], ["value", ["subexpr", "@mut", [["get", "multiplicity", ["loc", [null, [2, 28], [2, 40]]]]], [], []], "color", ["subexpr", "@mut", [["get", "fragmentColor", ["loc", [null, [2, 47], [2, 60]]]]], [], []]], ["loc", [null, [2, 4], [2, 62]]]]],
                locals: [],
                templates: []
            }
        }(), t = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 5, column: 8}, end: {line: 7, column: 8}},
                            moduleName: "portia-ui/templates/components/fragment-options.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["content", "changeset.error.value.validation", ["loc", [null, [6, 12], [6, 48]]]]],
                        locals: [],
                        templates: []
                    }
                }(), t = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 7, column: 8}, end: {line: 9, column: 8}},
                            moduleName: "portia-ui/templates/components/fragment-options.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["inline", "icon-button", [], ["id", ["subexpr", "concat", ["error-icon-", ["get", "elementId", ["loc", [null, [8, 51], [8, 60]]]]], [], ["loc", [null, [8, 29], [8, 61]]]], "icon", "error-triangle", "class", "fragment-error tooltip-for"], ["loc", [null, [8, 12], [8, 120]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 4, column: 4}, end: {line: 10, column: 4}},
                        moduleName: "portia-ui/templates/components/fragment-options.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "tooltip.section", ["loc", [null, [5, 18], [5, 33]]]], "tooltip"], [], ["loc", [null, [5, 14], [5, 44]]]]], [], 0, 1, ["loc", [null, [5, 8], [9, 15]]]]],
                    locals: ["tooltip"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 3, column: 0}, end: {line: 11, column: 0}},
                    moduleName: "portia-ui/templates/components/fragment-options.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tooltip-container", [], ["toggleTooltip", ["subexpr", "@mut", [["get", "toggleTooltip", ["loc", [null, [4, 39], [4, 52]]]]], [], []], "tooltipContainer", "body", "tooltipFor", ["subexpr", "concat", ["error-icon-", ["get", "elementId", ["loc", [null, [4, 110], [4, 119]]]]], [], ["loc", [null, [4, 88], [4, 120]]]], "placement", "left"], 0, null, ["loc", [null, [4, 4], [10, 26]]]]],
                locals: [],
                templates: [e]
            }
        }(), n = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 14, column: 4}, end: {line: 18, column: 4}},
                    moduleName: "portia-ui/templates/components/fragment-options.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n        ");
                    e.appendChild(t, n);
                    var n = e.createElement("span"), r = e.createTextNode("-");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n        ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(2);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 5, 5, n), r
                },
                statements: [["inline", "input", [], ["type", "text", "class", "form-control compact-control fragment-left-half focus-control", "value", ["subexpr", "mut", [["get", "lower", ["loc", [null, [15, 109], [15, 114]]]]], [], ["loc", [null, [15, 104], [15, 115]]]], "placeholder", "start", "focus-out", ["subexpr", "action", ["saveFragment"], [], ["loc", [null, [15, 146], [15, 169]]]]], ["loc", [null, [15, 8], [15, 171]]]], ["inline", "input", [], ["type", "text", "class", "form-control compact-control fragment-right-half", "value", ["subexpr", "mut", [["get", "higher", ["loc", [null, [17, 96], [17, 102]]]]], [], ["loc", [null, [17, 91], [17, 103]]]], "placeholder", "end", "focus-out", ["subexpr", "action", ["saveFragment"], [], ["loc", [null, [17, 132], [17, 155]]]]], ["loc", [null, [17, 8], [17, 157]]]]],
                locals: [],
                templates: []
            }
        }(), r = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 18, column: 4}, end: {line: 20, column: 4}},
                    moduleName: "portia-ui/templates/components/fragment-options.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "input", [], ["type", "text", "class", "form-control compact-control fragment-input focus-control", "value", ["subexpr", "mut", [["get", "changeset.value", ["loc", [null, [19, 105], [19, 120]]]]], [], ["loc", [null, [19, 100], [19, 121]]]], "placeholder", ["subexpr", "@mut", [["get", "listPlaceholder", ["loc", [null, [19, 134], [19, 149]]]]], [], []], "focus-out", ["subexpr", "action", ["saveFragment"], [], ["loc", [null, [19, 160], [19, 183]]]], "key-up", ["subexpr", "action", ["updateValue"], [], ["loc", [null, [19, 191], [19, 213]]]]], ["loc", [null, [19, 8], [19, 215]]]]],
                locals: [],
                templates: []
            }
        }(), a = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 34, column: 0}, end: {line: 41, column: 0}},
                    moduleName: "portia-ui/templates/components/fragment-options.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "list-item-icon", [], ["class", "fragment-action-icon", "icon", "remove", "action", ["subexpr", "action", [["get", "removeFragment", ["loc", [null, [38, 21], [38, 35]]]], ["get", "fragment", ["loc", [null, [38, 36], [38, 44]]]]], [], ["loc", [null, [38, 13], [38, 45]]]], "bubbles", !1], ["loc", [null, [35, 4], [40, 6]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 42, column: 0}},
                moduleName: "portia-ui/templates/components/fragment-options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createElement("div"), r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n\n");
                e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "class", "form-group");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [2]), a = new Array(5);
                return a[0] = e.createMorphAt(t, 0, 0, n), a[1] = e.createAttrMorph(r, "class"), a[2] = e.createMorphAt(r, 1, 1), a[3] = e.createMorphAt(e.childAt(t, [4]), 1, 1), a[4] = e.createMorphAt(t, 6, 6, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), a
            },
            statements: [["block", "if", [["get", "changeset.isValid", ["loc", [null, [1, 6], [1, 23]]]]], [], 0, 1, ["loc", [null, [1, 0], [11, 7]]]], ["attribute", "class", ["concat", ["form-group ", ["subexpr", "if", [["get", "changeset.isInvalid", ["loc", [null, [13, 28], [13, 47]]]], "has-error"], [], ["loc", [null, [13, 23], [13, 61]]]]]]], ["block", "if", [["get", "isRange", ["loc", [null, [14, 10], [14, 17]]]]], [], 2, 3, ["loc", [null, [14, 4], [20, 11]]]], ["inline", "select-box", [], ["buttonClass", "compact-control fragment-type", "value", ["subexpr", "mut", [["get", "fragmentType", ["loc", [null, [26, 17], [26, 29]]]]], [], ["loc", [null, [26, 12], [26, 30]]]], "valueAttribute", "label", "choices", ["subexpr", "@mut", [["get", "fragmentTypes", ["loc", [null, [28, 14], [28, 27]]]]], [], []], "isDisabled", ["subexpr", "eq", [["get", "index", ["loc", [null, [29, 21], [29, 26]]]], 0], [], ["loc", [null, [29, 17], [29, 29]]]], "onClick", ["subexpr", "action", ["changeFragmentType"], [], ["loc", [null, [30, 14], [30, 43]]]]], ["loc", [null, [24, 4], [31, 6]]]], ["block", "if", [["subexpr", "not-eq", [["get", "index", ["loc", [null, [34, 14], [34, 19]]]], 0], [], ["loc", [null, [34, 6], [34, 22]]]]], [], 4, null, ["loc", [null, [34, 0], [41, 7]]]]],
            locals: [],
            templates: [e, t, n, r, a]
        }
    }())
}), define("portia-ui/templates/components/generated-url-options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 3, column: 4}, end: {line: 12, column: 4}},
                        moduleName: "portia-ui/templates/components/generated-url-options.hbs"
                    }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        Fragments\n        ");
                        e.appendChild(t, n);
                        var n = e.createElement("p"),
                            r = e.createTextNode("\n            A generated url is made up of one or more fragments. A fragment can be a single value,\n            a list of different values or a range of numbers.\n        ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n        ");
                        e.appendChild(t, n);
                        var n = e.createElement("p"),
                            r = e.createTextNode("\n            Using fragments you can create a large number of urls.\n        ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    }, buildRenderNodes: function () {
                        return []
                    }, statements: [], locals: [], templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 13, column: 0}},
                    moduleName: "portia-ui/templates/components/generated-url-options.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    Fragments\n");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                },
                statements: [["block", "help-icon", [], [], 0, null, ["loc", [null, [3, 4], [12, 18]]]]],
                locals: [],
                templates: [e]
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 15, column: 0}, end: {line: 21, column: 0}},
                    moduleName: "portia-ui/templates/components/generated-url-options.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "list-item-icon", [], ["icon", "add", "id", "add-fragment-button", "action", ["subexpr", "action", ["addFragment"], [], ["loc", [null, [19, 13], [19, 35]]]], "disabled", ["subexpr", "not", [["get", "allValidFragments", ["loc", [null, [20, 20], [20, 37]]]]], [], ["loc", [null, [20, 15], [20, 38]]]]], ["loc", [null, [16, 4], [20, 40]]]]],
                locals: [],
                templates: []
            }
        }(), n = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 23, column: 0}, end: {line: 32, column: 0}},
                    moduleName: "portia-ui/templates/components/generated-url-options.hbs"
                },
                isEmpty: !1,
                arity: 2,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "fragment-options", [], ["index", ["subexpr", "@mut", [["get", "index", ["loc", [null, [25, 23], [25, 28]]]]], [], []], "fragment", ["subexpr", "@mut", [["get", "fragment", ["loc", [null, [26, 23], [26, 31]]]]], [], []], "saveSpider", ["subexpr", "@mut", [["get", "saveSpider", ["loc", [null, [27, 23], [27, 33]]]]], [], []], "fragmentColor", ["subexpr", "array-get", [["get", "fragmentColors", ["loc", [null, [28, 34], [28, 48]]]], ["get", "index", ["loc", [null, [28, 49], [28, 54]]]]], [], ["loc", [null, [28, 23], [28, 55]]]], "removeFragment", ["subexpr", "action", ["removeFragment"], [], ["loc", [null, [29, 23], [29, 48]]]], "allValidFragments", ["subexpr", "@mut", [["get", "allValidFragments", ["loc", [null, [30, 26], [30, 43]]]]], [], []]], ["loc", [null, [24, 4], [31, 6]]]]],
                locals: ["fragment", "index"],
                templates: []
            }
        }(), r = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 40, column: 12}, end: {line: 42, column: 12}},
                            moduleName: "portia-ui/templates/components/generated-url-options.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["content", "fragment", ["loc", [null, [41, 16], [41, 28]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 39, column: 8}, end: {line: 43, column: 8}},
                        moduleName: "portia-ui/templates/components/generated-url-options.hbs"
                    },
                    isEmpty: !1,
                    arity: 2,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "colored-span", [], ["color", ["subexpr", "array-get", [["get", "fragmentColors", ["loc", [null, [40, 45], [40, 59]]]], ["get", "index", ["loc", [null, [40, 60], [40, 65]]]]], [], ["loc", [null, [40, 34], [40, 66]]]]], 0, null, ["loc", [null, [40, 12], [42, 30]]]]],
                    locals: ["fragment", "index"],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 37, column: 4}, end: {line: 45, column: 4}},
                    moduleName: "portia-ui/templates/components/generated-url-options.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createElement("p"), r = e.createTextNode("\n");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("        ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(e.childAt(t, [1]), 1, 1), r
                },
                statements: [["block", "each", [["get", "generatedUrlList", ["loc", [null, [39, 16], [39, 32]]]]], [], 0, null, ["loc", [null, [39, 8], [43, 18]]]]],
                locals: ["generatedUrlList"],
                templates: [e]
            }
        }(), a = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 47, column: 4}, end: {line: 53, column: 4}},
                    moduleName: "portia-ui/templates/components/generated-url-options.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "tooltip-icon", [], ["icon", "vertical-ellipsis", "text", "This list only shows the first few generated urls.", "modifyClasses", "one-half-x full-width"], ["loc", [null, [48, 8], [52, 10]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 57, column: 0}},
                moduleName: "portia-ui/templates/components/generated-url-options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createElement("h3");
                e.setAttribute(n, "class", "start-url-list-title");
                var r = e.createTextNode("Generation List");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createElement("div"), r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("section");
                e.setAttribute(r, "class", "start-url-generation-list");
                var a = e.createTextNode("\n");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [8]), a = e.childAt(r, [1]), l = new Array(6);
                return l[0] = e.createMorphAt(t, 0, 0, n), l[1] = e.createMorphAt(t, 2, 2, n), l[2] = e.createMorphAt(t, 4, 4, n), l[3] = e.createAttrMorph(r, "class"), l[4] = e.createMorphAt(a, 1, 1), l[5] = e.createMorphAt(a, 3, 3), e.insertBoundary(t, 0), l
            },
            statements: [["block", "list-item-text", [], ["class", "title fragments-title"], 0, null, ["loc", [null, [1, 0], [13, 19]]]], ["block", "tooltip-container", [], ["tooltipFor", "add-fragment-button", "text", "Create a new fragment to generate URLs", "tooltipContainer", "body"], 1, null, ["loc", [null, [15, 0], [21, 22]]]], ["block", "each", [["get", "fragments", ["loc", [null, [23, 8], [23, 17]]]]], [], 2, null, ["loc", [null, [23, 0], [32, 9]]]], ["attribute", "class", ["concat", ["start-url-list form-control ", ["subexpr", "unless", [["get", "allValidFragments", ["loc", [null, [35, 49], [35, 66]]]], "has-error"], [], ["loc", [null, [35, 40], [35, 80]]]]]]], ["block", "each", [["get", "generatedUrlLists", ["loc", [null, [37, 12], [37, 29]]]]], [], 3, null, ["loc", [null, [37, 4], [45, 13]]]], ["block", "if", [["subexpr", "not", [["get", "isComplete", ["loc", [null, [47, 15], [47, 25]]]]], [], ["loc", [null, [47, 10], [47, 26]]]]], [], 4, null, ["loc", [null, [47, 4], [53, 11]]]]],
            locals: [],
            templates: [e, t, n, r, a]
        }
    }())
}), define("portia-ui/templates/components/help-icon", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                        moduleName: "portia-ui/templates/components/help-icon.hbs"
                    }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    }, buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    }, statements: [["content", "yield", ["loc", [null, [3, 8], [3, 17]]]]], locals: [], templates: []
                }
            }(), t = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 4, column: 4}, end: {line: 6, column: 4}},
                        moduleName: "portia-ui/templates/components/help-icon.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "icon-button", [], ["id", ["subexpr", "concat", ["help-icon-", ["get", "elementId", ["loc", [null, [5, 46], [5, 55]]]]], [], ["loc", [null, [5, 25], [5, 56]]]], "class", ["subexpr", "@mut", [["get", "classes", ["loc", [null, [5, 63], [5, 70]]]]], [], []], "icon", ["subexpr", "@mut", [["get", "icon", ["loc", [null, [5, 76], [5, 80]]]]], [], []]], ["loc", [null, [5, 8], [5, 82]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 7, column: 0}},
                    moduleName: "portia-ui/templates/components/help-icon.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "tooltip.section", ["loc", [null, [2, 14], [2, 29]]]], "tooltip"], [], ["loc", [null, [2, 10], [2, 40]]]]], [], 0, 1, ["loc", [null, [2, 4], [6, 11]]]]],
                locals: ["tooltip"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 8, column: 0}},
                moduleName: "portia-ui/templates/components/help-icon.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tooltip-container", [], ["tooltipClasses", ["subexpr", "@mut", [["get", "tooltipClasses", ["loc", [null, [1, 36], [1, 50]]]]], [], []], "tooltipFor", ["subexpr", "concat", ["help-icon-", ["get", "elementId", ["loc", [null, [1, 83], [1, 92]]]]], [], ["loc", [null, [1, 62], [1, 93]]]], "tooltipContainer", ["subexpr", "@mut", [["get", "tooltipContainer", ["loc", [null, [1, 111], [1, 127]]]]], [], []], "placement", ["subexpr", "@mut", [["get", "placement", ["loc", [null, [1, 138], [1, 147]]]]], [], []]], 0, null, ["loc", [null, [1, 0], [7, 22]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/icon-button", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["empty-body"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 1, column: 0}},
                moduleName: "portia-ui/templates/components/icon-button.hbs"
            }, isEmpty: !0, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                return e.createDocumentFragment()
            }, buildRenderNodes: function () {
                return []
            }, statements: [], locals: [], templates: []
        }
    }())
}), define("portia-ui/templates/components/input-with-clear", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 3, column: 0}},
                moduleName: "portia-ui/templates/components/input-with-clear.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), r
            },
            statements: [["inline", "input", [], ["class", "form-control", "value", ["subexpr", "mut", [["get", "value", ["loc", [null, [1, 40], [1, 45]]]]], [], ["loc", [null, [1, 35], [1, 46]]]], "placeholder", ["subexpr", "@mut", [["get", "placeholder", ["loc", [null, [1, 59], [1, 70]]]]], [], []], "keyUp", ["subexpr", "action", ["keyUp"], ["on", "key-up"], ["loc", [null, [1, 77], [1, 105]]]]], ["loc", [null, [1, 0], [1, 107]]]], ["inline", "icon-button", [], ["class", "clear-input", "icon", "close", "action", ["subexpr", "action", ["clear"], [], ["loc", [null, [2, 54], [2, 70]]]]], ["loc", [null, [2, 0], [2, 72]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/components/inspector-panel", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 14, column: 28}, end: {line: 16, column: 28}},
                                moduleName: "portia-ui/templates/components/inspector-panel.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("                                ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "colored-badge", [], ["value", ["subexpr", "@mut", [["get", "annotation.name", ["loc", [null, [15, 54], [15, 69]]]]], [], []], "color", ["subexpr", "array-get", [["get", "annotationColors", ["loc", [null, [15, 87], [15, 103]]]], ["get", "annotation.orderedIndex", ["loc", [null, [15, 104], [15, 127]]]]], [], ["loc", [null, [15, 76], [15, 128]]]]], ["loc", [null, [15, 32], [15, 130]]]]],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 12, column: 24}, end: {line: 19, column: 24}},
                            moduleName: "portia-ui/templates/components/inspector-panel.hbs"
                        },
                        isEmpty: !1,
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("                            ");
                            e.appendChild(t, n);
                            var n = e.createElement("div"), r = e.createTextNode("\n");
                            e.appendChild(n, r);
                            var r = e.createComment("");
                            e.appendChild(n, r);
                            var r = e.createTextNode("                            ");
                            e.appendChild(n, r);
                            var r = e.createComment("");
                            e.appendChild(n, r);
                            var r = e.createTextNode("\n                            ");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = e.childAt(t, [1]), a = new Array(2);
                            return a[0] = e.createMorphAt(r, 1, 1), a[1] = e.createMorphAt(r, 3, 3), a
                        },
                        statements: [["block", "if", [["get", "annotation.name", ["loc", [null, [14, 34], [14, 49]]]]], [], 0, null, ["loc", [null, [14, 28], [16, 35]]]], ["inline", "icon-button", [], ["icon", "add", "action", ["subexpr", "action", ["addAnnotation", ["get", "attribute.attribute", ["loc", [null, [17, 84], [17, 103]]]]], [], ["loc", [null, [17, 60], [17, 104]]]], "bubbles", !1], ["loc", [null, [17, 28], [17, 120]]]]],
                        locals: ["annotation"],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 4, column: 8}, end: {line: 23, column: 8}},
                        moduleName: "portia-ui/templates/components/inspector-panel.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                        e.appendChild(t, n);
                        var n = e.createElement("tr"), r = e.createTextNode("\n                ");
                        e.appendChild(n, r);
                        var r = e.createElement("td"), a = e.createComment("");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("\n                ");
                        e.appendChild(n, r);
                        var r = e.createElement("td"), a = e.createTextNode("\n                    ");
                        e.appendChild(r, a);
                        var a = e.createElement("div"), l = e.createTextNode("\n                        ");
                        e.appendChild(a, l);
                        var l = e.createElement("div"), o = e.createTextNode("\n                            ");
                        e.appendChild(l, o);
                        var o = e.createElement("span");
                        e.setAttribute(o, "class", "value");
                        var i = e.createComment("");
                        e.appendChild(o, i), e.appendChild(l, o);
                        var o = e.createTextNode("\n                        ");
                        e.appendChild(l, o), e.appendChild(a, l);
                        var l = e.createTextNode("\n");
                        e.appendChild(a, l);
                        var l = e.createComment("");
                        e.appendChild(a, l);
                        var l = e.createTextNode("                    ");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createTextNode("\n                ");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("\n            ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [1]), a = e.childAt(r, [3, 1]), l = new Array(4);
                        return l[0] = e.createElementMorph(r), l[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), l[2] = e.createMorphAt(e.childAt(a, [1, 1]), 0, 0), l[3] = e.createMorphAt(a, 3, 3), l
                    },
                    statements: [["element", "action", ["changeAnnotationSource", ["get", "attribute.attribute", ["loc", [null, [5, 50], [5, 69]]]]], [], ["loc", [null, [5, 16], [5, 71]]]], ["content", "attribute.name", ["loc", [null, [6, 20], [6, 38]]]], ["content", "attribute.value", ["loc", [null, [10, 48], [10, 67]]]], ["block", "with", [["subexpr", "attribute-annotation", [["subexpr", "get", [["get", "sample.dataStructure.annotations", ["loc", [null, [12, 59], [12, 91]]]], ["subexpr", "guid", [["get", "inspectedElement", ["loc", [null, [12, 98], [12, 114]]]]], [], ["loc", [null, [12, 92], [12, 115]]]]], [], ["loc", [null, [12, 54], [12, 116]]]], ["get", "attribute.name", ["loc", [null, [12, 117], [12, 131]]]]], [], ["loc", [null, [12, 32], [12, 132]]]]], [], 0, null, ["loc", [null, [12, 24], [19, 33]]]]],
                    locals: ["attribute"],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["multiple-nodes"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 25, column: 0}},
                    moduleName: "portia-ui/templates/components/inspector-panel.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("div"), r = e.createComment("");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n    ");
                    e.appendChild(t, n);
                    var n = e.createElement("table"), r = e.createTextNode("\n");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(2);
                    return r[0] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r[1] = e.createMorphAt(e.childAt(t, [3]), 1, 1), r
                },
                statements: [["content", "elementPath", ["loc", [null, [2, 9], [2, 24]]]], ["block", "each", [["get", "attributes", ["loc", [null, [4, 16], [4, 26]]]]], [], 0, null, ["loc", [null, [4, 8], [23, 17]]]]],
                locals: [],
                templates: [e]
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 25, column: 0}, end: {line: 29, column: 0}},
                    moduleName: "portia-ui/templates/components/inspector-panel.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("p");
                    e.setAttribute(n, "class", "text-muted empty-notice");
                    var r = e.createTextNode("\n        No element selected\n    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function () {
                    return []
                }, statements: [], locals: [], templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 30, column: 0}},
                moduleName: "portia-ui/templates/components/inspector-panel.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["get", "inspectedElement", ["loc", [null, [1, 6], [1, 22]]]]], [], 0, 1, ["loc", [null, [1, 0], [29, 7]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/json-file-compare", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 4, column: 11}, end: {line: 6, column: 12}},
                                moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                            },
                            isEmpty: !1,
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "json-file-compare", [], ["json", ["subexpr", "@mut", [["get", "entry.json", ["loc", [null, [5, 41], [5, 51]]]]], [], []], "path", ["subexpr", "@mut", [["get", "entry.path", ["loc", [null, [5, 57], [5, 67]]]]], [], []], "update", "update", "multi", !0], ["loc", [null, [5, 16], [5, 96]]]]],
                            locals: ["entry"],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 7, column: 8}},
                            moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "each", [["get", "entries", ["loc", [null, [4, 19], [4, 26]]]]], [], 0, null, ["loc", [null, [4, 11], [6, 21]]]]],
                        locals: [],
                        templates: [e]
                    }
                }(), t = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 7, column: 8}, end: {line: 9, column: 8}},
                            moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createElement("span"), r = e.createComment("");
                            e.appendChild(n, r);
                            var r = e.createElement("span");
                            e.setAttribute(r, "class", "comma");
                            var a = e.createTextNode(",");
                            e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r
                        },
                        statements: [["content", "entry.value", ["loc", [null, [8, 18], [8, 33]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 5}, end: {line: 10, column: 4}},
                        moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                    },
                    isEmpty: !1,
                    arity: 2,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("\n");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("    ");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["block", "if", [["get", "entry.conflict", ["loc", [null, [3, 14], [3, 28]]]]], [], 0, 1, ["loc", [null, [3, 8], [9, 15]]]]],
                    locals: ["entry", "index"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 11, column: 0}},
                    moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    [");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("]\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["block", "each", [["get", "entries", ["loc", [null, [2, 13], [2, 20]]]]], [], 0, null, ["loc", [null, [2, 5], [10, 13]]]]],
                locals: [],
                templates: [e]
            }
        }(), t = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 13, column: 8}, end: {line: 19, column: 8}},
                                moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createElement("span");
                                e.setAttribute(n, "style", "color:#2d882d;font-weight:bold");
                                var r = e.createTextNode("RESOLVED");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createTextNode("\n            ");
                                e.appendChild(t, n);
                                var n = e.createElement("div");
                                e.setAttribute(n, "style", "margin:5px 0px 0px 40px;background:#AEA;"), e.setAttribute(n, "class", "conflict-option");
                                var r = e.createTextNode("\n                ");
                                e.appendChild(n, r);
                                var r = e.createElement("span");
                                e.setAttribute(r, "style", "font-weight:bold;color:#2d882d;margin:5px");
                                var a = e.createTextNode(" [CHANGE SELECTION] ");
                                e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createTextNode("\n                ");
                                e.appendChild(n, r);
                                var r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createTextNode(",\n            ");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = e.childAt(t, [3]), a = new Array(2);
                                return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(r, 3, 3), a
                            },
                            statements: [["element", "action", ["reset"], [], ["loc", [null, [15, 17], [15, 35]]]], ["content", "resolvedRepr", ["loc", [null, [17, 16], [17, 32]]]]],
                            locals: [],
                            templates: []
                        }
                    }(), t = function () {
                        var e = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 26, column: 28}, end: {line: 28, column: 28}},
                                        moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                            ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("span");
                                        e.setAttribute(n, "class", "fa fa-icon fa-check green-label"), e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = e.childAt(t, [1]), a = new Array(1);
                                        return a[0] = e.createElementMorph(r), a
                                    },
                                    statements: [["element", "action", ["conflictOptionSelected", ["get", "value.key", ["loc", [null, [27, 68], [27, 77]]]]], [], ["loc", [null, [27, 34], [27, 79]]]]],
                                    locals: [],
                                    templates: []
                                }
                            }(), t = function () {
                                var e = function () {
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 30, column: 32},
                                                end: {line: 32, column: 32}
                                            },
                                            moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                                    ");
                                            e.appendChild(t, n);
                                            var n = e.createElement("span");
                                            e.setAttribute(n, "class", "fa fa-icon fa-times red-label"), e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = e.childAt(t, [1]), a = new Array(1);
                                            return a[0] = e.createElementMorph(r), a
                                        },
                                        statements: [["element", "action", ["conflictOptionRejected", ["get", "value.key", ["loc", [null, [31, 76], [31, 85]]]]], [], ["loc", [null, [31, 42], [31, 87]]]]],
                                        locals: [],
                                        templates: []
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 29, column: 28}, end: {line: 33, column: 28}},
                                        moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [["block", "unless", [["get", "value.rejected", ["loc", [null, [30, 42], [30, 56]]]]], [], 0, null, ["loc", [null, [30, 32], [32, 43]]]]],
                                    locals: [],
                                    templates: [e]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 22, column: 16}, end: {line: 39, column: 16}},
                                    moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                    ");
                                    e.appendChild(t, n);
                                    var n = e.createElement("div"), r = e.createTextNode("\n                        ");
                                    e.appendChild(n, r);
                                    var r = e.createElement("span");
                                    e.setAttribute(r, "style", "font-weight:bold");
                                    var a = e.createTextNode("\n                            ");
                                    e.appendChild(r, a);
                                    var a = e.createComment("");
                                    e.appendChild(r, a);
                                    var a = e.createTextNode(":\n");
                                    e.appendChild(r, a);
                                    var a = e.createComment("");
                                    e.appendChild(r, a);
                                    var a = e.createComment("");
                                    e.appendChild(r, a);
                                    var a = e.createTextNode("                        ");
                                    e.appendChild(r, a), e.appendChild(n, r);
                                    var r = e.createTextNode("\n                        ");
                                    e.appendChild(n, r);
                                    var r = e.createElement("span");
                                    e.setAttribute(r, "style", "word-break:break-word");
                                    var a = e.createTextNode("\n                            ");
                                    e.appendChild(r, a);
                                    var a = e.createComment("");
                                    e.appendChild(r, a);
                                    var a = e.createTextNode("\n                        ");
                                    e.appendChild(r, a), e.appendChild(n, r);
                                    var r = e.createTextNode("\n                    ");
                                    e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = e.childAt(t, [1]), a = e.childAt(r, [1]), l = new Array(6);
                                    return l[0] = e.createAttrMorph(r, "class"), l[1] = e.createAttrMorph(a, "class"), l[2] = e.createMorphAt(a, 1, 1), l[3] = e.createMorphAt(a, 3, 3), l[4] = e.createMorphAt(a, 4, 4), l[5] = e.createMorphAt(e.childAt(r, [3]), 1, 1), l
                                },
                                statements: [["attribute", "class", ["concat", ["conflict-option ", ["get", "value.state", ["loc", [null, [23, 50], [23, 61]]]]]]], ["attribute", "class", ["concat", [["subexpr", "if", [["get", "value.accepted", ["loc", [null, [24, 67], [24, 81]]]], "green-label", ""], [], ["loc", [null, [24, 62], [24, 100]]]]]]], ["content", "value.label", ["loc", [null, [25, 28], [25, 43]]]], ["block", "unless", [["get", "value.accepted", ["loc", [null, [26, 38], [26, 52]]]]], [], 0, null, ["loc", [null, [26, 28], [28, 39]]]], ["block", "if", [["get", "multi", ["loc", [null, [29, 34], [29, 39]]]]], [], 1, null, ["loc", [null, [29, 28], [33, 35]]]], ["content", "value.value", ["loc", [null, [36, 28], [36, 43]]]]],
                                locals: ["value"],
                                templates: [e, t]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 19, column: 8}, end: {line: 41, column: 8}},
                                moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createElement("span");
                                e.setAttribute(n, "style", "color:#ff3939;font-weight:bold");
                                var r = e.createTextNode("CONFLICT");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createTextNode("\n            ");
                                e.appendChild(t, n);
                                var n = e.createElement("div");
                                e.setAttribute(n, "style", "margin-left:40px;");
                                var r = e.createTextNode("\n");
                                e.appendChild(n, r);
                                var r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createTextNode("            ");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(e.childAt(t, [3]), 1, 1), r
                            },
                            statements: [["block", "each", [["get", "conflictValues", ["loc", [null, [22, 24], [22, 38]]]]], [], 0, null, ["loc", [null, [22, 16], [39, 25]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 12, column: 4}, end: {line: 42, column: 4}},
                            moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["get", "isResolved", ["loc", [null, [13, 14], [13, 24]]]]], [], 0, 1, ["loc", [null, [13, 8], [41, 15]]]]],
                        locals: [],
                        templates: [e, t]
                    }
                }(), t = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 44, column: 12}, end: {line: 48, column: 12}},
                                moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                            },
                            isEmpty: !1,
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                e.appendChild(t, n);
                                var n = e.createElement("div");
                                e.setAttribute(n, "style", "margin:5px 5px 0px 20px;");
                                var r = e.createTextNode("\n                    ");
                                e.appendChild(n, r);
                                var r = e.createElement("span");
                                e.setAttribute(r, "style", "font-weight:bold");
                                var a = e.createComment("");
                                e.appendChild(r, a);
                                var a = e.createTextNode(":");
                                e.appendChild(r, a), e.appendChild(n, r);
                                var r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createTextNode("\n                ");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = e.childAt(t, [1]), a = new Array(2);
                                return a[0] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a[1] = e.createMorphAt(r, 2, 2), a
                            },
                            statements: [["content", "entry.key", ["loc", [null, [46, 51], [46, 64]]]], ["inline", "json-file-compare", [], ["json", ["subexpr", "@mut", [["get", "entry.json", ["loc", [null, [46, 97], [46, 107]]]]], [], []], "path", ["subexpr", "@mut", [["get", "entry.path", ["loc", [null, [46, 113], [46, 123]]]]], [], []], "update", "update"], ["loc", [null, [46, 72], [46, 141]]]]],
                            locals: ["entry"],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 42, column: 4}, end: {line: 50, column: 4}},
                            moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                            e.appendChild(t, n);
                            var n = e.createElement("div"), r = e.createTextNode("\n");
                            e.appendChild(n, r);
                            var r = e.createComment("");
                            e.appendChild(n, r);
                            var r = e.createTextNode("        ");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [1]), 1, 1), r
                        },
                        statements: [["block", "each", [["get", "entries", ["loc", [null, [44, 20], [44, 27]]]]], [], 0, null, ["loc", [null, [44, 12], [48, 21]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 11, column: 0}, end: {line: 51, column: 0}},
                        moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["get", "isConflict", ["loc", [null, [12, 10], [12, 20]]]]], [], 0, 1, ["loc", [null, [12, 4], [50, 11]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }(), t = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 51, column: 0}, end: {line: 53, column: 0}},
                        moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                    }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    }, buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    }, statements: [["content", "value", ["loc", [null, [52, 4], [52, 13]]]]], locals: [], templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 11, column: 0}, end: {line: 53, column: 0}},
                    moduleName: "portia-ui/templates/components/json-file-compare.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["get", "isObject", ["loc", [null, [11, 10], [11, 18]]]]], [], 0, 1, ["loc", [null, [11, 0], [53, 0]]]]],
                locals: [],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 54, column: 0}},
                moduleName: "portia-ui/templates/components/json-file-compare.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["get", "isArray", ["loc", [null, [1, 6], [1, 13]]]]], [], 0, 1, ["loc", [null, [1, 0], [53, 7]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/link-crawling-options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 3, column: 4}, end: {line: 5, column: 4}},
                    moduleName: "portia-ui/templates/components/link-crawling-options.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "text-muted");
                    var r = e.createTextNode("Following all encountered links within the same domains");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function () {
                    return []
                }, statements: [], locals: [], templates: []
            }
        }(), t = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 5, column: 4}, end: {line: 7, column: 4}},
                        moduleName: "portia-ui/templates/components/link-crawling-options.hbs"
                    }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createElement("div");
                        e.setAttribute(n, "class", "text-muted");
                        var r = e.createTextNode("Not following any links");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    }, buildRenderNodes: function () {
                        return []
                    }, statements: [], locals: [], templates: []
                }
            }(), t = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 7, column: 4}, end: {line: 12, column: 4}},
                            moduleName: "portia-ui/templates/components/link-crawling-options.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                            e.appendChild(t, n);
                            var n = e.createElement("div"),
                                r = e.createTextNode("Follow links that match these patterns");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n        ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n        ");
                            e.appendChild(t, n);
                            var n = e.createElement("div"),
                                r = e.createTextNode("Exclude links that match these patterns");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n        ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 3, 3, n), r[1] = e.createMorphAt(t, 7, 7, n), r
                        },
                        statements: [["inline", "regex-pattern-list", [], ["list", ["subexpr", "@mut", [["get", "spider.followPatterns", ["loc", [null, [9, 34], [9, 55]]]]], [], []], "onChange", ["subexpr", "action", ["save"], [], ["loc", [null, [9, 65], [9, 80]]]]], ["loc", [null, [9, 8], [9, 82]]]], ["inline", "regex-pattern-list", [], ["list", ["subexpr", "@mut", [["get", "spider.excludePatterns", ["loc", [null, [11, 34], [11, 56]]]]], [], []], "onChange", ["subexpr", "action", ["save"], [], ["loc", [null, [11, 66], [11, 81]]]]], ["loc", [null, [11, 8], [11, 83]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 7, column: 4}, end: {line: 12, column: 4}},
                        moduleName: "portia-ui/templates/components/link-crawling-options.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "spider.linksToFollow", ["loc", [null, [7, 18], [7, 38]]]], "patterns"], [], ["loc", [null, [7, 14], [7, 50]]]]], [], 0, null, ["loc", [null, [7, 4], [12, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 5, column: 4}, end: {line: 12, column: 4}},
                    moduleName: "portia-ui/templates/components/link-crawling-options.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "spider.linksToFollow", ["loc", [null, [5, 18], [5, 38]]]], "none"], [], ["loc", [null, [5, 14], [5, 46]]]]], [], 0, 1, ["loc", [null, [5, 4], [12, 4]]]]],
                locals: [],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 20, column: 0}},
                moduleName: "portia-ui/templates/components/link-crawling-options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("h3"), r = e.createTextNode("Crawling rules");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createElement("form"), r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "checkbox");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("label"), l = e.createTextNode("\n            ");
                e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createTextNode(' Respect the "nofollow" attribute\n        ');
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [2]), a = new Array(3);
                return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(r, 1, 1), a[2] = e.createMorphAt(e.childAt(r, [3, 1]), 1, 1), a
            },
            statements: [["element", "action", ["save"], ["on", "change"], ["loc", [null, [2, 6], [2, 35]]]], ["block", "if", [["subexpr", "eq", [["get", "spider.linksToFollow", ["loc", [null, [3, 14], [3, 34]]]], "all"], [], ["loc", [null, [3, 10], [3, 41]]]]], [], 0, 1, ["loc", [null, [3, 4], [12, 11]]]], ["inline", "input", [], ["type", "checkbox", "name", "respectNoFollow", "checked", ["subexpr", "mut", [["get", "spider.respectNoFollow", ["loc", [null, [16, 72], [16, 94]]]]], [], ["loc", [null, [16, 67], [16, 95]]]], "disabled", ["subexpr", "eq", [["get", "spider.linksToFollow", ["loc", [null, [16, 109], [16, 129]]]], "none"], [], ["loc", [null, [16, 105], [16, 137]]]]], ["loc", [null, [16, 12], [16, 139]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/list-item-add-annotation-menu", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-add-annotation-menu.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 2, 2, n), r
                    },
                    statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", "add"], ["loc", [null, [3, 8], [3, 50]]]], ["content", "value", ["loc", [null, [3, 50], [3, 59]]]]],
                    locals: ["value"],
                    templates: []
                }
            }(), t = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 8}, end: {line: 8, column: 8}},
                            moduleName: "portia-ui/templates/components/list-item-add-annotation-menu.hbs"
                        },
                        isEmpty: !1,
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 2, 2, n), r
                        },
                        statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", "add"], ["loc", [null, [7, 12], [7, 54]]]], ["content", "value", ["loc", [null, [7, 54], [7, 63]]]]],
                        locals: ["value"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 5, column: 4}, end: {line: 9, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-add-annotation-menu.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "options.item", [], ["value", "Add nested item", "action", ["subexpr", "chain-actions", [["subexpr", "action", ["addNestedItem"], [], ["loc", [null, [6, 70], [6, 94]]]], ["get", "options.closeMenu", ["loc", [null, [6, 95], [6, 112]]]]], [], ["loc", [null, [6, 55], [6, 113]]]]], 0, null, ["loc", [null, [6, 8], [8, 25]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 10, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-add-annotation-menu.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(2);
                    return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "options.item", [], ["value", "Add annotation", "action", ["subexpr", "chain-actions", [["subexpr", "action", ["addAnnotation"], [], ["loc", [null, [2, 65], [2, 89]]]], ["get", "options.closeMenu", ["loc", [null, [2, 90], [2, 107]]]]], [], ["loc", [null, [2, 50], [2, 108]]]]], 0, null, ["loc", [null, [2, 4], [4, 21]]]], ["block", "if", [["get", "allowNesting", ["loc", [null, [5, 10], [5, 22]]]]], [], 1, null, ["loc", [null, [5, 4], [9, 11]]]]],
                locals: ["options"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 11, column: 0}},
                moduleName: "portia-ui/templates/components/list-item-add-annotation-menu.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "list-item-icon-menu", [], ["icon", "add-dropdown"], 0, null, ["loc", [null, [1, 0], [10, 24]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/list-item-annotation-field", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-annotation-field.hbs"
                    }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        Type to change the field\n");
                        return e.appendChild(t, n), t
                    }, buildRenderNodes: function () {
                        return []
                    }, statements: [], locals: [], templates: []
                }
            }(), t = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 4, column: 4}, end: {line: 6, column: 4}},
                            moduleName: "portia-ui/templates/components/list-item-annotation-field.hbs"
                        }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(),
                                n = e.createTextNode("        Select an existing field\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: [], templates: []
                    }
                }(), t = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 6, column: 4}, end: {line: 8, column: 4}},
                                moduleName: "portia-ui/templates/components/list-item-annotation-field.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n    ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(2);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 2, 2, n), r
                            },
                            statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", ["subexpr", "@mut", [["get", "options.choice.type", ["loc", [null, [7, 43], [7, 62]]]]], [], []]], ["loc", [null, [7, 8], [7, 64]]]], ["content", "options.choice.name", ["loc", [null, [7, 64], [7, 87]]]]],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 4}, end: {line: 8, column: 4}},
                            moduleName: "portia-ui/templates/components/list-item-annotation-field.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [6, 18], [6, 33]]]], "choice"], [], ["loc", [null, [6, 14], [6, 43]]]]], [], 0, null, ["loc", [null, [6, 4], [8, 4]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 4, column: 4}, end: {line: 8, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-annotation-field.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [4, 18], [4, 33]]]], "choices-header"], [], ["loc", [null, [4, 14], [4, 51]]]]], [], 0, 1, ["loc", [null, [4, 4], [8, 4]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 9, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-annotation-field.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [2, 14], [2, 29]]]], "change-header"], [], ["loc", [null, [2, 10], [2, 46]]]]], [], 0, 1, ["loc", [null, [2, 4], [8, 11]]]]],
                locals: ["options"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 10, column: 0}},
                moduleName: "portia-ui/templates/components/list-item-annotation-field.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "list-item-relation-manager", [], ["value", ["subexpr", "mut", [["get", "annotation.field", ["loc", [null, [1, 41], [1, 57]]]]], [], ["loc", [null, [1, 36], [1, 58]]]], "choices", ["subexpr", "@mut", [["get", "annotation.parent.schema.fields", ["loc", [null, [1, 67], [1, 98]]]]], [], []], "selecting", ["subexpr", "mut", [["get", "selecting", ["loc", [null, [1, 114], [1, 123]]]]], [], ["loc", [null, [1, 109], [1, 124]]]], "onChange", ["subexpr", "action", ["changeField"], [], ["loc", [null, [1, 134], [1, 156]]]], "validate", ["subexpr", "action", ["validateFieldName"], [], ["loc", [null, [1, 166], [1, 194]]]], "create", ["subexpr", "action", ["addField"], [], ["loc", [null, [1, 202], [1, 221]]]]], 0, null, ["loc", [null, [1, 0], [9, 31]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/list-item-badge", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 3, column: 37}, end: {line: 3, column: 62}},
                    moduleName: "portia-ui/templates/components/list-item-badge.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                }, statements: [["content", "yield", ["loc", [null, [3, 53], [3, 62]]]]], locals: [], templates: []
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 3, column: 62}, end: {line: 3, column: 79}},
                    moduleName: "portia-ui/templates/components/list-item-badge.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                }, statements: [["content", "value", ["loc", [null, [3, 70], [3, 79]]]]], locals: [], templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 6, column: 0}},
                moduleName: "portia-ui/templates/components/list-item-badge.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("span");
                e.setAttribute(n, "class", "list-item-badge");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("span");
                e.setAttribute(r, "class", "badge");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("span");
                e.setAttribute(a, "class", "badge-centered");
                var l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0, 1]), a = new Array(2);
                return a[0] = e.createAttrMorph(r, "style"), a[1] = e.createMorphAt(e.childAt(r, [1]), 0, 0), a
            },
            statements: [["attribute", "style", ["get", "badgeStyle", ["loc", [null, [2, 32], [2, 42]]]]], ["block", "if", [["get", "hasBlock", ["loc", [null, [3, 43], [3, 51]]]]], [], 0, 1, ["loc", [null, [3, 37], [3, 86]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/list-item-combo", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 5, column: 8}},
                            moduleName: "portia-ui/templates/components/list-item-combo.hbs"
                        },
                        isEmpty: !1,
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["inline", "yield", [["get", "options", ["loc", [null, [4, 20], [4, 27]]]]], [], ["loc", [null, [4, 12], [4, 29]]]]],
                        locals: ["options"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 6, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-combo.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "combo-box", [], ["choices", ["subexpr", "@mut", [["get", "choices", ["loc", [null, [3, 29], [3, 36]]]]], [], []], "value", ["subexpr", "mut", [["get", "value", ["loc", [null, [3, 48], [3, 53]]]]], [], ["loc", [null, [3, 43], [3, 54]]]], "valueAttribute", ["subexpr", "@mut", [["get", "valueAttribute", ["loc", [null, [3, 70], [3, 84]]]]], [], []], "open", ["subexpr", "mut", [["get", "selecting", ["loc", [null, [3, 95], [3, 104]]]]], [], ["loc", [null, [3, 90], [3, 105]]]], "orderItemsForSearch", ["subexpr", "@mut", [["get", "orderItemsForSearch", ["loc", [null, [3, 126], [3, 145]]]]], [], []], "valuesEqual", ["subexpr", "@mut", [["get", "valuesEqual", ["loc", [null, [3, 158], [3, 169]]]]], [], []], "onChange", ["subexpr", "@mut", [["get", "onChange", ["loc", [null, [3, 179], [3, 187]]]]], [], []], "autoSelect", ["subexpr", "@mut", [["get", "autoSelect", ["loc", [null, [3, 199], [3, 209]]]]], [], []], "inputClass", ["subexpr", "concat", ["input-list-item ", ["get", "inputClass", ["loc", [null, [3, 248], [3, 258]]]]], [], ["loc", [null, [3, 221], [3, 259]]]], "menuClass", ["subexpr", "@mut", [["get", "menuClass", ["loc", [null, [3, 270], [3, 279]]]]], [], []], "menuAlign", ["subexpr", "@mut", [["get", "menuAlign", ["loc", [null, [3, 290], [3, 299]]]]], [], []], "menuContainer", ["subexpr", "@mut", [["get", "menuContainer", ["loc", [null, [3, 314], [3, 327]]]]], [], []]], 0, null, ["loc", [null, [3, 8], [5, 22]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), t = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 6, column: 4}, end: {line: 8, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-combo.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "combo-box", [], ["choices", ["subexpr", "@mut", [["get", "choices", ["loc", [null, [7, 28], [7, 35]]]]], [], []], "value", ["subexpr", "mut", [["get", "value", ["loc", [null, [7, 47], [7, 52]]]]], [], ["loc", [null, [7, 42], [7, 53]]]], "valueAttribute", ["subexpr", "@mut", [["get", "valueAttribute", ["loc", [null, [7, 69], [7, 83]]]]], [], []], "open", ["subexpr", "mut", [["get", "selecting", ["loc", [null, [7, 94], [7, 103]]]]], [], ["loc", [null, [7, 89], [7, 104]]]], "orderItemsForSearch", ["subexpr", "@mut", [["get", "orderItemsForSearch", ["loc", [null, [7, 125], [7, 144]]]]], [], []], "valuesEqual", ["subexpr", "@mut", [["get", "valuesEqual", ["loc", [null, [7, 157], [7, 168]]]]], [], []], "onChange", ["subexpr", "@mut", [["get", "onChange", ["loc", [null, [7, 178], [7, 186]]]]], [], []], "autoSelect", ["subexpr", "@mut", [["get", "autoSelect", ["loc", [null, [7, 198], [7, 208]]]]], [], []], "inputClass", ["subexpr", "concat", ["input-list-item ", ["get", "inputClass", ["loc", [null, [7, 247], [7, 257]]]]], [], ["loc", [null, [7, 220], [7, 258]]]], "menuClass", ["subexpr", "@mut", [["get", "menuClass", ["loc", [null, [7, 269], [7, 278]]]]], [], []], "menuAlign", ["subexpr", "@mut", [["get", "menuAlign", ["loc", [null, [7, 289], [7, 298]]]]], [], []], "menuContainer", ["subexpr", "@mut", [["get", "menuContainer", ["loc", [null, [7, 313], [7, 326]]]]], [], []]], ["loc", [null, [7, 8], [7, 328]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 9, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-combo.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["get", "hasBlock", ["loc", [null, [2, 10], [2, 18]]]]], [], 0, 1, ["loc", [null, [2, 4], [8, 11]]]]],
                locals: [],
                templates: [e, t]
            }
        }(), t = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 11, column: 8}, end: {line: 13, column: 8}},
                        moduleName: "portia-ui/templates/components/list-item-combo.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "get", [["get", "value", ["loc", [null, [12, 18], [12, 23]]]], ["get", "valueAttribute", ["loc", [null, [12, 24], [12, 38]]]]], [], ["loc", [null, [12, 12], [12, 40]]]]],
                    locals: [],
                    templates: []
                }
            }(), t = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 13, column: 8}, end: {line: 15, column: 8}},
                        moduleName: "portia-ui/templates/components/list-item-combo.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["content", "value", ["loc", [null, [14, 12], [14, 21]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 9, column: 0}, end: {line: 20, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-combo.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("span"), r = e.createTextNode("\n");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n    ");
                    e.appendChild(t, n);
                    var n = e.createElement("a"), r = e.createTextNode("\n        ");
                    e.appendChild(n, r);
                    var r = e.createElement("span");
                    e.setAttribute(r, "class", "caret"), e.appendChild(n, r);
                    var r = e.createTextNode("\n    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = e.childAt(t, [3]), a = new Array(2);
                    return a[0] = e.createMorphAt(e.childAt(t, [1]), 1, 1), a[1] = e.createElementMorph(r), a
                },
                statements: [["block", "if", [["get", "valueAttribute", ["loc", [null, [11, 14], [11, 28]]]]], [], 0, 1, ["loc", [null, [11, 8], [15, 15]]]], ["element", "action", ["startSelecting"], [], ["loc", [null, [17, 7], [17, 34]]]]],
                locals: [],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 21, column: 0}},
                moduleName: "portia-ui/templates/components/list-item-combo.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["get", "selecting", ["loc", [null, [1, 6], [1, 15]]]]], [], 0, 1, ["loc", [null, [1, 0], [20, 7]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/list-item-editable", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 3, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-editable.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "buffered-input", [], ["class", "input-list-item", "value", ["subexpr", "mut", [["get", "value", ["loc", [null, [2, 56], [2, 61]]]]], [], ["loc", [null, [2, 51], [2, 62]]]], "focused", ["subexpr", "@mut", [["get", "editing", ["loc", [null, [2, 71], [2, 78]]]]], [], []], "autoSelect", !0, "spellcheck", ["subexpr", "@mut", [["get", "spellcheck", ["loc", [null, [2, 106], [2, 116]]]]], [], []], "onChange", ["subexpr", "@mut", [["get", "onChange", ["loc", [null, [2, 126], [2, 134]]]]], [], []], "validate", ["subexpr", "@mut", [["get", "validate", ["loc", [null, [2, 144], [2, 152]]]]], [], []], "autofocus", "autofocus"], ["loc", [null, [2, 4], [2, 176]]]]],
                locals: [],
                templates: []
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 3, column: 0}, end: {line: 6, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-editable.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("span"), r = e.createComment("");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n    ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(2);
                    return r[0] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r[1] = e.createMorphAt(t, 3, 3, n), r
                },
                statements: [["content", "value", ["loc", [null, [4, 10], [4, 19]]]], ["inline", "icon-button", [], ["icon", "edit", "action", ["subexpr", "action", ["startEditing"], [], ["loc", [null, [5, 37], [5, 60]]]], "bubbles", !1], ["loc", [null, [5, 4], [5, 76]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 7, column: 0}},
                moduleName: "portia-ui/templates/components/list-item-editable.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["get", "editing", ["loc", [null, [1, 6], [1, 13]]]]], [], 0, 1, ["loc", [null, [1, 0], [6, 7]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/list-item-field-type", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 5, column: 8}},
                            moduleName: "portia-ui/templates/components/list-item-field-type.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["content", "yield", ["loc", [null, [4, 12], [4, 21]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 6, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-field-type.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "select.header", [], [], 0, null, ["loc", [null, [3, 8], [5, 26]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), t = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 8, column: 8}, end: {line: 10, column: 8}},
                            moduleName: "portia-ui/templates/components/list-item-field-type.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 2, 2, n), r
                        },
                        statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", ["subexpr", "@mut", [["get", "type", ["loc", [null, [9, 47], [9, 51]]]]], [], []]], ["loc", [null, [9, 12], [9, 53]]]], ["content", "type", ["loc", [null, [9, 53], [9, 61]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 7, column: 4}, end: {line: 11, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-field-type.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "select.item", [], ["value", ["subexpr", "@mut", [["get", "type", ["loc", [null, [8, 29], [8, 33]]]]], [], []], "action", ["subexpr", "action", [["get", "select.setValueAndClose", ["loc", [null, [8, 49], [8, 72]]]], ["get", "type", ["loc", [null, [8, 73], [8, 77]]]]], [], ["loc", [null, [8, 41], [8, 78]]]]], 0, null, ["loc", [null, [8, 8], [10, 24]]]]],
                    locals: ["type"],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 12, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-field-type.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(2);
                    return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["get", "hasBlock", ["loc", [null, [2, 10], [2, 18]]]]], [], 0, null, ["loc", [null, [2, 4], [6, 11]]]], ["block", "each", [["get", "types", ["loc", [null, [7, 12], [7, 17]]]]], [], 1, null, ["loc", [null, [7, 4], [11, 13]]]]],
                locals: ["select"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 13, column: 0}},
                moduleName: "portia-ui/templates/components/list-item-field-type.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "list-item-selectable", [], ["value", ["subexpr", "mut", [["get", "field.type", ["loc", [null, [1, 35], [1, 45]]]]], [], ["loc", [null, [1, 30], [1, 46]]]], "onChange", ["subexpr", "action", ["saveField"], [], ["loc", [null, [1, 56], [1, 76]]]], "menuContainer", "body", "menuAlign", "right"], 0, null, ["loc", [null, [1, 0], [12, 25]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/list-item-icon-menu", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-icon-menu.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "list-item-icon", [], ["onClick", ["subexpr", "action", ["clickIcon"], [], ["loc", [null, [3, 33], [3, 53]]]], "icon", ["subexpr", "@mut", [["get", "icon", ["loc", [null, [3, 59], [3, 63]]]]], [], []], "action", ["subexpr", "@mut", [["get", "options.toggleMenu", ["loc", [null, [3, 71], [3, 89]]]]], [], []], "tabindex", -1], ["loc", [null, [3, 8], [3, 103]]]]],
                    locals: [],
                    templates: []
                }
            }(), t = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 4, column: 4}, end: {line: 6, column: 4}},
                            moduleName: "portia-ui/templates/components/list-item-icon-menu.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["inline", "yield", [["get", "options", ["loc", [null, [5, 16], [5, 23]]]]], [], ["loc", [null, [5, 8], [5, 25]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 4, column: 4}, end: {line: 6, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-icon-menu.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [4, 18], [4, 33]]]], "menu"], [], ["loc", [null, [4, 14], [4, 41]]]]], [], 0, null, ["loc", [null, [4, 4], [6, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 7, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-icon-menu.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [2, 14], [2, 29]]]], "widget"], [], ["loc", [null, [2, 10], [2, 39]]]]], [], 0, 1, ["loc", [null, [2, 4], [6, 11]]]]],
                locals: ["options"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 8, column: 0}},
                moduleName: "portia-ui/templates/components/list-item-icon-menu.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "dropdown-widget", [], ["class", "list-item-icon", "menuContainer", "body", "menuAlign", "right"], 0, null, ["loc", [null, [1, 0], [7, 20]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/list-item-icon", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["empty-body"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 1, column: 0}},
                moduleName: "portia-ui/templates/components/list-item-icon.hbs"
            }, isEmpty: !0, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                return e.createDocumentFragment()
            }, buildRenderNodes: function () {
                return []
            }, statements: [], locals: [], templates: []
        }
    }())
}), define("portia-ui/templates/components/list-item-item-schema", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-item-schema.hbs"
                    }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("        Type to change the data format\n");
                        return e.appendChild(t, n), t
                    }, buildRenderNodes: function () {
                        return []
                    }, statements: [], locals: [], templates: []
                }
            }(), t = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 4, column: 4}, end: {line: 6, column: 4}},
                            moduleName: "portia-ui/templates/components/list-item-item-schema.hbs"
                        }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(),
                                n = e.createTextNode("        Select an existing data format\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: [], templates: []
                    }
                }(), t = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 6, column: 4}, end: {line: 8, column: 4}},
                                moduleName: "portia-ui/templates/components/list-item-item-schema.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n    ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(2);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 2, 2, n), r
                            },
                            statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", "schema"], ["loc", [null, [7, 8], [7, 53]]]], ["content", "options.choice.name", ["loc", [null, [7, 53], [7, 76]]]]],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 4}, end: {line: 8, column: 4}},
                            moduleName: "portia-ui/templates/components/list-item-item-schema.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [6, 18], [6, 33]]]], "choice"], [], ["loc", [null, [6, 14], [6, 43]]]]], [], 0, null, ["loc", [null, [6, 4], [8, 4]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 4, column: 4}, end: {line: 8, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-item-schema.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1)
                        ;
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [4, 18], [4, 33]]]], "choices-header"], [], ["loc", [null, [4, 14], [4, 51]]]]], [], 0, 1, ["loc", [null, [4, 4], [8, 4]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 9, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-item-schema.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [2, 14], [2, 29]]]], "change-header"], [], ["loc", [null, [2, 10], [2, 46]]]]], [], 0, 1, ["loc", [null, [2, 4], [8, 11]]]]],
                locals: ["options"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 10, column: 0}},
                moduleName: "portia-ui/templates/components/list-item-item-schema.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "list-item-relation-manager", [], ["value", ["subexpr", "mut", [["get", "item.schema", ["loc", [null, [1, 41], [1, 52]]]]], [], ["loc", [null, [1, 36], [1, 53]]]], "choices", ["subexpr", "@mut", [["get", "item.ownerSample.spider.project.schemas", ["loc", [null, [1, 62], [1, 101]]]]], [], []], "selecting", ["subexpr", "mut", [["get", "selecting", ["loc", [null, [1, 117], [1, 126]]]]], [], ["loc", [null, [1, 112], [1, 127]]]], "onChange", ["subexpr", "action", ["changeSchema"], [], ["loc", [null, [1, 137], [1, 160]]]], "create", ["subexpr", "action", ["addSchema"], [], ["loc", [null, [1, 168], [1, 188]]]]], 0, null, ["loc", [null, [1, 0], [9, 31]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/list-item-link-crawling", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-link-crawling.hbs"
                    }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("        Change how links are crawled\n");
                        return e.appendChild(t, n), t
                    }, buildRenderNodes: function () {
                        return []
                    }, statements: [], locals: [], templates: []
                }
            }(), t = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 8}, end: {line: 8, column: 8}},
                            moduleName: "portia-ui/templates/components/list-item-link-crawling.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["content", "option.label", ["loc", [null, [7, 12], [7, 28]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 5, column: 4}, end: {line: 9, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-link-crawling.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "select.item", [], ["value", ["subexpr", "@mut", [["get", "option", ["loc", [null, [6, 29], [6, 35]]]]], [], []], "action", ["subexpr", "action", [["get", "select.setValueAndClose", ["loc", [null, [6, 51], [6, 74]]]], ["get", "option", ["loc", [null, [6, 75], [6, 81]]]]], [], ["loc", [null, [6, 43], [6, 82]]]]], 0, null, ["loc", [null, [6, 8], [8, 24]]]]],
                    locals: ["option"],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 10, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-link-crawling.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(2);
                    return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "select.header", [], [], 0, null, ["loc", [null, [2, 4], [4, 22]]]], ["block", "each", [["get", "followPatternOptions", ["loc", [null, [5, 12], [5, 32]]]]], [], 1, null, ["loc", [null, [5, 4], [9, 13]]]]],
                locals: ["select"],
                templates: [e, t]
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 11, column: 0}, end: {line: 13, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-link-crawling.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["content", "linksToFollow.description", ["loc", [null, [12, 4], [12, 33]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 14, column: 0}},
                moduleName: "portia-ui/templates/components/list-item-link-crawling.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "list-item-selectable", [], ["value", ["subexpr", "mut", [["get", "linksToFollow", ["loc", [null, [1, 35], [1, 48]]]]], [], ["loc", [null, [1, 30], [1, 49]]]], "valueAttribute", "label", "onChange", ["subexpr", "action", ["saveSpider"], [], ["loc", [null, [1, 82], [1, 103]]]], "menuContainer", "body", "menuAlign", "left"], 0, null, ["loc", [null, [1, 0], [10, 25]]]], ["block", "help-icon", [], [], 1, null, ["loc", [null, [11, 0], [13, 14]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/list-item-relation-manager", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-relation-manager.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "yield", [["subexpr", "hash", [], ["section", "change-header"], ["loc", [null, [3, 16], [3, 46]]]]], [], ["loc", [null, [3, 8], [3, 48]]]]],
                    locals: [],
                    templates: []
                }
            }(), t = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 5, column: 4}, end: {line: 7, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-relation-manager.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("Rename to “");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("”\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r
                    },
                    statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", "edit"], ["loc", [null, [6, 8], [6, 51]]]], ["content", "combo.query", ["loc", [null, [6, 62], [6, 77]]]]],
                    locals: [],
                    templates: []
                }
            }(), n = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 8, column: 4}, end: {line: 10, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-relation-manager.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("Add “");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("”\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(2);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r
                    },
                    statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", "add"], ["loc", [null, [9, 8], [9, 50]]]], ["content", "combo.query", ["loc", [null, [9, 55], [9, 70]]]]],
                    locals: [],
                    templates: []
                }
            }(), r = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 14, column: 4}, end: {line: 16, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-relation-manager.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "yield", [["subexpr", "hash", [], ["section", "choices-header"], ["loc", [null, [15, 16], [15, 47]]]]], [], ["loc", [null, [15, 8], [15, 49]]]]],
                    locals: [],
                    templates: []
                }
            }(), a = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 18, column: 8}, end: {line: 20, column: 8}},
                            moduleName: "portia-ui/templates/components/list-item-relation-manager.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["inline", "yield", [["subexpr", "hash", [], ["section", "choice", "choice", ["get", "choice", ["loc", [null, [19, 50], [19, 56]]]]], ["loc", [null, [19, 20], [19, 57]]]]], [], ["loc", [null, [19, 12], [19, 59]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 17, column: 4}, end: {line: 21, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-relation-manager.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "combo.item", [], ["value", ["subexpr", "@mut", [["get", "choice", ["loc", [null, [18, 28], [18, 34]]]]], [], []], "action", ["subexpr", "action", [["get", "combo.setValueAndClose", ["loc", [null, [18, 50], [18, 72]]]], ["get", "choice", ["loc", [null, [18, 73], [18, 79]]]]], [], ["loc", [null, [18, 42], [18, 80]]]]], 0, null, ["loc", [null, [18, 8], [20, 23]]]]],
                    locals: ["choice"],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 22, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-relation-manager.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n    ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n\n");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(6);
                    return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), r[2] = e.createMorphAt(t, 2, 2, n), r[3] = e.createMorphAt(t, 4, 4, n), r[4] = e.createMorphAt(t, 6, 6, n), r[5] = e.createMorphAt(t, 7, 7, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "combo.header", [], [], 0, null, ["loc", [null, [2, 4], [4, 21]]]], ["block", "combo.item", [], ["value", ["subexpr", "hash", [], ["special", "rename", "name", ["get", "combo.query", ["loc", [null, [5, 52], [5, 63]]]], "onMenuClosed", ["subexpr", "action", ["rename", ["get", "combo.query", ["loc", [null, [5, 94], [5, 105]]]]], [], ["loc", [null, [5, 77], [5, 106]]]]], ["loc", [null, [5, 24], [5, 107]]]], "disabled", ["subexpr", "not", [["get", "combo.menu.active.special", ["loc", [null, [5, 122], [5, 147]]]]], [], ["loc", [null, [5, 117], [5, 148]]]], "action", ["subexpr", "chain-actions", [["subexpr", "action", ["rename", ["get", "combo.query", ["loc", [null, [5, 188], [5, 199]]]]], [], ["loc", [null, [5, 171], [5, 200]]]], ["subexpr", "action", [["get", "combo.closeMenu", ["loc", [null, [5, 209], [5, 224]]]], "escape"], [], ["loc", [null, [5, 201], [5, 234]]]]], [], ["loc", [null, [5, 156], [5, 235]]]]], 1, null, ["loc", [null, [5, 4], [7, 19]]]], ["block", "combo.item", [], ["value", ["subexpr", "hash", [], ["special", "add", "name", ["get", "combo.query", ["loc", [null, [8, 49], [8, 60]]]], "onMenuClosed", ["subexpr", "action", ["add", ["get", "combo.query", ["loc", [null, [8, 88], [8, 99]]]]], [], ["loc", [null, [8, 74], [8, 100]]]]], ["loc", [null, [8, 24], [8, 101]]]], "disabled", ["subexpr", "not", [["get", "combo.menu.active.special", ["loc", [null, [8, 116], [8, 141]]]]], [], ["loc", [null, [8, 111], [8, 142]]]], "action", ["subexpr", "chain-actions", [["subexpr", "action", ["add", ["get", "combo.query", ["loc", [null, [8, 179], [8, 190]]]]], [], ["loc", [null, [8, 165], [8, 191]]]], ["subexpr", "action", [["get", "combo.closeMenu", ["loc", [null, [8, 200], [8, 215]]]], "escape"], [], ["loc", [null, [8, 192], [8, 225]]]]], [], ["loc", [null, [8, 150], [8, 226]]]]], 2, null, ["loc", [null, [8, 4], [10, 19]]]], ["content", "combo.divider", ["loc", [null, [12, 4], [12, 21]]]], ["block", "combo.header", [], [], 3, null, ["loc", [null, [14, 4], [16, 21]]]], ["block", "each", [["get", "sortedChoices", ["loc", [null, [17, 12], [17, 25]]]]], [], 4, null, ["loc", [null, [17, 4], [21, 13]]]]],
                locals: ["combo"],
                templates: [e, t, n, r, a]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 23, column: 0}},
                moduleName: "portia-ui/templates/components/list-item-relation-manager.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "list-item-combo", [], ["value", ["subexpr", "mut", [["get", "value.content", ["loc", [null, [1, 30], [1, 43]]]]], [], ["loc", [null, [1, 25], [1, 44]]]], "valueAttribute", "name", "selecting", ["subexpr", "mut", [["get", "selecting", ["loc", [null, [1, 82], [1, 91]]]]], [], ["loc", [null, [1, 77], [1, 92]]]], "orderItemsForSearch", ["subexpr", "@mut", [["get", "orderItemsForSearch", ["loc", [null, [1, 113], [1, 132]]]]], [], []], "valuesEqual", ["subexpr", "@mut", [["get", "valuesEqual", ["loc", [null, [1, 145], [1, 156]]]]], [], []], "onChange", ["subexpr", "@mut", [["get", "onChange", ["loc", [null, [1, 166], [1, 174]]]]], [], []], "autoSelect", !0, "menuContainer", "body"], 0, null, ["loc", [null, [1, 0], [22, 20]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/list-item-selectable", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 5, column: 8}},
                            moduleName: "portia-ui/templates/components/list-item-selectable.hbs"
                        },
                        isEmpty: !1,
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["inline", "yield", [["get", "options", ["loc", [null, [4, 20], [4, 27]]]]], [], ["loc", [null, [4, 12], [4, 29]]]]],
                        locals: ["options"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 6, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-selectable.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "select-box", [], ["choices", ["subexpr", "@mut", [["get", "choices", ["loc", [null, [3, 30], [3, 37]]]]], [], []], "value", ["subexpr", "mut", [["get", "value", ["loc", [null, [3, 49], [3, 54]]]]], [], ["loc", [null, [3, 44], [3, 55]]]], "valueAttribute", ["subexpr", "@mut", [["get", "valueAttribute", ["loc", [null, [3, 71], [3, 85]]]]], [], []], "open", ["subexpr", "mut", [["get", "selecting", ["loc", [null, [3, 96], [3, 105]]]]], [], ["loc", [null, [3, 91], [3, 106]]]], "onChange", ["subexpr", "@mut", [["get", "onChange", ["loc", [null, [3, 116], [3, 124]]]]], [], []], "buttonClass", ["subexpr", "concat", ["input-list-item ", ["get", "buttonClass", ["loc", [null, [3, 164], [3, 175]]]]], [], ["loc", [null, [3, 137], [3, 176]]]], "menuClass", ["subexpr", "@mut", [["get", "menuClass", ["loc", [null, [3, 187], [3, 196]]]]], [], []], "menuAlign", ["subexpr", "@mut", [["get", "menuAlign", ["loc", [null, [3, 207], [3, 216]]]]], [], []], "menuContainer", ["subexpr", "@mut", [["get", "menuContainer", ["loc", [null, [3, 231], [3, 244]]]]], [], []]], 0, null, ["loc", [null, [3, 8], [5, 23]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), t = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 6, column: 4}, end: {line: 8, column: 4}},
                        moduleName: "portia-ui/templates/components/list-item-selectable.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "select-box", [], ["choices", ["subexpr", "@mut", [["get", "choices", ["loc", [null, [7, 29], [7, 36]]]]], [], []], "value", ["subexpr", "mut", [["get", "value", ["loc", [null, [7, 48], [7, 53]]]]], [], ["loc", [null, [7, 43], [7, 54]]]], "valueAttribute", ["subexpr", "@mut", [["get", "valueAttribute", ["loc", [null, [7, 70], [7, 84]]]]], [], []], "open", ["subexpr", "mut", [["get", "selecting", ["loc", [null, [7, 95], [7, 104]]]]], [], ["loc", [null, [7, 90], [7, 105]]]], "onChange", ["subexpr", "@mut", [["get", "onChange", ["loc", [null, [7, 115], [7, 123]]]]], [], []], "buttonClass", ["subexpr", "concat", ["input-list-item ", ["get", "buttonClass", ["loc", [null, [7, 163], [7, 174]]]]], [], ["loc", [null, [7, 136], [7, 175]]]], "menuClass", ["subexpr", "@mut", [["get", "menuClass", ["loc", [null, [7, 186], [7, 195]]]]], [], []], "menuAlign", ["subexpr", "@mut", [["get", "menuAlign", ["loc", [null, [7, 206], [7, 215]]]]], [], []], "menuContainer", ["subexpr", "@mut", [["get", "menuContainer", ["loc", [null, [7, 230], [7, 243]]]]], [], []]], ["loc", [null, [7, 8], [7, 245]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 9, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-selectable.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["get", "hasBlock", ["loc", [null, [2, 10], [2, 18]]]]], [], 0, 1, ["loc", [null, [2, 4], [8, 11]]]]],
                locals: [],
                templates: [e, t]
            }
        }(), t = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 11, column: 8}, end: {line: 13, column: 8}},
                        moduleName: "portia-ui/templates/components/list-item-selectable.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "get", [["get", "value", ["loc", [null, [12, 18], [12, 23]]]], ["get", "valueAttribute", ["loc", [null, [12, 24], [12, 38]]]]], [], ["loc", [null, [12, 12], [12, 40]]]]],
                    locals: [],
                    templates: []
                }
            }(), t = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 13, column: 8}, end: {line: 15, column: 8}},
                        moduleName: "portia-ui/templates/components/list-item-selectable.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["content", "value", ["loc", [null, [14, 12], [14, 21]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 9, column: 0}, end: {line: 20, column: 0}},
                    moduleName: "portia-ui/templates/components/list-item-selectable.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("span"), r = e.createTextNode("\n");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n    ");
                    e.appendChild(t, n);
                    var n = e.createElement("a"), r = e.createTextNode("\n        ");
                    e.appendChild(n, r);
                    var r = e.createElement("span");
                    e.setAttribute(r, "class", "caret"), e.appendChild(n, r);
                    var r = e.createTextNode("\n    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = e.childAt(t, [3]), a = new Array(2);
                    return a[0] = e.createMorphAt(e.childAt(t, [1]), 1, 1), a[1] = e.createElementMorph(r), a
                },
                statements: [["block", "if", [["get", "valueAttribute", ["loc", [null, [11, 14], [11, 28]]]]], [], 0, 1, ["loc", [null, [11, 8], [15, 15]]]], ["element", "action", ["startSelecting"], [], ["loc", [null, [17, 7], [17, 34]]]]],
                locals: [],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 21, column: 0}},
                moduleName: "portia-ui/templates/components/list-item-selectable.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["get", "selecting", ["loc", [null, [1, 6], [1, 15]]]]], [], 0, 1, ["loc", [null, [1, 0], [20, 7]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/list-item-text", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/components/list-item-text.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            }, statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]]]], locals: [], templates: []
        }
    }())
}), define("portia-ui/templates/components/notification-container", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 3, column: 0}},
                    moduleName: "portia-ui/templates/components/notification-container.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "notification-message", [], ["notification", ["subexpr", "@mut", [["get", "notification", ["loc", [null, [2, 40], [2, 52]]]]], [], []], "fade", ["subexpr", "@mut", [["get", "notification.fading", ["loc", [null, [2, 58], [2, 77]]]]], [], []], "fadeAction", ["subexpr", "action", ["fadeBanner", ["get", "notification", ["loc", [null, [2, 110], [2, 122]]]]], [], ["loc", [null, [2, 89], [2, 123]]]]], ["loc", [null, [2, 4], [2, 125]]]]],
                locals: ["notification"],
                templates: []
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 5, column: 0}, end: {line: 7, column: 0}},
                    moduleName: "portia-ui/templates/components/notification-container.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "notification-message", [], ["notification", ["subexpr", "@mut", [["get", "notification", ["loc", [null, [6, 40], [6, 52]]]]], [], []], "fade", ["subexpr", "@mut", [["get", "notification.fading", ["loc", [null, [6, 58], [6, 77]]]]], [], []], "closeAction", ["subexpr", "action", ["dismissNotification", ["get", "notification", ["loc", [null, [6, 120], [6, 132]]]]], [], ["loc", [null, [6, 90], [6, 133]]]], "fadeAction", ["subexpr", "action", ["fadeNotification", ["get", "notification", ["loc", [null, [6, 172], [6, 184]]]]], [], ["loc", [null, [6, 145], [6, 185]]]]], ["loc", [null, [6, 4], [6, 187]]]]],
                locals: ["notification"],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 8, column: 0}},
                moduleName: "portia-ui/templates/components/notification-container.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "each", [["get", "banners", ["loc", [null, [1, 8], [1, 15]]]]], [], 0, null, ["loc", [null, [1, 0], [3, 9]]]], ["block", "each", [["get", "displayNotifications", ["loc", [null, [5, 8], [5, 28]]]]], [], 1, null, ["loc", [null, [5, 0], [7, 9]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/notification-message", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: {name: "modifiers", modifiers: ["action"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 5, column: 0}},
                    moduleName: "portia-ui/templates/components/notification-message.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("button");
                    e.setAttribute(n, "type", "button"), e.setAttribute(n, "class", "close"), e.setAttribute(n, "aria-label", "Close");
                    var r = e.createTextNode("\n        ");
                    e.appendChild(n, r);
                    var r = e.createElement("span");
                    e.setAttribute(r, "aria-hidden", "true");
                    var a = e.createTextNode("×");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createTextNode("\n    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = e.childAt(t, [1]), a = new Array(1);
                    return a[0] = e.createElementMorph(r), a
                },
                statements: [["element", "action", ["close"], [], ["loc", [null, [2, 59], [2, 77]]]]],
                locals: [],
                templates: []
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 6, column: 0}, end: {line: 8, column: 0}},
                    moduleName: "portia-ui/templates/components/notification-message.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("h4"), r = e.createComment("");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(e.childAt(t, [1]), 0, 0), r
                }, statements: [["content", "title", ["loc", [null, [7, 8], [7, 17]]]]], locals: [], templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 10, column: 0}},
                moduleName: "portia-ui/templates/components/notification-message.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createElement("p"), r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(3);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), r[2] = e.createMorphAt(e.childAt(t, [2]), 0, 0), e.insertBoundary(t, 0), r
            },
            statements: [["block", "if", [["get", "closeAction", ["loc", [null, [1, 6], [1, 17]]]]], [], 0, null, ["loc", [null, [1, 0], [5, 7]]]], ["block", "if", [["get", "title", ["loc", [null, [6, 6], [6, 11]]]]], [], 1, null, ["loc", [null, [6, 0], [8, 7]]]], ["content", "message", ["loc", [null, [9, 3], [9, 14]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/page-actions-editor", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 7, column: 16}, end: {line: 9, column: 16}},
                            moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                        },
                        isEmpty: !1,
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("                    ");
                            e.appendChild(t, n);
                            var n = e.createElement("option"), r = e.createComment("");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = e.childAt(t, [1]), a = new Array(3);
                            return a[0] = e.createAttrMorph(r, "value"), a[1] = e.createAttrMorph(r, "selected"), a[2] = e.createMorphAt(r, 0, 0), a
                        },
                        statements: [["attribute", "value", ["get", "type", ["loc", [null, [8, 36], [8, 40]]]]], ["attribute", "selected", ["subexpr", "eq", [["get", "type", ["loc", [null, [8, 57], [8, 61]]]], ["get", "editing.type", ["loc", [null, [8, 62], [8, 74]]]]], [], ["loc", [null, [8, 52], [8, 76]]]]], ["content", "type", ["loc", [null, [8, 77], [8, 85]]]]],
                        locals: ["type"],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 0}, end: {line: 18, column: 0}},
                        moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                        e.appendChild(t, n);
                        var n = e.createElement("div");
                        e.setAttribute(n, "class", "form-group form-group-sm");
                        var r = e.createTextNode("\n        ");
                        e.appendChild(n, r);
                        var r = e.createElement("label");
                        e.setAttribute(r, "for", "actionType"), e.setAttribute(r, "class", "col-sm-4 control-label");
                        var a = e.createTextNode("Action type");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("\n        ");
                        e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "col-sm-7");
                        var a = e.createTextNode("\n            ");
                        e.appendChild(r, a);
                        var a = e.createElement("select"), l = e.createTextNode("\n");
                        e.appendChild(a, l);
                        var l = e.createComment("");
                        e.appendChild(a, l);
                        var l = e.createTextNode("            ");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createTextNode("\n        ");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("\n        ");
                        e.appendChild(n, r);
                        var r = e.createElement("div");
                        e.setAttribute(r, "class", "btn-center");
                        var a = e.createTextNode("\n            ");
                        e.appendChild(r, a);
                        var a = e.createElement("button");
                        e.setAttribute(a, "class", "btn btn-primary fa fa-icon fa-plus");
                        var l = e.createTextNode("\n                Continue\n            ");
                        e.appendChild(a, l), e.appendChild(r, a);
                        var a = e.createTextNode("\n        ");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("\n    ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [1]), a = e.childAt(r, [3, 1]), l = e.childAt(r, [5, 1]), o = new Array(3);
                        return o[0] = e.createAttrMorph(a, "onchange"), o[1] = e.createMorphAt(a, 1, 1), o[2] = e.createElementMorph(l), o
                    },
                    statements: [["attribute", "onchange", ["subexpr", "action", [["subexpr", "mut", [["get", "editing.type", ["loc", [null, [6, 43], [6, 55]]]]], [], ["loc", [null, [6, 38], [6, 56]]]]], ["value", "target.value"], ["loc", [null, [6, 29], [6, 79]]]]], ["block", "each", [["get", "actionTypes", ["loc", [null, [7, 24], [7, 35]]]]], [], 0, null, ["loc", [null, [7, 16], [9, 25]]]], ["element", "action", ["addContinue"], [], ["loc", [null, [13, 20], [13, 44]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), t = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 20, column: 4}, end: {line: 27, column: 4}},
                            moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                            e.appendChild(t, n);
                            var n = e.createElement("div");
                            e.setAttribute(n, "class", "form-group form-group-sm");
                            var r = e.createTextNode("\n            ");
                            e.appendChild(n, r);
                            var r = e.createElement("label");
                            e.setAttribute(r, "for", "actionType"), e.setAttribute(r, "class", "col-sm-4 control-label");
                            var a = e.createTextNode("Timeout (ms)");
                            e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createTextNode("\n            ");
                            e.appendChild(n, r);
                            var r = e.createElement("div");
                            e.setAttribute(r, "class", "col-sm-7");
                            var a = e.createTextNode("\n                ");
                            e.appendChild(r, a);
                            var a = e.createComment("");
                            e.appendChild(r, a);
                            var a = e.createTextNode("\n            ");
                            e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createTextNode("\n        ");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [1, 3]), 1, 1), r
                        },
                        statements: [["inline", "input", [], ["value", ["subexpr", "@mut", [["get", "editing.timeout", ["loc", [null, [24, 30], [24, 45]]]]], [], []], "pattern", "^[0-9]+$", "class", "form-control"], ["loc", [null, [24, 16], [24, 88]]]]],
                        locals: [],
                        templates: []
                    }
                }(), t = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 27, column: 4}, end: {line: 34, column: 4}},
                            moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                            e.appendChild(t, n);
                            var n = e.createElement("div");
                            e.setAttribute(n, "class", "form-group form-group-sm");
                            var r = e.createTextNode("\n            ");
                            e.appendChild(n, r);
                            var r = e.createElement("label");
                            e.setAttribute(r, "for", "actionType"), e.setAttribute(r, "class", "col-sm-4 control-label");
                            var a = e.createTextNode("Selector");
                            e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createTextNode("\n            ");
                            e.appendChild(n, r);
                            var r = e.createElement("div");
                            e.setAttribute(r, "class", "col-sm-7");
                            var a = e.createTextNode("\n                ");
                            e.appendChild(r, a);
                            var a = e.createComment("");
                            e.appendChild(r, a);
                            var a = e.createTextNode("\n            ");
                            e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createTextNode("\n        ");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [1, 3]), 1, 1), r
                        },
                        statements: [["inline", "input", [], ["value", ["subexpr", "@mut", [["get", "editing.selector", ["loc", [null, [31, 30], [31, 46]]]]], [], []], "class", "form-control"], ["loc", [null, [31, 16], [31, 70]]]]],
                        locals: [],
                        templates: []
                    }
                }(), n = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 35, column: 4}, end: {line: 42, column: 4}},
                            moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                            e.appendChild(t, n);
                            var n = e.createElement("div");
                            e.setAttribute(n, "class", "form-group form-group-sm");
                            var r = e.createTextNode("\n            ");
                            e.appendChild(n, r);
                            var r = e.createElement("label");
                            e.setAttribute(r, "for", "actionType"), e.setAttribute(r, "class", "col-sm-4 control-label");
                            var a = e.createTextNode("Value");
                            e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createTextNode("\n            ");
                            e.appendChild(n, r);
                            var r = e.createElement("div");
                            e.setAttribute(r, "class", "col-sm-7");
                            var a = e.createTextNode("\n                ");
                            e.appendChild(r, a);
                            var a = e.createComment("");
                            e.appendChild(r, a);
                            var a = e.createTextNode("\n            ");
                            e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createTextNode("\n        ");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(e.childAt(t, [1, 3]), 1, 1), r
                        },
                        statements: [["inline", "input", [], ["value", ["subexpr", "@mut", [["get", "editing.value", ["loc", [null, [39, 30], [39, 43]]]]], [], []], "class", "form-control"], ["loc", [null, [39, 16], [39, 67]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 18, column: 0}, end: {line: 57, column: 0}},
                        moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createElement("form");
                        e.setAttribute(n, "class", "form-horizontal");
                        var r = e.createTextNode("\n");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n    ");
                        e.appendChild(t, n);
                        var n = e.createElement("div");
                        e.setAttribute(n, "class", "form-group form-group-sm");
                        var r = e.createTextNode("\n        ");
                        e.appendChild(n, r);
                        var r = e.createElement("label");
                        e.setAttribute(r, "for", "actionType"), e.setAttribute(r, "class", "control-label");
                        var a = e.createTextNode("Run only in pages matching");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("\n        ");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode("\n    ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n    ");
                        e.appendChild(t, n);
                        var n = e.createElement("div");
                        e.setAttribute(n, "class", "form-group form-group-sm");
                        var r = e.createTextNode("\n        ");
                        e.appendChild(n, r);
                        var r = e.createElement("label");
                        e.setAttribute(r, "for", "actionType"), e.setAttribute(r, "class", "control-label");
                        var a = e.createTextNode("Don't run in pages matching");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("\n        ");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode("\n    ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n    ");
                        e.appendChild(t, n);
                        var n = e.createElement("div");
                        e.setAttribute(n, "class", "btn-center");
                        var r = e.createTextNode("\n        ");
                        e.appendChild(n, r);
                        var r = e.createElement("button");
                        e.setAttribute(r, "class", "btn btn-primary fa fa-icon fa-check");
                        var a = e.createTextNode("\n            Back\n        ");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("\n    ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [0]), a = e.childAt(t, [6, 1]), l = new Array(5);
                        return l[0] = e.createMorphAt(r, 1, 1), l[1] = e.createMorphAt(r, 2, 2), l[2] = e.createMorphAt(e.childAt(t, [2]), 3, 3), l[3] = e.createMorphAt(e.childAt(t, [4]), 3, 3), l[4] = e.createElementMorph(a), l
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "editing.type", ["loc", [null, [20, 14], [20, 26]]]], "wait"], [], ["loc", [null, [20, 10], [20, 34]]]]], [], 0, 1, ["loc", [null, [20, 4], [34, 11]]]], ["block", "if", [["subexpr", "eq", [["get", "editing.type", ["loc", [null, [35, 14], [35, 26]]]], "set"], [], ["loc", [null, [35, 10], [35, 33]]]]], [], 2, null, ["loc", [null, [35, 4], [42, 11]]]], ["inline", "input", [], ["value", ["subexpr", "@mut", [["get", "editing.accept", ["loc", [null, [46, 22], [46, 36]]]]], [], []], "class", "form-control"], ["loc", [null, [46, 8], [46, 60]]]], ["inline", "input", [], ["value", ["subexpr", "@mut", [["get", "editing.reject", ["loc", [null, [50, 22], [50, 36]]]]], [], []], "class", "form-control"], ["loc", [null, [50, 8], [50, 60]]]], ["element", "action", ["back"], [], ["loc", [null, [53, 16], [53, 33]]]]],
                    locals: [],
                    templates: [e, t, n]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 58, column: 0}},
                    moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["get", "addingNew", ["loc", [null, [2, 6], [2, 15]]]]], [], 0, 1, ["loc", [null, [2, 0], [57, 7]]]]],
                locals: [],
                templates: [e, t]
            }
        }(), t = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 62, column: 16}, end: {line: 62, column: 43}},
                                    moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode(" OnLoad ");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 61, column: 12}, end: {line: 64, column: 12}},
                                moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n                ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(2);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r
                            },
                            statements: [["block", "list-item-text", [], [], 0, null, ["loc", [null, [62, 16], [62, 62]]]], ["inline", "list-item-icon", [], ["icon", "add", "action", ["subexpr", "action", ["addNew"], [], ["loc", [null, [63, 51], [63, 68]]]]], ["loc", [null, [63, 16], [63, 71]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }(), t = function () {
                        var e = function () {
                            var e = function () {
                                var e = function () {
                                    var e = function () {
                                        var e = function () {
                                            return {
                                                meta: {
                                                    fragmentReason: !1,
                                                    revision: "Ember@2.6.2",
                                                    loc: {
                                                        source: null,
                                                        start: {line: 70, column: 28},
                                                        end: {line: 70, column: 83}
                                                    },
                                                    moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                                                },
                                                isEmpty: !1,
                                                arity: 0,
                                                cachedFragment: null,
                                                hasRendered: !1,
                                                buildFragment: function (e) {
                                                    var t = e.createDocumentFragment(), n = e.createElement("code"),
                                                        r = e.createComment("");
                                                    return e.appendChild(n, r), e.appendChild(t, n), t
                                                },
                                                buildRenderNodes: function (e, t, n) {
                                                    var r = new Array(1);
                                                    return r[0] = e.createMorphAt(e.childAt(t, [0]), 0, 0), r
                                                },
                                                statements: [["content", "action.selector", ["loc", [null, [70, 57], [70, 76]]]]],
                                                locals: [],
                                                templates: []
                                            }
                                        }(), t = function () {
                                            return {
                                                meta: {
                                                    fragmentReason: !1,
                                                    revision: "Ember@2.6.2",
                                                    loc: {
                                                        source: null,
                                                        start: {line: 71, column: 28},
                                                        end: {line: 71, column: 83}
                                                    },
                                                    moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                                                },
                                                isEmpty: !1,
                                                arity: 0,
                                                cachedFragment: null,
                                                hasRendered: !1,
                                                buildFragment: function (e) {
                                                    var t = e.createDocumentFragment(), n = e.createTextNode(" to ");
                                                    e.appendChild(t, n);
                                                    var n = e.createElement("code"), r = e.createTextNode('"');
                                                    e.appendChild(n, r);
                                                    var r = e.createComment("");
                                                    e.appendChild(n, r);
                                                    var r = e.createTextNode('"');
                                                    return e.appendChild(n, r), e.appendChild(t, n), t
                                                },
                                                buildRenderNodes: function (e, t, n) {
                                                    var r = new Array(1);
                                                    return r[0] = e.createMorphAt(e.childAt(t, [1]), 1, 1), r
                                                },
                                                statements: [["content", "action.value", ["loc", [null, [71, 59], [71, 75]]]]],
                                                locals: [],
                                                templates: []
                                            }
                                        }(), n = function () {
                                            return {
                                                meta: {
                                                    fragmentReason: !1,
                                                    revision: "Ember@2.6.2",
                                                    loc: {
                                                        source: null,
                                                        start: {line: 72, column: 28},
                                                        end: {line: 72, column: 75}
                                                    },
                                                    moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                                                },
                                                isEmpty: !1,
                                                arity: 0,
                                                cachedFragment: null,
                                                hasRendered: !1,
                                                buildFragment: function (e) {
                                                    var t = e.createDocumentFragment(), n = e.createTextNode(" for ");
                                                    e.appendChild(t, n);
                                                    var n = e.createComment("");
                                                    e.appendChild(t, n);
                                                    var n = e.createTextNode("ms");
                                                    return e.appendChild(t, n), t
                                                },
                                                buildRenderNodes: function (e, t, n) {
                                                    var r = new Array(1);
                                                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                                                },
                                                statements: [["content", "action.timeout", ["loc", [null, [72, 55], [72, 73]]]]],
                                                locals: [],
                                                templates: []
                                            }
                                        }();
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 69, column: 24},
                                                    end: {line: 73, column: 24}
                                                },
                                                moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode("                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function (e, t, n) {
                                                var r = new Array(3);
                                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r
                                            },
                                            statements: [["block", "if", [["get", "action.selector", ["loc", [null, [70, 34], [70, 49]]]]], [], 0, null, ["loc", [null, [70, 28], [70, 90]]]], ["block", "if", [["get", "action.value", ["loc", [null, [71, 34], [71, 46]]]]], [], 1, null, ["loc", [null, [71, 28], [71, 90]]]], ["block", "if", [["get", "action.timeout", ["loc", [null, [72, 34], [72, 48]]]]], [], 2, null, ["loc", [null, [72, 28], [72, 82]]]]],
                                            locals: [],
                                            templates: [e, t, n]
                                        }
                                    }();
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 66, column: 20},
                                                end: {line: 76, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 1,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(5);
                                            return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r[3] = e.createMorphAt(t, 7, 7, n), r[4] = e.createMorphAt(t, 9, 9, n), r
                                        },
                                        statements: [["content", "reorder-handler", ["loc", [null, [67, 24], [67, 43]]]], ["inline", "list-item-icon", [], ["icon", ["subexpr", "@mut", [["get", "action.type", ["loc", [null, [68, 46], [68, 57]]]]], [], []]], ["loc", [null, [68, 24], [68, 59]]]], ["block", "list-item-text", [], [], 0, null, ["loc", [null, [69, 24], [73, 43]]]], ["inline", "list-item-icon", [], ["icon", "options", "action", ["subexpr", "action", ["editPageAction", ["get", "action", ["loc", [null, [74, 88], [74, 94]]]]], [], ["loc", [null, [74, 63], [74, 95]]]]], ["loc", [null, [74, 24], [74, 97]]]], ["inline", "list-item-icon", [], ["icon", "remove", "action", ["subexpr", "action", ["deletePageAction", ["get", "index", ["loc", [null, [75, 89], [75, 94]]]]], [], ["loc", [null, [75, 62], [75, 95]]]]], ["loc", [null, [75, 24], [75, 97]]]]],
                                        locals: ["options"],
                                        templates: [e]
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 65, column: 16}, end: {line: 77, column: 16}},
                                        moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 2,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [["block", "tree-list-item", [], ["classNames", "page-action"], 0, null, ["loc", [null, [66, 20], [76, 39]]]]],
                                    locals: ["action", "index"],
                                    templates: [e]
                                }
                            }(), t = function () {
                                var e = function () {
                                    var e = function () {
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 79, column: 24},
                                                    end: {line: 79, column: 77}
                                                },
                                                moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode(" No actions have been recorded yet");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function () {
                                                return []
                                            },
                                            statements: [],
                                            locals: [],
                                            templates: []
                                        }
                                    }();
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 78, column: 20},
                                                end: {line: 80, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                                        },
                                        statements: [["block", "list-item-text", [], [], 0, null, ["loc", [null, [79, 24], [79, 96]]]]],
                                        locals: [],
                                        templates: [e]
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 77, column: 16}, end: {line: 81, column: 16}},
                                        moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [["block", "tree-list-item", [], [], 0, null, ["loc", [null, [78, 20], [80, 39]]]]],
                                    locals: [],
                                    templates: [e]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 64, column: 12}, end: {line: 82, column: 12}},
                                    moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("            ");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                                },
                                statements: [["block", "each", [["get", "pageActions", ["loc", [null, [65, 24], [65, 35]]]]], [], 0, 1, ["loc", [null, [65, 16], [81, 25]]]]],
                                locals: [],
                                templates: [e, t]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 64, column: 12}, end: {line: 82, column: 12}},
                                moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [64, 26], [64, 41]]]], "subtrees"], [], ["loc", [null, [64, 22], [64, 53]]]]], [], 0, null, ["loc", [null, [64, 12], [82, 12]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 60, column: 8}, end: {line: 83, column: 8}},
                            moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                        },
                        isEmpty: !1,
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [61, 22], [61, 37]]]], "item"], [], ["loc", [null, [61, 18], [61, 45]]]]], [], 0, 1, ["loc", [null, [61, 12], [82, 19]]]]],
                        locals: ["options"],
                        templates: [e, t]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 59, column: 4}, end: {line: 84, column: 4}},
                        moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "tree-list-item", [], ["hasChildren", !0, "childsReorderable", !0, "reorder", ["subexpr", "action", ["reorderPageAction"], [], ["loc", [null, [60, 74], [60, 102]]]]], 0, null, ["loc", [null, [60, 8], [83, 27]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 58, column: 0}, end: {line: 85, column: 0}},
                    moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tree-list", [], [], 0, null, ["loc", [null, [59, 4], [84, 18]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 86, column: 0}},
                moduleName: "portia-ui/templates/components/page-actions-editor.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["get", "editing", ["loc", [null, [1, 6], [1, 13]]]]], [], 0, 1, ["loc", [null, [1, 0], [85, 7]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/project-list", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 5, column: 12}, end: {line: 10, column: 12}},
                            moduleName: "portia-ui/templates/components/project-list.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                            e.appendChild(t, n);
                            var n = e.createElement("div");
                            e.setAttribute(n, "class", "list-group-item");
                            var r = e.createTextNode("\n                    ");
                            e.appendChild(n, r);
                            var r = e.createComment("");
                            e.appendChild(n, r);
                            var r = e.createTextNode("\n                ");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = e.childAt(t, [1]), a = new Array(2);
                            return a[0] = e.createAttrMorph(r, "onclick"), a[1] = e.createMorphAt(r, 1, 1), a
                        },
                        statements: [["attribute", "onclick", ["subexpr", "action", ["selectProject", ["get", "project", ["loc", [null, [7, 50], [7, 57]]]]], [], ["loc", [null, [7, 25], [7, 59]]]]], ["content", "project.name", ["loc", [null, [8, 20], [8, 36]]]]],
                        locals: [],
                        templates: []
                    }
                }(), t = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 11, column: 16}, end: {line: 13, column: 18}},
                                moduleName: "portia-ui/templates/components/project-list.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["content", "project.name", ["loc", [null, [11, 16], [13, 18]]]]],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 10, column: 12}, end: {line: 14, column: 12}},
                            moduleName: "portia-ui/templates/components/project-list.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["block", "link-to", ["projects.project", ["get", "project.id", ["loc", [null, [11, 58], [11, 68]]]]], ["class", "list-group-item"], 0, null, ["loc", [null, [11, 16], [13, 18]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 4, column: 8}, end: {line: 15, column: 8}},
                        moduleName: "portia-ui/templates/components/project-list.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["get", "isSelecting", ["loc", [null, [5, 18], [5, 29]]]]], [], 0, 1, ["loc", [null, [5, 12], [14, 19]]]]],
                    locals: ["project"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 17, column: 0}},
                    moduleName: "portia-ui/templates/components/project-list.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n    ");
                    e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "project-list-items");
                    var r = e.createTextNode("\n");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(2);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(e.childAt(t, [3]), 1, 1), r
                },
                statements: [["inline", "input-with-clear", [], ["update", ["subexpr", "action", ["search"], [], ["loc", [null, [2, 30], [2, 47]]]], "clear", ["subexpr", "action", ["clear"], [], ["loc", [null, [2, 54], [2, 70]]]], "placeholder", "Search..."], ["loc", [null, [2, 4], [2, 96]]]], ["block", "each", [["get", "filteredProjects", ["loc", [null, [4, 16], [4, 32]]]]], [], 0, null, ["loc", [null, [4, 8], [15, 17]]]]],
                locals: [],
                templates: [e]
            }
        }(), t = function () {
            var e = function () {
                var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 20, column: 12}, end: {line: 25, column: 12}},
                                moduleName: "portia-ui/templates/components/project-list.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                e.appendChild(t, n);
                                var n = e.createElement("div");
                                e.setAttribute(n, "class", "list-group-item");
                                var r = e.createTextNode("\n                    ");
                                e.appendChild(n, r);
                                var r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createTextNode("\n                ");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = e.childAt(t, [1]), a = new Array(2);
                                return a[0] = e.createAttrMorph(r, "onclick"), a[1] = e.createMorphAt(r, 1, 1), a
                            },
                            statements: [["attribute", "onclick", ["subexpr", "action", ["selectProject", ["get", "project", ["loc", [null, [22, 50], [22, 57]]]]], [], ["loc", [null, [22, 25], [22, 59]]]]], ["content", "project.name", ["loc", [null, [23, 20], [23, 36]]]]],
                            locals: [],
                            templates: []
                        }
                    }(), t = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 26, column: 16}, end: {line: 28, column: 18}},
                                    moduleName: "portia-ui/templates/components/project-list.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["content", "project.name", ["loc", [null, [26, 16], [28, 18]]]]],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 25, column: 12}, end: {line: 29, column: 12}},
                                moduleName: "portia-ui/templates/components/project-list.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["block", "link-to", ["projects.project", ["get", "project.id", ["loc", [null, [26, 58], [26, 68]]]]], ["class", "list-group-item"], 0, null, ["loc", [null, [26, 16], [28, 18]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }()
                ;
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 19, column: 8}, end: {line: 30, column: 8}},
                        moduleName: "portia-ui/templates/components/project-list.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["get", "isSelecting", ["loc", [null, [20, 18], [20, 29]]]]], [], 0, 1, ["loc", [null, [20, 12], [29, 19]]]]],
                    locals: ["project"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 17, column: 0}, end: {line: 32, column: 0}},
                    moduleName: "portia-ui/templates/components/project-list.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "project-list-items");
                    var r = e.createTextNode("\n");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(e.childAt(t, [1]), 1, 1), r
                },
                statements: [["block", "each", [["get", "projects", ["loc", [null, [19, 16], [19, 24]]]]], [], 0, null, ["loc", [null, [19, 8], [30, 17]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 33, column: 0}},
                moduleName: "portia-ui/templates/components/project-list.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["get", "showSearch", ["loc", [null, [1, 6], [1, 16]]]]], [], 0, 1, ["loc", [null, [1, 0], [32, 7]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/project-listing", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        var e = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 11, column: 20}, end: {line: 11, column: 60}},
                                        moduleName: "portia-ui/templates/components/project-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createTextNode("显示所有项目");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function () {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 6, column: 16}, end: {line: 12, column: 16}},
                                    moduleName: "portia-ui/templates/components/project-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                    ");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                                },
                                statements: [["block", "link-to", ["projects"], [], 0, null, ["loc", [null, [11, 20], [11, 72]]]]],
                                locals: [],
                                templates: [e]
                            }
                        }(), t = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 15, column: 20}, end: {line: 35, column: 20}},
                                        moduleName: "portia-ui/templates/components/project-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                        Not published\n                        ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("p"),
                                            r = e.createTextNode("\n                            This project has changes that have not yet been published.\n                        ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n                        ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("p"),
                                            r = e.createTextNode("\n                            When you make changes in Portia a private workspace is created for your\n                            user, separate from the rest of the project. Other users cannot see\n                            these changes until they are published, and you cannot see changes that\n                            were published by other users after you started making changes.\n                        ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n                        ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("p"),
                                            r = e.createTextNode("\n                            To run a spider or make your changes visible to other users you must\n                            first publish (");
                                        e.appendChild(n, r);
                                        var r = e.createComment("");
                                        e.appendChild(n, r);
                                        var r = e.createTextNode(") the changes.\n                        ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n                        ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("p"),
                                            r = e.createTextNode("\n                            To clean your private workspace, and get back to the most recently\n                            published version of your project, you can discard your changes\n                            (");
                                        e.appendChild(n, r);
                                        var r = e.createComment("");
                                        e.appendChild(n, r);
                                        var r = e.createTextNode(").\n                        ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(2);
                                        return r[0] = e.createMorphAt(e.childAt(t, [5]), 1, 1), r[1] = e.createMorphAt(e.childAt(t, [7]), 1, 1), r
                                    },
                                    statements: [["inline", "icon-button", [], ["icon", "publish"], ["loc", [null, [28, 43], [28, 73]]]], ["inline", "icon-button", [], ["icon", "rollback"], ["loc", [null, [33, 29], [33, 60]]]]],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 13, column: 16}, end: {line: 36, column: 16}},
                                    moduleName: "portia-ui/templates/components/project-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createTextNode("                    Not published\n");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "help-icon", [], ["tooltipClasses", "tooltip-wide"], 0, null, ["loc", [null, [15, 20], [35, 34]]]]],
                                locals: [],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 4, column: 12}, end: {line: 37, column: 12}},
                                moduleName: "portia-ui/templates/components/project-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                项目\n");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(2);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "animation-container", [], ["hide", ["subexpr", "@mut", [["get", "isPublished", ["loc", [null, [7, 25], [7, 36]]]]], [], []], "class", "inline project-changes", "setHeight", !1], 0, null, ["loc", [null, [6, 16], [12, 40]]]], ["block", "animation-container", [], ["hide", ["subexpr", "@mut", [["get", "notPublished", ["loc", [null, [13, 44], [13, 56]]]]], [], []], "id", "project-changes-info", "class", "inline project-changes", "setHeight", !1], 1, null, ["loc", [null, [13, 16], [36, 40]]]]],
                            locals: [],
                            templates: [e, t]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 38, column: 8}},
                            moduleName: "portia-ui/templates/components/project-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "list-item-text", [], ["class", "title project-listing"], 0, null, ["loc", [null, [4, 12], [37, 31]]]]],
                        locals: [],
                        templates: [e]
                    }
                }(), t = function () {
                    var e = function () {
                        var e = function () {
                            var e = function () {
                                var e = function () {
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 43, column: 20},
                                                end: {line: 45, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/project-listing.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                                        },
                                        statements: [["content", "project.name", ["loc", [null, [44, 24], [44, 40]]]]],
                                        locals: [],
                                        templates: []
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 40, column: 16}, end: {line: 46, column: 16}},
                                        moduleName: "portia-ui/templates/components/project-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                    ");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("\n                    ");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(3);
                                        return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), e.insertBoundary(t, null), r
                                    },
                                    statements: [["content", "indentation-spacer", ["loc", [null, [41, 20], [41, 42]]]], ["inline", "list-item-icon", [], ["icon", "project"], ["loc", [null, [42, 20], [42, 53]]]], ["block", "list-item-text", [], [], 0, null, ["loc", [null, [43, 20], [45, 39]]]]],
                                    locals: [],
                                    templates: [e]
                                }
                            }(), t = function () {
                                var e = function () {
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 52, column: 20},
                                                end: {line: 65, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/project-listing.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createElement("li"), r = e.createElement("a"),
                                                a = e.createTextNode("\n                            ");
                                            e.appendChild(r, a);
                                            var a = e.createComment("");
                                            e.appendChild(r, a);
                                            var a = e.createTextNode("Publish project\n                        ");
                                            e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                                            var n = e.createTextNode("\n                        ");
                                            e.appendChild(t, n);
                                            var n = e.createElement("li"), r = e.createElement("a"),
                                                a = e.createTextNode("\n                            ");
                                            e.appendChild(r, a);
                                            var a = e.createComment("");
                                            e.appendChild(r, a);
                                            var a = e.createTextNode("Discard changes\n                        ");
                                            e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = e.childAt(t, [1, 0]), a = e.childAt(t, [3, 0]), l = new Array(4);
                                            return l[0] = e.createElementMorph(r), l[1] = e.createMorphAt(r, 1, 1), l[2] = e.createElementMorph(a), l[3] = e.createMorphAt(a, 1, 1), l
                                        },
                                        statements: [["element", "action", [["subexpr", "chain-actions", [["subexpr", "action", ["publish"], [], ["loc", [null, [53, 55], [53, 73]]]], ["get", "options.closeMenu", ["loc", [null, [54, 41], [54, 58]]]]], [], ["loc", [null, [53, 40], [54, 59]]]]], [], ["loc", [null, [53, 31], [54, 61]]]], ["inline", "list-item-icon", [], ["class", "icon", "icon", "publish"], ["loc", [null, [55, 28], [57, 46]]]], ["element", "action", [["subexpr", "chain-actions", [["subexpr", "action", ["discard"], [], ["loc", [null, [59, 55], [59, 73]]]], ["get", "options.closeMenu", ["loc", [null, [60, 41], [60, 58]]]]], [], ["loc", [null, [59, 40], [60, 59]]]]], [], ["loc", [null, [59, 31], [60, 61]]]], ["inline", "list-item-icon", [], ["class", "icon", "icon", "rollback"], ["loc", [null, [61, 28], [63, 47]]]]],
                                        locals: [],
                                        templates: []
                                    }
                                }(), t = function () {
                                    var e = function () {
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 65, column: 20},
                                                    end: {line: 72, column: 20}
                                                },
                                                moduleName: "portia-ui/templates/components/project-listing.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode("                        ");
                                                e.appendChild(t, n);
                                                var n = e.createElement("li"), r = e.createElement("a"),
                                                    a = e.createTextNode("\n                            ");
                                                e.appendChild(r, a);
                                                var a = e.createComment("");
                                                e.appendChild(r, a);
                                                var a = e.createTextNode("发布项目\n                        ");
                                                e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                                                var n = e.createTextNode("\n                    ");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function (e, t, n) {
                                                var r = e.childAt(t, [1, 0]), a = new Array(2);
                                                return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(r, 1, 1), a
                                            },
                                            statements: [["element", "action", [["subexpr", "chain-actions", [["subexpr", "action", ["deploy2Crawlab"], [], ["loc", [null, [66, 55], [66, 72]]]], ["get", "options.closeMenu", ["loc", [null, [67, 41], [67, 58]]]]], [], ["loc", [null, [66, 40], [67, 59]]]]], [], ["loc", [null, [66, 31], [67, 61]]]], ["inline", "list-item-icon", [], ["class", "icon", "icon", "publish"], ["loc", [null, [68, 28], [70, 46]]]]],
                                            locals: [],
                                            templates: []
                                        }
                                    }();
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 65, column: 20},
                                                end: {line: 72, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/project-listing.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(), n = e.createComment("");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                        },
                                        statements: [["block", "if", [["get", "deployable", ["loc", [null, [65, 30], [65, 40]]]]], [], 0, null, ["loc", [null, [65, 20], [72, 20]]]]],
                                        locals: [],
                                        templates: [e]
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 48, column: 16}, end: {line: 79, column: 16}},
                                        moduleName: "portia-ui/templates/components/project-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 1,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("                    ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("li"), r = e.createTextNode(" ");
                                        n.style.display = "none";
                                        e.appendChild(n, r);
                                        var r = e.createElement("a");
                                        e.setAttribute(r, "target", "_blank");
                                        var a = e.createTextNode("\n                        ");
                                        e.appendChild(r, a);
                                        var a = e.createComment("");
                                        e.appendChild(r, a);
                                        var a = e.createTextNode("Download as Portia\n                    ");
                                        e.appendChild(r, a), e.appendChild(n, r);
                                        var r = e.createTextNode(" ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n                    ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("li"), r = e.createElement("a");
                                        e.setAttribute(r, "target", "_blank");
                                        var a = e.createTextNode("\n                        ");
                                        e.appendChild(r, a);
                                        var a = e.createComment("");
                                        e.appendChild(r, a);
                                        var a = e.createTextNode("下载Scrapy程序包\n                    ");
                                        e.appendChild(r, a), e.appendChild(n, r);
                                        var r = e.createTextNode(" ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = e.childAt(t, [2, 1]), a = e.childAt(t, [4, 0]), l = new Array(5);
                                        return l[0] = e.createMorphAt(t, 0, 0, n), l[1] = e.createAttrMorph(r, "href"), l[2] = e.createMorphAt(r, 1, 1), l[3] = e.createAttrMorph(a, "href"), l[4] = e.createMorphAt(a, 1, 1), e.insertBoundary(t, 0), l
                                    },
                                    statements: [["block", "if", [["subexpr", "and", [["get", "versionControlled", ["loc", [null, [52, 31], [52, 48]]]], ["get", "hasChanges", ["loc", [null, [52, 49], [52, 59]]]]], [], ["loc", [null, [52, 26], [52, 60]]]]], [], 0, 1, ["loc", [null, [52, 20], [72, 27]]]], ["attribute", "href", ["get", "downloadUrl", ["loc", [null, [73, 35], [73, 46]]]]], ["inline", "list-item-icon", [], ["class", "icon", "icon", "download"], ["loc", [null, [74, 24], [74, 71]]]], ["attribute", "href", ["get", "downloadCodeUrl", ["loc", [null, [76, 34], [76, 49]]]]], ["inline", "list-item-icon", [], ["class", "icon", "icon", "download"], ["loc", [null, [77, 24], [77, 67]]]]],
                                    locals: ["options"],
                                    templates: [e, t]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 39, column: 12}, end: {line: 82, column: 12}},
                                    moduleName: "portia-ui/templates/components/project-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("                ");
                                    e.appendChild(t, n);
                                    var n = e.createElement("div");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = e.childAt(t, [4]), a = new Array(3);
                                    return a[0] = e.createMorphAt(t, 0, 0, n), a[1] = e.createMorphAt(t, 2, 2, n), a[2] = e.createAttrMorph(r, "class"), e.insertBoundary(t, 0), a
                                },
                                statements: [["block", "link-to", ["projects.project", ["get", "project", ["loc", [null, [40, 46], [40, 53]]]]], [], 0, null, ["loc", [null, [40, 16], [46, 28]]]], ["block", "list-item-icon-menu", [], ["onClick", ["subexpr", "action", ["clickProjectOptions"], [], ["loc", [null, [49, 26], [49, 56]]]], "icon", "vertical-ellipsis"], 1, null, ["loc", [null, [48, 16], [79, 40]]]], ["attribute", "class", ["subexpr", "if", [["get", "isPulsing", ["loc", [null, [80, 32], [80, 41]]]], "droplet"], [], ["loc", [null, [80, 27], [80, 53]]]]]],
                                locals: [],
                                templates: [e, t]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 38, column: 8}, end: {line: 83, column: 8}},
                                moduleName: "portia-ui/templates/components/project-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("        ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                            },
                            statements: [["block", "tree-list-item", [], [], 0, null, ["loc", [null, [39, 12], [82, 31]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 38, column: 8}, end: {line: 83, column: 8}},
                            moduleName: "portia-ui/templates/components/project-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [38, 22], [38, 37]]]], "subtrees"], [], ["loc", [null, [38, 18], [38, 49]]]]], [], 0, null, ["loc", [null, [38, 8], [83, 8]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 84, column: 4}},
                        moduleName: "portia-ui/templates/components/project-listing.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [3, 18], [3, 33]]]], "item"], [], ["loc", [null, [3, 14], [3, 41]]]]], [], 0, 1, ["loc", [null, [3, 8], [83, 15]]]]],
                    locals: ["options"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 85, column: 0}},
                    moduleName: "portia-ui/templates/components/project-listing.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tree-list-item", [], ["hasChildren", !0], 0, null, ["loc", [null, [2, 4], [84, 23]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 86, column: 0}},
                moduleName: "portia-ui/templates/components/project-listing.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tree-list", [], [], 0, null, ["loc", [null, [1, 0], [85, 14]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/project-structure-listing", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 5, column: 20}, end: {line: 5, column: 96}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("s ");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: [],
                                templates: []
                            }
                        }(), t = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 7, column: 20}, end: {line: 20, column: 20}},
                                        moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("爬虫");
                                        e.appendChild(t, n);
                                        var n = e.createElement("p"),
                                            r = e.createTextNode("一种从网页上获取数据的爬虫.");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("");
                                        e.appendChild(t, n);
                                        var n = e.createElement("p"),
                                            r = e.createTextNode("通常需要对每个网站创建属于单独的爬虫, 但是一个爬虫也能爬取一个或多个的网站.");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("");
                                        e.appendChild(t, n);
                                        var n = e.createElement("p"),
                                            r = e.createTextNode("创建爬虫首先需要访问你想爬取的网站。");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function () {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 6, column: 16}, end: {line: 21, column: 16}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "help-icon", [], [], 0, null, ["loc", [null, [7, 20], [20, 34]]]]],
                                locals: [],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 4, column: 12}, end: {line: 23, column: 12}},
                                moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("爬虫");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(4);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r[3] = e.createMorphAt(t, 7, 7, n), r
                            },
                            statements: [["block", "animation-container", [], ["class", "inline", "hide", ["subexpr", "@mut", [["get", "currentSpider", ["loc", [null, [5, 63], [5, 76]]]]], [], []], "setHeight", !1], 0, null, ["loc", [null, [5, 20], [5, 120]]]], ["content", "pagination", ["loc", [null, [5, 126], [5, 140]]]], ["block", "animation-container", [], ["class", "inline", "setHeight", !1], 1, null, ["loc", [null, [6, 16], [21, 40]]]], ["inline", "spider-message", [], ["currentSpider", ["subexpr", "@mut", [["get", "currentSpider", ["loc", [null, [22, 47], [22, 60]]]]], [], []]], ["loc", [null, [22, 16], [22, 62]]]]],
                            locals: [],
                            templates: [e, t]
                        }
                    }(), t = function () {
                        var e = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 26, column: 20}, end: {line: 28, column: 20}},
                                        moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("显示所有爬虫");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function () {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 25, column: 16}, end: {line: 29, column: 16}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "link-to", ["projects.project", ["get", "project", ["loc", [null, [26, 50], [26, 57]]]]], ["class", "inline project-change"], 0, null, ["loc", [null, [26, 20], [28, 32]]]]],
                                locals: [],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 24, column: 12}, end: {line: 30, column: 12}},
                                moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "animation-container", [], [], 0, null, ["loc", [null, [25, 16], [29, 40]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }(), n = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 31, column: 16}, end: {line: 33, column: 16}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                    ");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                                },
                                statements: [["inline", "list-item-icon", [], ["id", "add-spider-button", "icon", "add", "disabled", ["subexpr", "not", [["get", "canAddSpider", ["loc", [null, [32, 85], [32, 97]]]]], [], ["loc", [null, [32, 80], [32, 98]]]], "action", ["subexpr", "action", ["addSpider"], [], ["loc", [null, [32, 106], [32, 126]]]]], ["loc", [null, [32, 20], [32, 128]]]]],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 30, column: 12}, end: {line: 34, column: 12}},
                                moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "tooltip-container", [], ["tooltipFor", "add-spider-button", "text", ["subexpr", "@mut", [["get", "addSpiderTooltipText", ["loc", [null, [31, 73], [31, 93]]]]], [], []], "tooltipContainer", "body"], 0, null, ["loc", [null, [31, 16], [33, 38]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 35, column: 8}},
                            moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "list-item-text", [], ["class", "title"], 0, null, ["loc", [null, [4, 12], [23, 31]]]], ["block", "if", [["get", "currentSpider", ["loc", [null, [24, 18], [24, 31]]]]], [], 1, 2, ["loc", [null, [24, 12], [34, 19]]]]],
                        locals: [],
                        templates: [e, t, n]
                    }
                }(), t = function () {
                    var e = function () {
                        var e = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 37, column: 16}, end: {line: 39, column: 16}},
                                        moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                    This project has no spiders\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function () {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 36, column: 12}, end: {line: 40, column: 12}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "list-item-text", [], ["class", "text-center"], 0, null, ["loc", [null, [37, 16], [39, 35]]]]],
                                locals: ["options"],
                                templates: [e]
                            }
                        }(), t = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 41, column: 12}, end: {line: 48, column: 12}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                    e.appendChild(t, n);
                                    var n = e.createElement("div");
                                    e.setAttribute(n, "class", "alert alert-info"), e.setAttribute(n, "role", "alert");
                                    var r = e.createTextNode("\n                    ");
                                    e.appendChild(n, r);
                                    var r = e.createElement("p"),
                                        a = e.createTextNode("\n                        To create a spider first visit a web page that you would like to start\n                        crawling from.\n                    ");
                                    e.appendChild(r, a), e.appendChild(n, r);
                                    var r = e.createTextNode("\n                ");
                                    e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createTextNode("\n")
                                    ;
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: ["options"],
                                templates: []
                            }
                        }(), n = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 51, column: 16}, end: {line: 60, column: 16}},
                                        moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                    ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("input");
                                        e.setAttribute(n, "class", "form-control"), e.setAttribute(n, "placeholder", "Search for your spider"), e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = e.childAt(t, [1]), a = new Array(2);
                                        return a[0] = e.createAttrMorph(r, "value"), a[1] = e.createAttrMorph(r, "oninput"), a
                                    },
                                    statements: [["attribute", "value", ["get", "spiderSearch", ["loc", [null, [55, 29], [55, 41]]]]], ["attribute", "oninput", ["subexpr", "perform", [["get", "filterSpiders", ["loc", [null, [56, 39], [56, 52]]]], ["get", "sortedSpiders", ["loc", [null, [57, 30], [57, 43]]]]], ["value", "target.value"], ["loc", [null, [56, 29], [58, 52]]]]]],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 50, column: 12}, end: {line: 61, column: 12}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "tree-list-item", [], [], 0, null, ["loc", [null, [51, 16], [60, 35]]]]],
                                locals: [],
                                templates: [e]
                            }
                        }(), r = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 64, column: 16}, end: {line: 69, column: 16}},
                                        moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                    ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("i");
                                        e.setAttribute(n, "class", "fa fa-angle-up twice-x clickable");
                                        var r = e.createTextNode("\n                    ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = e.childAt(t, [1]), a = new Array(1);
                                        return a[0] = e.createAttrMorph(r, "onclick"), a
                                    },
                                    statements: [["attribute", "onclick", ["subexpr", "perform", [["get", "turnPage", ["loc", [null, [66, 39], [66, 47]]]], -1], [], ["loc", [null, [66, 29], [66, 52]]]]]],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 63, column: 12}, end: {line: 70, column: 12}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "tree-list-item", [], ["isCentered", !0], 0, null, ["loc", [null, [64, 16], [69, 35]]]]],
                                locals: [],
                                templates: [e]
                            }
                        }(), a = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 73, column: 12}, end: {line: 75, column: 12}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                                },
                                statements: [["inline", "spider-row", [], ["spider", ["subexpr", "@mut", [["get", "spider", ["loc", [null, [74, 36], [74, 42]]]]], [], []], "project", ["subexpr", "@mut", [["get", "project", ["loc", [null, [74, 51], [74, 58]]]]], [], []]], ["loc", [null, [74, 16], [74, 60]]]]],
                                locals: ["spider"],
                                templates: []
                            }
                        }(), l = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 79, column: 16}, end: {line: 84, column: 16}},
                                        moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                    ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("i");
                                        e.setAttribute(n, "class", "fa fa-angle-down twice-x clickable");
                                        var r = e.createTextNode("\n                    ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = e.childAt(t, [1]), a = new Array(1);
                                        return a[0] = e.createAttrMorph(r, "onclick"), a
                                    },
                                    statements: [["attribute", "onclick", ["subexpr", "perform", [["get", "turnPage", ["loc", [null, [81, 39], [81, 47]]]], 1], [], ["loc", [null, [81, 29], [81, 51]]]]]],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 78, column: 12}, end: {line: 85, column: 12}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "tree-list-item", [], ["isCentered", !0], 0, null, ["loc", [null, [79, 16], [84, 35]]]]],
                                locals: [],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 35, column: 8}, end: {line: 87, column: 8}},
                                moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n            ");
                                e.appendChild(t, n);
                                var n = e.createElement("div"), r = e.createTextNode("\n");
                                e.appendChild(n, r);
                                var r = e.createComment("");
                                e.appendChild(n, r);
                                var r = e.createTextNode("            ");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createTextNode("\n\n");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n        ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = e.childAt(t, [7]), a = new Array(7);
                                return a[0] = e.createMorphAt(t, 0, 0, n), a[1] = e.createMorphAt(t, 1, 1, n), a[2] = e.createMorphAt(t, 3, 3, n), a[3] = e.createMorphAt(t, 5, 5, n), a[4] = e.createAttrMorph(r, "class"), a[5] = e.createMorphAt(r, 1, 1), a[6] = e.createMorphAt(t, 9, 9, n), e.insertBoundary(t, 0), a
                            },
                            statements: [["block", "tree-list-item", [], ["hide", ["subexpr", "or", [["get", "project.spiders.isPending", ["loc", [null, [36, 39], [36, 64]]]], ["get", "project.spiders.length", ["loc", [null, [36, 65], [36, 87]]]]], [], ["loc", [null, [36, 35], [36, 88]]]]], 0, null, ["loc", [null, [36, 12], [40, 31]]]], ["block", "tree-list-item", [], ["hide", ["subexpr", "or", [["get", "project.spiders.isPending", ["loc", [null, [41, 39], [41, 64]]]], ["get", "project.spiders.length", ["loc", [null, [41, 65], [41, 87]]]]], [], ["loc", [null, [41, 35], [41, 88]]]], "class", "help"], 1, null, ["loc", [null, [41, 12], [48, 31]]]], ["block", "if", [["subexpr", "and", [["get", "noCurrentSpider", ["loc", [null, [50, 23], [50, 38]]]], ["get", "isLarge", ["loc", [null, [50, 39], [50, 46]]]]], [], ["loc", [null, [50, 18], [50, 47]]]]], [], 2, null, ["loc", [null, [50, 12], [61, 19]]]], ["block", "if", [["subexpr", "and", [["get", "noCurrentSpider", ["loc", [null, [63, 23], [63, 38]]]], ["get", "hasPreviousPage", ["loc", [null, [63, 39], [63, 54]]]]], [], ["loc", [null, [63, 18], [63, 55]]]]], [], 3, null, ["loc", [null, [63, 12], [70, 19]]]], ["attribute", "class", ["subexpr", "if", [["get", "isFiltering", ["loc", [null, [72, 28], [72, 39]]]], "very-opaque"], [], ["loc", [null, [72, 23], [72, 55]]]]], ["block", "each", [["get", "spiders", ["loc", [null, [73, 20], [73, 27]]]]], [], 4, null, ["loc", [null, [73, 12], [75, 21]]]], ["block", "if", [["subexpr", "and", [["get", "noCurrentSpider", ["loc", [null, [78, 23], [78, 38]]]], ["get", "hasNextPage", ["loc", [null, [78, 39], [78, 50]]]]], [], ["loc", [null, [78, 18], [78, 51]]]]], [], 5, null, ["loc", [null, [78, 12], [85, 19]]]]],
                            locals: [],
                            templates: [e, t, n, r, a, l]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 35, column: 8}, end: {line: 87, column: 8}},
                            moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [35, 22], [35, 37]]]], "subtrees"], [], ["loc", [null, [35, 18], [35, 49]]]]], [], 0, null, ["loc", [null, [35, 8], [87, 8]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 88, column: 4}},
                        moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [3, 18], [3, 33]]]], "item"], [], ["loc", [null, [3, 14], [3, 41]]]]], [], 0, 1, ["loc", [null, [3, 8], [87, 15]]]]],
                    locals: ["options"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 89, column: 0}},
                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tree-list-item", [], ["hasChildren", !0], 0, null, ["loc", [null, [2, 4], [88, 23]]]]],
                locals: [],
                templates: [e]
            }
        }(), t = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 95, column: 27}, end: {line: 95, column: 102}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("s");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: [],
                                templates: []
                            }
                        }(), t = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {
                                            source: null,
                                            start: {line: 97, column: 20},
                                            end: {line: 110, column: 20}
                                        },
                                        moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                        Data Formats\n                        ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("p"),
                                            r = e.createTextNode("\n                            A data format describes the data that you want to extract.\n                        ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n                        ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("p"),
                                            r = e.createTextNode("\n                            Spiders can share a data format to extract the same logical data type from\n                            different web pages.\n                        ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n                        ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("p"),
                                            r = e.createTextNode("\n                            You can create data formats in advance, but you can also create them later,\n                            while annotating the data on a web page.\n                        ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function () {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 96, column: 16}, end: {line: 111, column: 16}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "help-icon", [], [], 0, null, ["loc", [null, [97, 20], [110, 34]]]]],
                                locals: [],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 94, column: 12}, end: {line: 112, column: 12}},
                                moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("数据格式化");
                                // e.appendChild(t, n);
                                // var n = e.createComment("");
                                // e.appendChild(t, n);
                                // var n = e.createTextNode("\n");
                                // e.appendChild(t, n);
                                // var n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(2);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "animation-container", [], ["class", "inline", "hide", ["subexpr", "@mut", [["get", "currentSchema", ["loc", [null, [95, 70], [95, 83]]]]], [], []], "setHeight", !1], 0, null, ["loc", [null, [95, 27], [95, 126]]]], ["block", "animation-container", [], ["class", "inline", "setHeight", !1], 1, null, ["loc", [null, [96, 16], [111, 40]]]]],
                            locals: [],
                            templates: [e, t]
                        }
                    }(), t = function () {
                        var e = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {
                                            source: null,
                                            start: {line: 115, column: 20},
                                            end: {line: 117, column: 20}
                                        },
                                        moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                        Show all schemas\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function () {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 114, column: 16}, end: {line: 118, column: 16}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "link-to", ["projects.project", ["get", "project", ["loc", [null, [115, 50], [115, 57]]]]], ["class", "inline project-change"], 0, null, ["loc", [null, [115, 20], [117, 32]]]]],
                                locals: [],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 113, column: 12}, end: {line: 119, column: 12}},
                                moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "animation-container", [], [], 0, null, ["loc", [null, [114, 16], [118, 40]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }(), n = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 120, column: 16}, end: {line: 122, column: 16}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                    ");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                                },
                                statements: [["inline", "list-item-icon", [], ["id", "add-schema-button", "icon", "add", "action", ["subexpr", "action", ["addSchema"], [], ["loc", [null, [121, 78], [121, 98]]]]], ["loc", [null, [121, 20], [121, 100]]]]],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 119, column: 12}, end: {line: 123, column: 12}},
                                moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "tooltip-container", [], ["tooltipFor", "add-schema-button", "text", "Create a new Schema", "tooltipContainer", "body"], 0, null, ["loc", [null, [120, 16], [122, 38]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 93, column: 8}, end: {line: 124, column: 8}},
                            moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "list-item-text", [], ["class", "title"], 0, null, ["loc", [null, [94, 12], [112, 31]]]], ["block", "if", [["get", "currentSchema", ["loc", [null, [113, 18], [113, 31]]]]], [], 1, 2, ["loc", [null, [113, 12], [123, 19]]]]],
                        locals: [],
                        templates: [e, t, n]
                    }
                }(), t = function () {
                    var e = function () {
                        var e = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {
                                            source: null,
                                            start: {line: 126, column: 16},
                                            end: {line: 128, column: 16}
                                        },
                                        moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                    This project has no data formats\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function () {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 125, column: 12}, end: {line: 129, column: 12}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "list-item-text", [], ["class", "text-center"], 0, null, ["loc", [null, [126, 16], [128, 35]]]]],
                                locals: ["options"],
                                templates: [e]
                            }
                        }(), t = function () {
                            var e = function () {
                                var e = function () {
                                    var e = function () {
                                        var e = function () {
                                            return {
                                                meta: {
                                                    fragmentReason: !1,
                                                    revision: "Ember@2.6.2",
                                                    loc: {
                                                        source: null,
                                                        start: {line: 134, column: 28},
                                                        end: {line: 136, column: 28}
                                                    },
                                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                                },
                                                isEmpty: !1,
                                                arity: 0,
                                                cachedFragment: null,
                                                hasRendered: !1,
                                                buildFragment: function (e) {
                                                    var t = e.createDocumentFragment(),
                                                        n = e.createTextNode("                                This Data Format will be used for new samples by default\n");
                                                    return e.appendChild(t, n), t
                                                },
                                                buildRenderNodes: function () {
                                                    return []
                                                },
                                                statements: [],
                                                locals: [],
                                                templates: []
                                            }
                                        }();
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 133, column: 24},
                                                    end: {line: 137, column: 24}
                                                },
                                                moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(), n = e.createComment("");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function (e, t, n) {
                                                var r = new Array(1);
                                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                            },
                                            statements: [["block", "help-icon", [], ["icon", "default-add", "placement", "right", "classes", "help-icon indentation-spacer"], 0, null, ["loc", [null, [134, 28], [136, 42]]]]],
                                            locals: [],
                                            templates: [e]
                                        }
                                    }(), t = function () {
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 137, column: 24},
                                                    end: {line: 139, column: 24}
                                                },
                                                moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode("                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function (e, t, n) {
                                                var r = new Array(1);
                                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                                            },
                                            statements: [["content", "indentation-spacer", ["loc", [null, [138, 28], [138, 50]]]]],
                                            locals: [],
                                            templates: []
                                        }
                                    }();
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 132, column: 20},
                                                end: {line: 142, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(), n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(3);
                                            return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), r[2] = e.createMorphAt(t, 4, 4, n), e.insertBoundary(t, 0), r
                                        },
                                        statements: [["block", "if", [["get", "schema.default", ["loc", [null, [133, 30], [133, 44]]]]], [], 0, 1, ["loc", [null, [133, 24], [139, 31]]]], ["inline", "list-item-icon", [], ["icon", "schema"], ["loc", [null, [140, 24], [140, 56]]]], ["inline", "list-item-editable", [], ["value", ["subexpr", "mut", [["get", "schema.name", ["loc", [null, [141, 56], [141, 67]]]]], [], ["loc", [null, [141, 51], [141, 68]]]], "editing", ["subexpr", "mut", [["get", "schema.new", ["loc", [null, [141, 82], [141, 92]]]]], [], ["loc", [null, [141, 77], [141, 93]]]], "onChange", ["subexpr", "action", ["saveSchema", ["get", "schema", ["loc", [null, [141, 124], [141, 130]]]]], [], ["loc", [null, [141, 103], [141, 131]]]]], ["loc", [null, [141, 24], [141, 133]]]]],
                                        locals: [],
                                        templates: [e, t]
                                    }
                                }(), t = function () {
                                    var e = function () {
                                        var e = function () {
                                            return {
                                                meta: {
                                                    fragmentReason: !1,
                                                    revision: "Ember@2.6.2",
                                                    loc: {
                                                        source: null,
                                                        start: {line: 145, column: 28},
                                                        end: {line: 149, column: 28}
                                                    },
                                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                                },
                                                isEmpty: !1,
                                                arity: 0,
                                                cachedFragment: null,
                                                hasRendered: !1,
                                                buildFragment: function (e) {
                                                    var t = e.createDocumentFragment(),
                                                        n = e.createTextNode("                                ");
                                                    e.appendChild(t, n);
                                                    var n = e.createElement("li"), r = e.createElement("a"),
                                                        a = e.createTextNode("\n                                ");
                                                    e.appendChild(r, a);
                                                    var a = e.createComment("");
                                                    e.appendChild(r, a);
                                                    var a = e.createTextNode("Remove as Default\n                                ");
                                                    e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                                                    var n = e.createTextNode("\n");
                                                    return e.appendChild(t, n), t
                                                },
                                                buildRenderNodes: function (e, t, n) {
                                                    var r = e.childAt(t, [1]), a = new Array(2);
                                                    return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(e.childAt(r, [0]), 1, 1), a
                                                },
                                                statements: [["element", "action", ["removeSchemaDefault", ["get", "schema", ["loc", [null, [146, 67], [146, 73]]]]], [], ["loc", [null, [146, 36], [146, 75]]]], ["inline", "list-item-icon", [], ["class", "icon", "icon", "default-remove"], ["loc", [null, [147, 32], [147, 85]]]]],
                                                locals: [],
                                                templates: []
                                            }
                                        }(), t = function () {
                                            return {
                                                meta: {
                                                    fragmentReason: !1,
                                                    revision: "Ember@2.6.2",
                                                    loc: {
                                                        source: null,
                                                        start: {line: 149, column: 28},
                                                        end: {line: 153, column: 28}
                                                    },
                                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                                },
                                                isEmpty: !1,
                                                arity: 0,
                                                cachedFragment: null,
                                                hasRendered: !1,
                                                buildFragment: function (e) {
                                                    var t = e.createDocumentFragment(),
                                                        n = e.createTextNode("                                ");
                                                    e.appendChild(t, n);
                                                    var n = e.createElement("li"), r = e.createElement("a"),
                                                        a = e.createTextNode("\n                                ");
                                                    e.appendChild(r, a);
                                                    var a = e.createComment("");
                                                    e.appendChild(r, a);
                                                    var a = e.createTextNode("Set as Default\n                                ");
                                                    e.appendChild(r, a), e.appendChild(n, r), e.appendChild(t, n);
                                                    var n = e.createTextNode("\n");
                                                    return e.appendChild(t, n), t
                                                },
                                                buildRenderNodes: function (e, t, n) {
                                                    var r = e.childAt(t, [1]), a = new Array(2);
                                                    return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(e.childAt(r, [0]), 1, 1), a
                                                },
                                                statements: [["element", "action", ["setSchemaDefault", ["get", "schema", ["loc", [null, [150, 64], [150, 70]]]]], [], ["loc", [null, [150, 36], [150, 72]]]], ["inline", "list-item-icon", [], ["class", "icon", "icon", "default-add"], ["loc", [null, [151, 32], [151, 82]]]]],
                                                locals: [],
                                                templates: []
                                            }
                                        }();
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 144, column: 24},
                                                    end: {line: 159, column: 24}
                                                },
                                                moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 1,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(), n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function (e, t, n) {
                                                var r = new Array(2);
                                                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), r
                                            },
                                            statements: [["block", "if", [["get", "schema.default", ["loc", [null, [145, 34], [145, 48]]]]], [], 0, 1, ["loc", [null, [145, 28], [153, 35]]]], ["inline", "dropdown-delete", [], ["onDelete", ["subexpr", "action", ["removeSchema", ["get", "schema", ["loc", [null, [155, 62], [155, 68]]]]], [], ["loc", [null, [155, 39], [155, 69]]]], "text", "Delete Schema", "disabled", ["subexpr", "gt", [["get", "schema.items.length", ["loc", [null, [157, 43], [157, 62]]]], 0], [], ["loc", [null, [157, 39], [157, 65]]]]], ["loc", [null, [154, 28], [158, 30]]]]],
                                            locals: ["options"],
                                            templates: [e, t]
                                        }
                                    }();
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 143, column: 20},
                                                end: {line: 160, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(), n = e.createComment("");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                        },
                                        statements: [["block", "list-item-icon-menu", [], ["icon", "vertical-ellipsis"], 0, null, ["loc", [null, [144, 24], [159, 48]]]]],
                                        locals: [],
                                        templates: [e]
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {
                                            source: null,
                                            start: {line: 131, column: 16},
                                            end: {line: 161, column: 16}
                                        },
                                        moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 1,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(2);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [["block", "link-to", ["projects.project.schema", ["get", "schema", ["loc", [null, [132, 57], [132, 63]]]]], [], 0, null, ["loc", [null, [132, 20], [142, 32]]]], ["block", "animation-container", [], ["class", "icon", "setWidth", !1, "setHeight", !1], 1, null, ["loc", [null, [143, 20], [160, 44]]]]],
                                    locals: ["options"],
                                    templates: [e, t]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 130, column: 12}, end: {line: 162, column: 12}},
                                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "tree-list-item", [], ["hide", ["subexpr", "and", [["get", "currentSchema", ["loc", [null, [131, 44], [131, 57]]]], ["subexpr", "not-eq", [["get", "schema", ["loc", [null, [131, 66], [131, 72]]]], ["get", "currentSchema", ["loc", [null, [131, 73], [131, 86]]]]], [], ["loc", [null, [131, 58], [131, 87]]]]], [], ["loc", [null, [131, 39], [131, 88]]]]], 0, null, ["loc", [null, [131, 16], [161, 35]]]]],
                                locals: ["schema"],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 124, column: 8}, end: {line: 163, column: 8}},
                                moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("        ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(2);
                                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), r
                            },
                            statements: [["block", "tree-list-item", [], ["hide", ["subexpr", "or", [["get", "project.schemas.isPending", ["loc", [null, [125, 39], [125, 64]]]], ["get", "project.schemas.length", ["loc", [null, [125, 65], [125, 87]]]]], [], ["loc", [null, [125, 35], [125, 88]]]]], 0, null, ["loc", [null, [125, 12], [129, 31]]]], ["block", "each", [["get", "project.schemas", ["loc", [null, [130, 20], [130, 35]]]]], [], 1, null, ["loc", [null, [130, 12], [162, 21]]]]],
                            locals: [],
                            templates: [e, t]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 124, column: 8}, end: {line: 163, column: 8}},
                            moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [124, 22], [124, 37]]]], "subtrees"], [], ["loc", [null, [124, 18], [124, 49]]]]], [], 0, null, ["loc", [null, [124, 8], [163, 8]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 92, column: 4}, end: {line: 164, column: 4}},
                        moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [93, 18], [93, 33]]]], "item"], [], ["loc", [null, [93, 14], [93, 41]]]]], [], 0, 1, ["loc", [null, [93, 8], [163, 15]]]]],
                    locals: ["options"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 91, column: 0}, end: {line: 165, column: 0}},
                    moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tree-list-item", [], ["hasChildren", !0], 0, null, ["loc", [null, [92, 4], [164, 23]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 166, column: 0}},
                moduleName: "portia-ui/templates/components/project-structure-listing.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tree-list", [], ["hide", ["subexpr", "@mut", [["get", "currentSchema", ["loc", [null, [1, 18], [1, 31]]]]], [], []]], 0, null, ["loc", [null, [1, 0], [89, 14]]]], ["block", "tree-list", [], ["hide", ["subexpr", "@mut", [["get", "currentSpider", ["loc", [null, [91, 18], [91, 31]]]]], [], []]], 1, null, ["loc", [null, [91, 0], [165, 14]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/project-structure-spider-feed-url", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 5, column: 8}, end: {line: 5, column: 55}},
                            moduleName: "portia-ui/templates/components/project-structure-spider-feed-url.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["content", "url", ["loc", [null, [5, 48], [5, 55]]]]],
                        locals: [],
                        templates: []
                    }
                }(), t = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 7, column: 12}, end: {line: 12, column: 12}},
                                moduleName: "portia-ui/templates/components/project-structure-spider-feed-url.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "list-item-icon", [], ["icon", "options"], ["loc", [null, [11, 16], [11, 49]]]]],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 8}, end: {line: 13, column: 8}},
                            moduleName: "portia-ui/templates/components/project-structure-spider-feed-url.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "link-to", ["projects.project.spider.start-url.options", ["get", "index", ["loc", [null, [7, 67], [7, 72]]]]], ["bubbles", !1, "class", "ignore-active"], 0, null, ["loc", [null, [7, 12], [12, 24]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 15, column: 4}},
                        moduleName: "portia-ui/templates/components/project-structure-spider-feed-url.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(5);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r[3] = e.createMorphAt(t, 7, 7, n), r[4] = e.createMorphAt(t, 9, 9, n), r
                    },
                    statements: [["content", "indentation-spacer", ["loc", [null, [3, 8], [3, 30]]]], ["inline", "list-item-icon", [], ["icon", "url-feed"], ["loc", [null, [4, 8], [4, 42]]]], ["block", "list-item-text", [], ["class", "txt-describe"], 0, null, ["loc", [null, [5, 8], [5, 74]]]], ["block", "link-to", ["projects.project.spider"], ["bubbles", !1], 1, null, ["loc", [null, [6, 8], [13, 20]]]], ["inline", "list-item-icon", [], ["icon", "remove", "action", ["subexpr", "action", [["get", "removeStartUrl", ["loc", [null, [14, 54], [14, 68]]]]], [], ["loc", [null, [14, 46], [14, 69]]]], "bubbles", !1], ["loc", [null, [14, 8], [14, 85]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 16, column: 0}},
                    moduleName: "portia-ui/templates/components/project-structure-spider-feed-url.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "link-to", ["projects.project.spider.start-url.options", ["get", "index", ["loc", [null, [2, 59], [2, 64]]]]], ["bubbles", !1], 0, null, ["loc", [null, [2, 4], [15, 16]]]]],
                locals: ["options"],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 17, column: 0}},
                moduleName: "portia-ui/templates/components/project-structure-spider-feed-url.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tree-list-item", [], [], 0, null, ["loc", [null, [1, 0], [16, 19]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/project-structure-spider-generated-url", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 5, column: 8}, end: {line: 5, column: 56}},
                            moduleName: "portia-ui/templates/components/project-structure-spider-generated-url.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["content", "url", ["loc", [null, [5, 49], [5, 56]]]]],
                        locals: [],
                        templates: []
                    }
                }(), t = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 7, column: 12}, end: {line: 9, column: 12}},
                                moduleName: "portia-ui/templates/components/project-structure-spider-generated-url.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "list-item-icon", [], ["icon", "options"], ["loc", [null, [8, 16], [8, 49]]]]],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 8}, end: {line: 10, column: 8}},
                            moduleName: "portia-ui/templates/components/project-structure-spider-generated-url.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "link-to", ["projects.project.spider.start-url.options", ["get", "index", ["loc", [null, [7, 67], [7, 72]]]]], ["bubbles", !1, "class", "ignore-active"], 0, null, ["loc", [null, [7, 12], [9, 24]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 12, column: 4}},
                        moduleName: "portia-ui/templates/components/project-structure-spider-generated-url.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(5);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r[3] = e.createMorphAt(t, 7, 7, n), r[4] = e.createMorphAt(t, 9, 9, n), r
                    },
                    statements: [["content", "indentation-spacer", ["loc", [null, [3, 8], [3, 30]]]], ["inline", "list-item-icon", [], ["icon", "url-generated"], ["loc", [null, [4, 8], [4, 47]]]], ["block", "list-item-text", [], ["class", "generated-url"], 0, null, ["loc", [null, [5, 8], [5, 75]]]], ["block", "link-to", ["projects.project.spider"], ["bubbles", !1], 1, null, ["loc", [null, [6, 8], [10, 20]]]], ["inline", "list-item-icon", [], ["icon", "remove", "action", ["subexpr", "action", [["get", "removeStartUrl", ["loc", [null, [11, 54], [11, 68]]]]], [], ["loc", [null, [11, 46], [11, 69]]]], "bubbles", !1], ["loc", [null, [11, 8], [11, 85]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 13, column: 0}},
                    moduleName: "portia-ui/templates/components/project-structure-spider-generated-url.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "link-to", ["projects.project.spider.start-url.options", ["get", "index", ["loc", [null, [2, 59], [2, 64]]]]], ["bubbles", !1], 0, null, ["loc", [null, [2, 4], [12, 16]]]]],
                locals: ["options"],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 14, column: 0}},
                moduleName: "portia-ui/templates/components/project-structure-spider-generated-url.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tree-list-item", [], [], 0, null, ["loc", [null, [1, 0], [13, 19]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/project-structure-spider-url", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 7, column: 4}},
                        moduleName: "portia-ui/templates/components/project-structure-spider-url.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(4);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r[3] = e.createMorphAt(t, 7, 7, n), r
                    },
                    statements: [["content", "indentation-spacer", ["loc", [null, [3, 8], [3, 30]]]], ["inline", "list-item-icon", [], ["icon", "url"], ["loc", [null, [4, 8], [4, 37]]]], ["inline", "list-item-editable", [], ["value", ["subexpr", "mut", [["get", "viewUrl", ["loc", [null, [5, 40], [5, 47]]]]], [], ["loc", [null, [5, 35], [5, 48]]]], "editing", ["subexpr", "mut", [["get", "urlAdded", ["loc", [null, [5, 62], [5, 70]]]]], [], ["loc", [null, [5, 57], [5, 71]]]], "spellcheck", !1], ["loc", [null, [5, 8], [5, 90]]]], ["inline", "list-item-icon", [], ["icon", "remove", "action", ["subexpr", "action", [["get", "removeStartUrl", ["loc", [null, [6, 54], [6, 68]]]]], [], ["loc", [null, [6, 46], [6, 69]]]], "bubbles", !1], ["loc", [null, [6, 8], [6, 85]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 8, column: 0}},
                    moduleName: "portia-ui/templates/components/project-structure-spider-url.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "link-to", ["projects.project.spider", ["get", "spider", ["loc", [null, [2, 41], [2, 47]]]], ["subexpr", "query-params", [], ["url", ["get", "url", ["loc", [null, [2, 66], [2, 69]]]], "baseurl", null], ["loc", [null, [2, 48], [2, 83]]]]], ["active", !1], 0, null, ["loc", [null, [2, 4], [7, 16]]]]],
                locals: ["options"],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 9, column: 0}},
                moduleName: "portia-ui/templates/components/project-structure-spider-url.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tree-list-item", [], [], 0, null, ["loc", [null, [1, 0], [8, 19]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/regex-pattern-list", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 4, column: 12}, end: {line: 7, column: 12}},
                                moduleName: "portia-ui/templates/components/regex-pattern-list.hbs"
                            },
                            isEmpty: !1,
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n                ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(2);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r
                            },
                            statements: [["inline", "list-item-editable", [], ["value", ["subexpr", "@mut", [["get", "item", ["loc", [null, [5, 43], [5, 47]]]]], [], []], "spellcheck", !1, "onChange", ["subexpr", "action", ["changePattern", ["get", "index", ["loc", [null, [5, 98], [5, 103]]]]], [], ["loc", [null, [5, 74], [5, 104]]]]], ["loc", [null, [5, 16], [5, 106]]]], ["inline", "list-item-icon", [], ["icon", "remove", "action", ["subexpr", "action", ["removePattern", ["get", "index", ["loc", [null, [6, 78], [6, 83]]]]], [], ["loc", [null, [6, 54], [6, 84]]]]], ["loc", [null, [6, 16], [6, 86]]]]],
                            locals: ["options"],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 8, column: 8}},
                            moduleName: "portia-ui/templates/components/regex-pattern-list.hbs"
                        },
                        isEmpty: !1,
                        arity: 2,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "tree-list-item", [], ["hasChildren", ["subexpr", "@mut", [["get", "spider.startUrls.length", ["loc", [null, [4, 42], [4, 65]]]]], [], []]], 0, null, ["loc", [null, [4, 12], [7, 31]]]]],
                        locals: ["item", "index"],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 9, column: 4}},
                        moduleName: "portia-ui/templates/components/regex-pattern-list.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "each", [["get", "list", ["loc", [null, [3, 16], [3, 20]]]]], [], 0, null, ["loc", [null, [3, 8], [8, 17]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), t = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 10, column: 8}, end: {line: 12, column: 8}},
                            moduleName: "portia-ui/templates/components/regex-pattern-list.hbs"
                        }, isEmpty: !1, arity: 1, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(),
                                n = e.createTextNode("            No patterns defined\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: ["options"], templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 9, column: 4}, end: {line: 13, column: 4}},
                        moduleName: "portia-ui/templates/components/regex-pattern-list.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "tree-list-item", [], ["hasChildren", ["subexpr", "@mut", [["get", "spider.startUrls.length", ["loc", [null, [10, 38], [10, 61]]]]], [], []]], 0, null, ["loc", [null, [10, 8], [12, 27]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 14, column: 0}},
                    moduleName: "portia-ui/templates/components/regex-pattern-list.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["get", "list.length", ["loc", [null, [2, 10], [2, 21]]]]], [], 0, 1, ["loc", [null, [2, 4], [13, 11]]]]],
                locals: [],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 22, column: 0}},
                moduleName: "portia-ui/templates/components/regex-pattern-list.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createElement("div"), r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div"), a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("span"),
                    a = e.createTextNode("The input value is not a valid regular expression.");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [1]), a = e.childAt(r, [1]), l = e.childAt(r, [3]), o = new Array(5);
                return o[0] = e.createMorphAt(t, 0, 0, n), o[1] = e.createAttrMorph(r, "class"), o[2] = e.createMorphAt(a, 1, 1), o[3] = e.createMorphAt(a, 3, 3), o[4] = e.createAttrMorph(l, "class"), e.insertBoundary(t, 0), o
            },
            statements: [["block", "tree-list", [], [], 0, null, ["loc", [null, [1, 0], [14, 14]]]], ["attribute", "class", ["concat", ["form-group new-pattern ", ["subexpr", "if", [["subexpr", "not", [["get", "newPatternCorrect", ["loc", [null, [15, 45], [15, 62]]]]], [], ["loc", [null, [15, 40], [15, 63]]]], "has-error"], [], ["loc", [null, [15, 35], [15, 77]]]]]]], ["inline", "input", [], ["type", "text", "class", "form-control", "placeholder", "Regular expression", "spellcheck", !1, "value", ["subexpr", "mut", [["get", "newPattern", ["loc", [null, [17, 110], [17, 120]]]]], [], ["loc", [null, [17, 105], [17, 121]]]], "change", ["subexpr", "action", ["stopPropagation"], [], ["loc", [null, [17, 129], [17, 155]]]], "escape-press", ["subexpr", "action", ["clearPattern"], [], ["loc", [null, [17, 169], [17, 192]]]], "insert-newline", ["subexpr", "action", ["addPattern"], [], ["loc", [null, [17, 208], [17, 229]]]]], ["loc", [null, [17, 8], [17, 231]]]], ["inline", "icon-button", [], ["icon", "add", "disabled", ["subexpr", "or", [["subexpr", "not", [["get", "newPattern", ["loc", [null, [18, 51], [18, 61]]]]], [], ["loc", [null, [18, 46], [18, 62]]]], ["subexpr", "not", [["get", "newPatternCorrect", ["loc", [null, [18, 68], [18, 85]]]]], [], ["loc", [null, [18, 63], [18, 86]]]]], [], ["loc", [null, [18, 42], [18, 87]]]], "action", ["subexpr", "action", ["addPattern", ["get", "newPattern", ["loc", [null, [18, 116], [18, 126]]]]], [], ["loc", [null, [18, 95], [18, 127]]]]], ["loc", [null, [18, 8], [18, 129]]]], ["attribute", "class", ["concat", ["help-block", ["subexpr", "if", [["get", "newPatternCorrect", ["loc", [null, [20, 32], [20, 49]]]], " hide"], [], ["loc", [null, [20, 27], [20, 59]]]]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/save-status", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                        moduleName: "portia-ui/templates/components/save-status.hbs"
                    }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createElement("p");
                        e.setAttribute(n, "class", "first");
                        var r = e.createTextNode("Every change you make is automatically saved by Portia");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    }, buildRenderNodes: function () {
                        return []
                    }, statements: [], locals: [], templates: []
                }
            }(), t = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 12}, end: {line: 8, column: 12}},
                            moduleName: "portia-ui/templates/components/save-status.hbs"
                        }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("正在保存...");
                            e.appendChild(t, n);
                            var n = e.createElement("span"), r = e.createTextNode(".");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createElement("span"), r = e.createTextNode(".");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createElement("span"), r = e.createTextNode(".");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: [], templates: []
                    }
                }(), t = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 8, column: 12}, end: {line: 10, column: 12}},
                                moduleName: "portia-ui/templates/components/save-status.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("最近一次保存");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["content", "timeSinceLastSave", ["loc", [null, [9, 27], [9, 48]]]]],
                            locals: [],
                            templates: []
                        }
                    }(), t = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 10, column: 12}, end: {line: 12, column: 12}},
                                moduleName: "portia-ui/templates/components/save-status.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("                变更后系统将自动保存\n            ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function () {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 8, column: 12}, end: {line: 12, column: 12}},
                            moduleName: "portia-ui/templates/components/save-status.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["get", "timeSinceLastSave", ["loc", [null, [8, 22], [8, 39]]]]], [], 0, 1, ["loc", [null, [8, 12], [12, 12]]]]],
                        locals: [],
                        templates: [e, t]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 4, column: 4}, end: {line: 14, column: 4}},
                        moduleName: "portia-ui/templates/components/save-status.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createElement("span"), r = e.createTextNode("\n");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode("        ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [1]), a = new Array(3);
                        return a[0] = e.createAttrMorph(r, "id"), a[1] = e.createAttrMorph(r, "class"), a[2] = e.createMorphAt(r, 1, 1), a
                    },
                    statements: [["attribute", "id", ["concat", ["label-", ["get", "elementId", ["loc", [null, [5, 26], [5, 35]]]]]]], ["attribute", "class", ["concat", ["label label-", ["get", "labelColorClass", ["loc", [null, [5, 60], [5, 75]]]]]]], ["block", "if", [["get", "isSaving", ["loc", [null, [6, 18], [6, 26]]]]], [], 0, 1, ["loc", [null, [6, 12], [12, 19]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 15, column: 0}},
                    moduleName: "portia-ui/templates/components/save-status.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "tooltip.section", ["loc", [null, [2, 14], [2, 29]]]], "tooltip"], [], ["loc", [null, [2, 10], [2, 40]]]]], [], 0, 1, ["loc", [null, [2, 4], [14, 11]]]]],
                locals: ["tooltip"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 16, column: 0}},
                moduleName: "portia-ui/templates/components/save-status.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tooltip-container", [], ["tooltipFor", ["subexpr", "concat", ["label-", ["get", "elementId", ["loc", [null, [1, 49], [1, 58]]]]], [], ["loc", [null, [1, 32], [1, 59]]]], "tooltipContainer", "body"], 0, null, ["loc", [null, [1, 0], [15, 22]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/schema-structure-listing", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 6, column: 16}, end: {line: 19, column: 16}},
                                    moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createTextNode("                    Fields\n                    ");
                                    e.appendChild(t, n);
                                    var n = e.createElement("p"),
                                        r = e.createTextNode("\n                        A field describes the type of a value that you want to extract.\n                    ");
                                    e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createTextNode("\n                    ");
                                    e.appendChild(t, n);
                                    var n = e.createElement("p"),
                                        r = e.createTextNode("\n                        Sample pages map the elements of a web page to the individual fields of a\n                        data format.\n                    ");
                                    e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createTextNode("\n                    ");
                                    e.appendChild(t, n);
                                    var n = e.createElement("p"),
                                        r = e.createTextNode("\n                        You can create fields in advance, but you can also create them later, while\n                        annotating the data on a web page.\n                    ");
                                    e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 4, column: 12}, end: {line: 20, column: 12}},
                                moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("字段");
                                // e.appendChild(t, n);
                                // var n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "help-icon", [], [], 0, null, ["loc", [null, [6, 16], [19, 30]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }(), t = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 21, column: 12}, end: {line: 23, column: 12}},
                                moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "list-item-icon", [], ["id", "add-field-button", "icon", "add", "action", ["subexpr", "action", ["addField"], [], ["loc", [null, [22, 73], [22, 92]]]]], ["loc", [null, [22, 16], [22, 94]]]]],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 24, column: 8}},
                            moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "list-item-text", [], ["class", "title"], 0, null, ["loc", [null, [4, 12], [20, 31]]]], ["block", "tooltip-container", [], ["tooltipFor", "add-field-button", "text", "Add field", "tooltipContainer", "body"], 1, null, ["loc", [null, [21, 12], [23, 34]]]]],
                        locals: [],
                        templates: [e, t]
                    }
                }(), t = function () {
                    var e = function () {
                        var e = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 26, column: 16}, end: {line: 28, column: 16}},
                                        moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                    This data format has no fields\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function () {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 25, column: 12}, end: {line: 29, column: 12}},
                                    moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "list-item-text", [], ["class", "text-center"], 0, null, ["loc", [null, [26, 16], [28, 35]]]]],
                                locals: ["options"],
                                templates: [e]
                            }
                        }(), t = function () {
                            var e = function () {
                                var e = function () {
                                    var e = function () {
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 36, column: 24},
                                                    end: {line: 38, column: 24}
                                                },
                                                moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode("                            Change field type\n");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function () {
                                                return []
                                            },
                                            statements: [],
                                            locals: [],
                                            templates: []
                                        }
                                    }(), t = function () {
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 39, column: 24},
                                                    end: {line: 41, column: 24}
                                                },
                                                moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode("                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function (e, t, n) {
                                                var r = new Array(1);
                                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                                            },
                                            statements: [["inline", "list-item-icon", [], ["icon", "options"], ["loc", [null, [40, 28], [40, 61]]]]],
                                            locals: [],
                                            templates: []
                                        }
                                    }();
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 32, column: 20},
                                                end: {line: 43, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(6);
                                            return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r[3] = e.createMorphAt(t, 7, 7, n), r[4] = e.createMorphAt(t, 8, 8, n), r[5] = e.createMorphAt(t, 10, 10, n), r
                                        },
                                        statements: [["content", "indentation-spacer", ["loc", [null, [33, 24], [33, 46]]]], ["inline", "list-item-icon", [], ["icon", ["subexpr", "@mut", [["get", "field.type", ["loc", [null, [34, 46], [34, 56]]]]], [], []]], ["loc", [null, [34, 24], [34, 58]]]], ["inline", "list-item-editable", [], ["value", ["subexpr", "mut", [["get", "field.name", ["loc", [null, [35, 56], [35, 66]]]]], [], ["loc", [null, [35, 51], [35, 67]]]], "editing", ["subexpr", "mut", [["get", "field.new", ["loc", [null, [35, 81], [35, 90]]]]], [], ["loc", [null, [35, 76], [35, 91]]]], "onChange", ["subexpr", "action", ["saveField", ["get", "field", ["loc", [null, [35, 121], [35, 126]]]]], [], ["loc", [null, [35, 101], [35, 127]]]], "validate", ["subexpr", "action", ["validateFieldName", ["get", "field", ["loc", [null, [35, 165], [35, 170]]]]], [], ["loc", [null, [35, 137], [35, 171]]]]], ["loc", [null, [35, 24], [35, 173]]]], ["block", "list-item-field-type", [], ["field", ["subexpr", "@mut", [["get", "field", ["loc", [null, [36, 54], [36, 59]]]]], [], []]], 0, null, ["loc", [null, [36, 24], [38, 49]]]], ["block", "link-to", ["projects.project.schema.field.options", ["get", "field", ["loc", [null, [39, 75], [39, 80]]]]], ["bubbles", !1, "class", "ignore-active"], 1, null, ["loc", [null, [39, 24], [41, 36]]]], ["inline", "list-item-icon", [], ["icon", "remove", "disabled", ["subexpr", "not", [["subexpr", "not", [["get", "field.annotations.length", ["loc", [null, [42, 74], [42, 98]]]]], [], ["loc", [null, [42, 69], [42, 99]]]]], [], ["loc", [null, [42, 64], [42, 100]]]], "action", ["subexpr", "action", ["removeField", ["get", "field", ["loc", [null, [42, 130], [42, 135]]]]], [], ["loc", [null, [42, 108], [42, 136]]]], "bubbles", !1], ["loc", [null, [42, 24], [42, 152]]]]],
                                        locals: [],
                                        templates: [e, t]
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 31, column: 16}, end: {line: 44, column: 16}},
                                        moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 1,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [["block", "link-to", ["projects.project.schema.field", ["get", "field", ["loc", [null, [32, 63], [32, 68]]]]], [], 0, null, ["loc", [null, [32, 20], [43, 32]]]]],
                                    locals: ["options"],
                                    templates: [e]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 30, column: 12}, end: {line: 45, column: 12}},
                                    moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "tree-list-item", [], [], 0, null, ["loc", [null, [31, 16], [44, 35]]]]],
                                locals: ["field"],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 24, column: 8}, end: {line: 46, column: 8}},
                                moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("        ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(2);
                                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), r
                            },
                            statements: [["block", "tree-list-item", [], ["hide", ["subexpr", "or", [["get", "schema.fields.isPending", ["loc", [null, [25, 39], [25, 62]]]], ["get", "schema.fields.length", ["loc", [null, [25, 63], [25, 83]]]]], [], ["loc", [null, [25, 35], [25, 84]]]]], 0, null, ["loc", [null, [25, 12], [29, 31]]]], ["block", "each", [["get", "schema.fields", ["loc", [null, [30, 20], [30, 33]]]]], [], 1, null, ["loc", [null, [30, 12], [45, 21]]]]],
                            locals: [],
                            templates: [e, t]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 24, column: 8}, end: {line: 46, column: 8}},
                            moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [24, 22], [24, 37]]]], "subtrees"], [], ["loc", [null, [24, 18], [24, 49]]]]], [], 0, null, ["loc", [null, [24, 8], [46, 8]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 47, column: 4}},
                        moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [3, 18], [3, 33]]]], "item"], [], ["loc", [null, [3, 14], [3, 41]]]]], [], 0, 1, ["loc", [null, [3, 8], [46, 15]]]]],
                    locals: ["options"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 48, column: 0}},
                    moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tree-list-item", [], ["hasChildren", !0], 0, null, ["loc", [null, [2, 4], [47, 23]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 49, column: 0}},
                moduleName: "portia-ui/templates/components/schema-structure-listing.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tree-list", [], [], 0, null, ["loc", [null, [1, 0], [48, 14]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/scrapinghub-links", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: !1,
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 6, column: 0}},
                moduleName: "portia-ui/templates/components/scrapinghub-links.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("li"), r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                // var r = e.createElement("a");
                // e.setAttribute(r, "href", "http://portia.readthedocs.org/en/2.0-docs/"), e.setAttribute(r, "target", "_blank");
                // var a = e.createTextNode("\n        Portia 2.0 Documentation\n    ");
                // e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function () {
                return []
            }, statements: [], locals: [], templates: []
        }
    }())
}), define("portia-ui/templates/components/select-box", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 16, column: 16}, end: {line: 18, column: 16}},
                            moduleName: "portia-ui/templates/components/select-box.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("                    ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["inline", "get", [["get", "viewValue", ["loc", [null, [17, 26], [17, 35]]]], ["get", "valueAttribute", ["loc", [null, [17, 36], [17, 50]]]]], [], ["loc", [null, [17, 20], [17, 52]]]]],
                        locals: [],
                        templates: []
                    }
                }(), t = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 18, column: 16}, end: {line: 20, column: 16}},
                            moduleName: "portia-ui/templates/components/select-box.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("                    ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["content", "viewValue", ["loc", [null, [19, 20], [19, 33]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 13, column: 4}, end: {line: 24, column: 4}},
                        moduleName: "portia-ui/templates/components/select-box.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                        e.appendChild(t, n);
                        var n = e.createElement("button");
                        e.setAttribute(n, "type", "button"), e.setAttribute(n, "aria-haspopup", "true"), e.setAttribute(n, "aria-expanded", "true");
                        var r = e.createTextNode("\n            ");
                        e.appendChild(n, r);
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "value");
                        var a = e.createTextNode("\n");
                        e.appendChild(r, a);
                        var a = e.createComment("");
                        e.appendChild(r, a);
                        var a = e.createTextNode("            ");
                        e.appendChild(r, a), e.appendChild(n, r);
                        var r = e.createTextNode("\n            ");
                        e.appendChild(n, r);
                        var r = e.createElement("span");
                        e.setAttribute(r, "class", "caret"), e.appendChild(n, r);
                        var r = e.createTextNode("\n        ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [1]), a = new Array(5);
                        return a[0] = e.createAttrMorph(r, "id"), a[1] = e.createAttrMorph(r, "class"), a[2] = e.createAttrMorph(r, "name"), a[3] = e.createElementMorph(r), a[4] = e.createMorphAt(e.childAt(r, [1]), 1, 1), a
                    },
                    statements: [["attribute", "id", ["concat", [["get", "inputId", ["loc", [null, [14, 18], [14, 25]]]]]]], ["attribute", "class", ["concat", ["btn btn-default form-control dropdown-toggle ", ["subexpr", "if", [["get", "buttonClass", ["loc", [null, [14, 86], [14, 97]]]], ["get", "buttonClass", ["loc", [null, [14, 98], [14, 109]]]]], [], ["loc", [null, [14, 81], [14, 111]]]], " ", ["subexpr", "if", [["get", "isDisabled", ["loc", [null, [14, 117], [14, 127]]]], "disabled"], [], ["loc", [null, [14, 112], [14, 140]]]]]]], ["attribute", "name", ["get", "name", ["loc", [null, [14, 163], [14, 167]]]]], ["element", "action", [["get", "widget.toggleMenu", ["loc", [null, [14, 221], [14, 238]]]], "button"], [], ["loc", [null, [14, 212], [14, 249]]]], ["block", "if", [["get", "valueAttribute", ["loc", [null, [16, 22], [16, 36]]]]], [], 0, 1, ["loc", [null, [16, 16], [20, 23]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }(), t = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 25, column: 8}, end: {line: 27, column: 8}},
                                moduleName: "portia-ui/templates/components/select-box.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "yield", [["subexpr", "hash", [], ["menu", ["get", "widget.menu", ["loc", [null, [26, 31], [26, 42]]]], "header", ["get", "widget.header", ["loc", [null, [26, 50], [26, 63]]]], "item", ["get", "widget.item", ["loc", [null, [26, 69], [26, 80]]]], "divider", ["get", "widget.divider", ["loc", [null, [26, 89], [26, 103]]]], "setValue", ["subexpr", "action", ["setValue"], [], ["loc", [null, [26, 113], [26, 132]]]], "setViewValue", ["subexpr", "action", ["setViewValue"], [], ["loc", [null, [26, 146], [26, 169]]]], "setValueAndClose", ["subexpr", "action", ["setValueAndClose"], [], ["loc", [null, [26, 187], [26, 214]]]], "closeMenu", ["get", "widget.closeMenu", ["loc", [null, [26, 225], [26, 241]]]]], ["loc", [null, [26, 20], [26, 242]]]]], [], ["loc", [null, [26, 12], [26, 244]]]]],
                            locals: [],
                            templates: []
                        }
                    }(), t = function () {
                        var e = function () {
                            var e = function () {
                                var e = function () {
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 30, column: 20},
                                                end: {line: 32, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/select-box.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                                        },
                                        statements: [["inline", "get", [["get", "choice", ["loc", [null, [31, 30], [31, 36]]]], ["get", "valueAttribute", ["loc", [null, [31, 37], [31, 51]]]]], [], ["loc", [null, [31, 24], [31, 53]]]]],
                                        locals: [],
                                        templates: []
                                    }
                                }(), t = function () {
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 32, column: 20},
                                                end: {line: 34, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/select-box.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                                        },
                                        statements: [["content", "choice", ["loc", [null, [33, 24], [33, 34]]]]],
                                        locals: [],
                                        templates: []
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 29, column: 16}, end: {line: 35, column: 16}},
                                        moduleName: "portia-ui/templates/components/select-box.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [["block", "if", [["get", "valueAttribute", ["loc", [null, [30, 26], [30, 40]]]]], [], 0, 1, ["loc", [null, [30, 20], [34, 27]]]]],
                                    locals: [],
                                    templates: [e, t]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 28, column: 12}, end: {line: 36, column: 12}},
                                    moduleName: "portia-ui/templates/components/select-box.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "widget.item", [], ["value", ["subexpr", "@mut", [["get", "choice", ["loc", [null, [29, 37], [29, 43]]]]], [], []], "action", ["subexpr", "action", ["setValueAndClose", ["get", "choice", ["loc", [null, [29, 78], [29, 84]]]]], [], ["loc", [null, [29, 51], [29, 85]]]]], 0, null, ["loc", [null, [29, 16], [35, 32]]]]],
                                locals: ["choice"],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 27, column: 8}, end: {line: 37, column: 8}},
                                moduleName: "portia-ui/templates/components/select-box.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "each", [["get", "choices", ["loc", [null, [28, 20], [28, 27]]]]], [], 0, null, ["loc", [null, [28, 12], [36, 21]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 24, column: 4}, end: {line: 38, column: 4}},
                            moduleName: "portia-ui/templates/components/select-box.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                        },
                        statements: [["block", "if", [["get", "hasBlock", ["loc", [null, [25, 14], [25, 22]]]]], [], 0, 1, ["loc", [null, [25, 8], [37, 15]]]]],
                        locals: [],
                        templates: [e, t]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 24, column: 4}, end: {line: 38, column: 4}},
                        moduleName: "portia-ui/templates/components/select-box.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "widget.section", ["loc", [null, [24, 18], [24, 32]]]], "menu"], [], ["loc", [null, [24, 14], [24, 40]]]]], [], 0, null, ["loc", [null, [24, 4], [38, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 39, column: 0}},
                    moduleName: "portia-ui/templates/components/select-box.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("\n");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "widget.section", ["loc", [null, [13, 14], [13, 28]]]], "widget"], [], ["loc", [null, [13, 10], [13, 38]]]]], [], 0, 1, ["loc", [null, [13, 4], [38, 11]]]]],
                locals: ["widget"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 40, column: 0}},
                moduleName: "portia-ui/templates/components/select-box.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "dropdown-widget", [], ["class", "select-box", "open", ["subexpr", "mut", [["get", "open", ["loc", [null, [3, 12], [3, 16]]]]], [], ["loc", [null, [3, 7], [3, 17]]]], "active", ["subexpr", "mut", [["get", "viewValue", ["loc", [null, [4, 14], [4, 23]]]]], [], ["loc", [null, [4, 9], [4, 24]]]], "focused", ["subexpr", "@mut", [["get", "value", ["loc", [null, [5, 10], [5, 15]]]]], [], []], "menuContainer", ["subexpr", "@mut", [["get", "menuContainer", ["loc", [null, [6, 16], [6, 29]]]]], [], []], "menuClass", ["subexpr", "@mut", [["get", "menuClass", ["loc", [null, [7, 12], [7, 21]]]]], [], []], "menuAlign", ["subexpr", "@mut", [["get", "menuAlign", ["loc", [null, [8, 12], [8, 21]]]]], [], []], "isDisabled", ["subexpr", "@mut", [["get", "isDisabled", ["loc", [null, [9, 13], [9, 23]]]]], [], []], "onClick", ["subexpr", "action", ["menuClicked"], [], ["loc", [null, [10, 10], [10, 32]]]], "onClose", ["subexpr", "action", ["menuClosed"], [], ["loc", [null, [11, 10], [11, 31]]]]], 0, null, ["loc", [null, [1, 0], [39, 20]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/show-links-button", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: {name: "modifiers", modifiers: ["action"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 5, column: 0}},
                    moduleName: "portia-ui/templates/components/show-links-button.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("button");
                    e.setAttribute(n, "id", "show-links-button");
                    var r = e.createTextNode("\n        ");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("\n    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = e.childAt(t, [1]), a = new Array(4);
                    return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createAttrMorph(r, "disabled"), a[2] = e.createElementMorph(r), a[3] = e.createMorphAt(r, 1, 1), a
                },
                statements: [["attribute", "class", ["concat", ["btn btn-default ", ["subexpr", "if", [["get", "spider.showLinks", ["loc", [null, [2, 63], [2, 79]]]], "active"], [], ["loc", [null, [2, 58], [2, 90]]]]]]], ["attribute", "disabled", ["get", "disableLinks", ["loc", [null, [2, 103], [2, 115]]]]], ["element", "action", ["toggleShowLinks"], [], ["loc", [null, [2, 118], [2, 146]]]], ["inline", "icon-button", [], ["icon", "link"], ["loc", [null, [3, 8], [3, 35]]]]],
                locals: ["options"],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 6, column: 0}},
                moduleName: "portia-ui/templates/components/show-links-button.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tooltip-container", [], ["tooltipFor", "show-links-button", "text", "Toggle link highlighting", "tooltipContainer", "body"], 0, null, ["loc", [null, [1, 0], [5, 22]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/show-links-legend", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 5, column: 4}},
                        moduleName: "portia-ui/templates/components/show-links-legend.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n        Followed\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "list-item-badge", [], ["value", ["subexpr", "@mut", [["get", "followedLinks", ["loc", [null, [3, 32], [3, 45]]]]], [], []], "color", ["subexpr", "@mut", [["get", "colors.green", ["loc", [null, [3, 52], [3, 64]]]]], [], []]], ["loc", [null, [3, 8], [3, 66]]]]],
                    locals: ["options"],
                    templates: []
                }
            }(), t = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 6, column: 4}, end: {line: 9, column: 4}},
                        moduleName: "portia-ui/templates/components/show-links-legend.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n        Followed when Javascript is enabled\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "list-item-badge", [], ["value", ["subexpr", "@mut", [["get", "jsLinks", ["loc", [null, [7, 32], [7, 39]]]]], [], []], "color", ["subexpr", "@mut", [["get", "colors.blue", ["loc", [null, [7, 46], [7, 57]]]]], [], []]], ["loc", [null, [7, 8], [7, 59]]]]],
                    locals: ["options"],
                    templates: []
                }
            }(), n = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 10, column: 4}, end: {line: 13, column: 4}},
                        moduleName: "portia-ui/templates/components/show-links-legend.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n        Not Followed\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "list-item-badge", [], ["value", ["subexpr", "@mut", [["get", "ignoredLinks", ["loc", [null, [11, 32], [11, 44]]]]], [], []], "color", ["subexpr", "@mut", [["get", "colors.red", ["loc", [null, [11, 51], [11, 61]]]]], [], []]], ["loc", [null, [11, 8], [11, 63]]]]],
                    locals: ["options"],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 14, column: 0}},
                    moduleName: "portia-ui/templates/components/show-links-legend.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(3);
                    return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), r[2] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tree-list-item", [], [], 0, null, ["loc", [null, [2, 4], [5, 23]]]], ["block", "tree-list-item", [], [], 1, null, ["loc", [null, [6, 4], [9, 23]]]], ["block", "tree-list-item", [], [], 2, null, ["loc", [null, [10, 4], [13, 23]]]]],
                locals: [],
                templates: [e, t, n]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 15, column: 0}},
                moduleName: "portia-ui/templates/components/show-links-legend.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tree-list", [], [], 0, null, ["loc", [null, [1, 0], [14, 14]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/sliding-main", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/components/sliding-main.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            }, statements: [["content", "yield", ["loc", [null, [1, 0], [1, 9]]]]], locals: [], templates: []
        }
    }())
}), define("portia-ui/templates/components/spider-indentation", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/components/spider-indentation.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            },
            statements: [["content", "indentation-spacer", ["loc", [null, [1, 0], [1, 22]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/components/spider-message", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                        moduleName: "portia-ui/templates/components/spider-message.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "list-item-icon", [], ["id", "run-spider-button", "icon", "play", "action", ["subexpr", "action", ["runSpider", ["get", "currentSpider", ["loc", [null, [3, 87], [3, 100]]]]], [], ["loc", [null, [3, 67], [3, 101]]]]], ["loc", [null, [3, 8], [3, 103]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 5, column: 0}},
                    moduleName: "portia-ui/templates/components/spider-message.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tooltip-container", [], ["tooltipFor", "run-spider-button", "text", "Run this spider.", "tooltipContainer", "body"], 0, null, ["loc", [null, [2, 4], [4, 26]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 5, column: 7}},
                moduleName: "portia-ui/templates/components/spider-message.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["get", "hasSpider", ["loc", [null, [1, 6], [1, 15]]]]], [], 0, null, ["loc", [null, [1, 0], [5, 7]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/spider-options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 8, column: 4}, end: {line: 21, column: 4}},
                    moduleName: "portia-ui/templates/components/spider-options.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "form-group");
                    var r = e.createTextNode("\n            ");
                    e.appendChild(n, r);
                    var r = e.createElement("label");
                    e.setAttribute(r, "for", "loginUrl");
                    var a = e.createTextNode("Login URL");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createTextNode("\n            ");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("\n        ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n        ");
                    e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "form-group");
                    var r = e.createTextNode("\n            ");
                    e.appendChild(n, r);
                    var r = e.createElement("label");
                    e.setAttribute(r, "for", "loginUser");
                    var a = e.createTextNode("Username");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createTextNode("\n            ");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("\n        ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n        ");
                    e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "form-group");
                    var r = e.createTextNode("\n            ");
                    e.appendChild(n, r);
                    var r = e.createElement("label");
                    e.setAttribute(r, "for", "loginPassword");
                    var a = e.createTextNode("Password");
                    e.appendChild(r, a), e.appendChild(n, r);
                    var r = e.createTextNode("\n            ");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("\n        ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(3);
                    return r[0] = e.createMorphAt(e.childAt(t, [1]), 3, 3), r[1] = e.createMorphAt(e.childAt(t, [3]), 3, 3), r[2] = e.createMorphAt(e.childAt(t, [5]), 3, 3), r
                },
                statements: [["inline", "input", [], ["type", "url", "class", "form-control", "id", "loginUrl", "value", ["subexpr", "mut", [["get", "spider.loginUrl", ["loc", [null, [11, 77], [11, 92]]]]], [], ["loc", [null, [11, 72], [11, 93]]]]], ["loc", [null, [11, 12], [11, 95]]]], ["inline", "input", [], ["type", "text", "class", "form-control", "id", "loginUser", "value", ["subexpr", "mut", [["get", "spider.loginUser", ["loc", [null, [15, 79], [15, 95]]]]], [], ["loc", [null, [15, 74], [15, 96]]]]], ["loc", [null, [15, 12], [15, 98]]]], ["inline", "input", [], ["type", "text", "class", "form-control", "id", "loginPassword", "value", ["subexpr", "mut", [["get", "spider.loginPassword", ["loc", [null, [19, 83], [19, 103]]]]], [], ["loc", [null, [19, 78], [19, 104]]]]], ["loc", [null, [19, 12], [19, 106]]]]],
                locals: [],
                templates: []
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 31, column: 4}, end: {line: 36, column: 4}},
                    moduleName: "portia-ui/templates/components/spider-options.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createElement("div"),
                        r = e.createTextNode("Enable Javascript for URLs that match these patterns");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n        ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n        ");
                    e.appendChild(t, n);
                    var n = e.createElement("div"),
                        r = e.createTextNode("Disable Javascript for URLs that match these patterns");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n        ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(2);
                    return r[0] = e.createMorphAt(t, 3, 3, n), r[1] = e.createMorphAt(t, 7, 7, n), r
                },
                statements: [["inline", "regex-pattern-list", [], ["list", ["subexpr", "@mut", [["get", "spider.jsEnablePatterns", ["loc", [null, [33, 34], [33, 57]]]]], [], []], "onChange", ["subexpr", "action", ["save"], [], ["loc", [null, [33, 67], [33, 82]]]]], ["loc", [null, [33, 8], [33, 84]]]], ["inline", "regex-pattern-list", [], ["list", ["subexpr", "@mut", [["get", "spider.jsDisablePatterns", ["loc", [null, [35, 34], [35, 58]]]]], [], []], "onChange", ["subexpr", "action", ["save"], [], ["loc", [null, [35, 68], [35, 83]]]]], ["loc", [null, [35, 8], [35, 85]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 38, column: 0}},
                moduleName: "portia-ui/templates/components/spider-options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("h3"), r = e.createTextNode("Initialization");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createElement("form"), r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "checkbox");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("label"), l = e.createTextNode("\n            ");
                e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createTextNode(" Perform login\n        ");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n\n");
                e.appendChild(t, n);
                var n = e.createElement("h3"), r = e.createTextNode("Javascript support");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createElement("form"), r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "checkbox");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("label"), l = e.createTextNode("\n            ");
                e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createTextNode(" Enable Javascript\n        ");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [2]), a = e.childAt(t, [6]), l = new Array(6);
                return l[0] = e.createElementMorph(r), l[1] = e.createMorphAt(e.childAt(r, [1, 1]), 1, 1), l[2] = e.createMorphAt(r, 3, 3), l[3] = e.createElementMorph(a), l[4] = e.createMorphAt(e.childAt(a, [1, 1]), 1, 1), l[5] = e.createMorphAt(a, 3, 3), l
            },
            statements: [["element", "action", ["save"], ["on", "change"], ["loc", [null, [2, 6], [2, 35]]]], ["inline", "input", [], ["type", "checkbox", "name", "performLogin", "checked", ["subexpr", "mut", [["get", "spider.performLogin", ["loc", [null, [5, 69], [5, 88]]]]], [], ["loc", [null, [5, 64], [5, 89]]]]], ["loc", [null, [5, 12], [5, 91]]]], ["block", "if", [["get", "spider.performLogin", ["loc", [null, [8, 10], [8, 29]]]]], [], 0, null, ["loc", [null, [8, 4], [21, 11]]]], ["element", "action", ["save"], ["on", "change"], ["loc", [null, [25, 6], [25, 35]]]], ["inline", "input", [], ["type", "checkbox", "name", "jsEnabled", "checked", ["subexpr", "mut", [["get", "spider.jsEnabled", ["loc", [null, [28, 66], [28, 82]]]]], [], ["loc", [null, [28, 61], [28, 83]]]]], ["loc", [null, [28, 12], [28, 85]]]], ["block", "if", [["get", "spider.jsEnabled", ["loc", [null, [31, 10], [31, 26]]]]], [], 1, null, ["loc", [null, [31, 4], [36, 11]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/spider-row", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 7, column: 12}, end: {line: 7, column: 51}},
                                moduleName: "portia-ui/templates/components/spider-row.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["content", "spider.nameAlias", ["loc", [null, [7, 31], [7, 51]]]]],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 8}, end: {line: 8, column: 8}},
                            moduleName: "portia-ui/templates/components/spider-row.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["block", "list-item-text", [], [], 0, null, ["loc", [null, [7, 12], [7, 70]]]]],
                        locals: [],
                        templates: [e]
                    }
                }(), t = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 8, column: 8}, end: {line: 10, column: 8}},
                            moduleName: "portia-ui/templates/components/spider-row.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["inline", "list-item-editable", [], ["value", ["subexpr", "mut", [["get", "spider.nameAlias", ["loc", [null, [9, 44], [9, 60]]]]], [], ["loc", [null, [9, 39], [9, 61]]]], "onChange", ["subexpr", "action", ["saveSpiderName", ["get", "spider", ["loc", [null, [9, 96], [9, 102]]]]], [], ["loc", [null, [9, 71], [9, 103]]]], "validate", ["subexpr", "action", ["validateSpiderName", ["get", "spider", ["loc", [null, [9, 142], [9, 148]]]]], [], ["loc", [null, [9, 113], [9, 149]]]]], ["loc", [null, [9, 12], [9, 151]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 11, column: 4}},
                        moduleName: "portia-ui/templates/components/spider-row.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n\n");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(3);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), e.insertBoundary(t, null), r
                    },
                    statements: [["inline", "spider-indentation", [], ["spider", ["subexpr", "@mut", [["get", "spider", ["loc", [null, [3, 36], [3, 42]]]]], [], []], "currentSpider", ["subexpr", "@mut", [["get", "currentSpider", ["loc", [null, [3, 57], [3, 70]]]]], [], []]], ["loc", [null, [3, 8], [3, 72]]]], ["inline", "list-item-icon", [], ["icon", "spider"], ["loc", [null, [4, 8], [4, 40]]]], ["block", "if", [["get", "currentSpider", ["loc", [null, [6, 14], [6, 27]]]]], [], 0, 1, ["loc", [null, [6, 8], [10, 15]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }(), t = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 25, column: 12}, end: {line: 32, column: 12}},
                                moduleName: "portia-ui/templates/components/spider-row.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "project-list", [], ["projects", ["subexpr", "@mut", [["get", "projects", ["loc", [null, [27, 27], [27, 35]]]]], [], []], "withinDropdown", !0, "onClear", ["subexpr", "action", ["closeSpiderOptions"], [], ["loc", [null, [29, 26], [29, 55]]]], "selectProject", ["subexpr", "action", ["copyToProject", ["get", "options", ["loc", [null, [30, 56], [30, 63]]]]], [], ["loc", [null, [30, 32], [30, 64]]]]], ["loc", [null, [26, 16], [31, 18]]]]],
                            locals: [],
                            templates: []
                        }
                    }(), t = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 33, column: 16}, end: {line: 36, column: 16}},
                                    moduleName: "portia-ui/templates/components/spider-row.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                    ");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(2);
                                    return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 2, 2, n), r
                                },
                                statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", "copy"], ["loc", [null, [35, 20], [35, 63]]]], ["content", "value", ["loc", [null, [35, 63], [35, 72]]]]],
                                locals: ["value"],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 32, column: 12}, end: {line: 37, column: 12}},
                                moduleName: "portia-ui/templates/components/spider-row.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["none", "options.item", [], ["value", "拷贝", "action", ["subexpr", "action", ["copySpider"], [], ["loc", [null, [34, 25], [34, 46]]]]], 0, null, ["loc", [null, [33, 16], [36, 33]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 14, column: 8}, end: {line: 42, column: 8}},
                            moduleName: "portia-ui/templates/components/spider-row.hbs"
                        },
                        isEmpty: !1,
                        arity: 1,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createElement("li"), r = e.createTextNode("\n              ");
                            n.style.display = "none";
                            e.appendChild(n, r);
                            var r = e.createElement("a");
                            e.setAttribute(r, "target", "_blank");
                            var a = e.createTextNode("\n                  ");
                            e.appendChild(r, a);
                            var a = e.createComment("");
                            e.appendChild(r, a);
                            var a = e.createTextNode("Download as Portia\n                ");
                            e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createTextNode("\n            ");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n            ");
                            e.appendChild(t, n);
                            var n = e.createElement("li"), r = e.createTextNode("\n              ");
                            e.appendChild(n, r);
                            var r = e.createElement("a");
                            e.setAttribute(r, "target", "_blank");
                            var a = e.createTextNode("\n                  ");
                            e.appendChild(r, a);
                            var a = e.createComment("");
                            e.appendChild(r, a);
                            var a = e.createTextNode("下载Scrapy程序包\n                ");
                            e.appendChild(r, a), e.appendChild(n, r);
                            var r = e.createTextNode("\n            ");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("            ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = e.childAt(t, [1, 1]), a = e.childAt(t, [3, 1]), l = new Array(6);
                            return l[0] = e.createAttrMorph(r, "href"), l[1] = e.createMorphAt(r, 1, 1), l[2] = e.createAttrMorph(a, "href"), l[3] = e.createMorphAt(a, 1, 1), l[4] = e.createMorphAt(t, 5, 5, n), l[5] = e.createMorphAt(t, 7, 7, n), l
                        },
                        statements: [["attribute", "href", ["get", "downloadUrl", ["loc", [null, [16, 24], [16, 35]]]]], ["inline", "list-item-icon", [], ["class", "icon", "icon", "download"], ["loc", [null, [17, 18], [17, 65]]]], ["attribute", "href", ["get", "downloadCodeUrl", ["loc", [null, [21, 24], [21, 39]]]]], ["inline", "list-item-icon", [], ["class", "icon", "icon", "download"], ["loc", [null, [22, 18], [22, 61]]]], ["block", "if", [["get", "isCopyingSpider", ["loc", [null, [25, 18], [25, 33]]]]], [], 0, 1, ["loc", [null, [25, 12], [37, 19]]]], ["inline", "dropdown-delete", [], ["onDelete", ["subexpr", "action", ["removeSpider", ["get", "spider", ["loc", [null, [39, 46], [39, 52]]]]], [], ["loc", [null, [39, 23], [39, 53]]]], "text", "删除爬虫"], ["loc", [null, [38, 12], [41, 14]]]]],
                        locals: ["options"],
                        templates: [e, t]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 13, column: 4}, end: {line: 43, column: 4}},
                        moduleName: "portia-ui/templates/components/spider-row.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "list-item-icon-menu", [], ["icon", "vertical-ellipsis"], 0, null, ["loc", [null, [14, 8], [42, 32]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), n = function () {
                var e = function () {
                    var e = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 48, column: 16}, end: {line: 50, column: 16}},
                                    moduleName: "portia-ui/templates/components/spider-row.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                    ");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                                },
                                statements: [["inline", "list-item-icon", [], ["icon", "options"], ["loc", [null, [49, 20], [49, 53]]]]],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 47, column: 12}, end: {line: 51, column: 12}},
                                moduleName: "portia-ui/templates/components/spider-row.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "link-to", ["projects.project.spider.options"], ["bubbles", !1, "class", "ignore-active"], 0, null, ["loc", [null, [48, 16], [50, 28]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 46, column: 8}, end: {line: 52, column: 8}},
                            moduleName: "portia-ui/templates/components/spider-row.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "link-to", ["projects.project.spider"], ["id", ["subexpr", "concat", ["spider-options-button", ["subexpr", "guid", [["get", "spider", ["loc", [null, [47, 90], [47, 96]]]]], [], ["loc", [null, [47, 84], [47, 97]]]]], [], ["loc", [null, [47, 52], [47, 98]]]], "bubbles", !1], 0, null, ["loc", [null, [47, 12], [51, 24]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 45, column: 4}, end: {line: 53, column: 4}},
                        moduleName: "portia-ui/templates/components/spider-row.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "tooltip-container", [], ["tooltipFor", ["subexpr", "concat", ["spider-options-button", ["subexpr", "guid", [["get", "spider", ["loc", [null, [46, 78], [46, 84]]]]], [], ["loc", [null, [46, 72], [46, 85]]]]], [], ["loc", [null, [46, 40], [46, 86]]]], "text", "Advanced spider options", "tooltipContainer", "body"], 0, null, ["loc", [null, [46, 8], [52, 30]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 55, column: 0}},
                    moduleName: "portia-ui/templates/components/spider-row.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(3);
                    return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), r[2] = e.createMorphAt(t, 4, 4, n), e.insertBoundary(t, 0), r
                },
                statements: [["block", "link-to", ["projects.project.spider", ["get", "spider", ["loc", [null, [2, 41], [2, 47]]]], ["subexpr", "query-params", [], ["url", ["subexpr", "or", [["get", "spider.firstUrl", ["loc", [null, [2, 70], [2, 85]]]], null], [], ["loc", [null, [2, 66], [2, 91]]]], "baseurl", null], ["loc", [null, [2, 48], [2, 105]]]]], ["current-when", "projects.project.spider"], 0, null, ["loc", [null, [2, 4], [11, 16]]]], ["block", "animation-container", [], ["class", "icon", "setWidth", !1, "setHeight", !1], 1, null, ["loc", [null, [13, 4], [43, 28]]]], ["block", "animation-container", [], ["class", "icon", "hide", ["subexpr", "not-eq", [["get", "spider", ["loc", [null, [45, 53], [45, 59]]]], ["get", "currentSpider", ["loc", [null, [45, 60], [45, 73]]]]], [], ["loc", [null, [45, 45], [45, 74]]]], "setWidth", !1, "setHeight", !1], 2, null, ["loc", [null, [45, 4], [53, 28]]]]],
                locals: ["options"],
                templates: [e, t, n]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 57, column: 0}},
                moduleName: "portia-ui/templates/components/spider-row.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            },
            statements: [["block", "tree-list-item", [], ["hide", ["subexpr", "and", [["get", "currentSpider", ["loc", [null, [1, 28], [1, 41]]]], ["subexpr", "not-eq", [["get", "spider", ["loc", [null, [1, 50], [1, 56]]]], ["get", "currentSpider", ["loc", [null, [1, 57], [1, 70]]]]], [], ["loc", [null, [1, 42], [1, 71]]]]], [], ["loc", [null, [1, 23], [1, 72]]]]], 0, null, ["loc", [null, [1, 0], [55, 19]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/spider-structure-listing", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 6, column: 16}, end: {line: 21, column: 16}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(),
                                        n = e.createTextNode("                    Start Pages\n                    ");
                                    e.appendChild(t, n);
                                    var n = e.createElement("p"),
                                        r = e.createTextNode("\n                        Start pages are web pages that a spider will begin its crawl from. It will\n                        then continue to other web pages according to the defined link crawling\n                        rules.\n                    ");
                                    e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createTextNode("\n                    ");
                                    e.appendChild(t, n);
                                    var n = e.createElement("p"),
                                        r = e.createTextNode("\n                        Start pages also restrict the domains that a spider will crawl. A spider\n                        will never follow a link that goes to a domain not included in the start\n                        pages.\n                    ");
                                    e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createTextNode("\n                    ");
                                    e.appendChild(t, n);
                                    var n = e.createElement("p"),
                                        r = e.createTextNode("\n                        Without a start page the spider cannot begin crawling.\n                    ");
                                    e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 4, column: 12}, end: {line: 22, column: 12}},
                                moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("开始页面");
                                // e.appendChild(t, n);
                                // var n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "help-icon", [], [], 0, null, ["loc", [null, [6, 16], [21, 30]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }(), t = function () {
                        var e = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 25, column: 20}, end: {line: 28, column: 20}},
                                        moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 1,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                        ");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(2);
                                        return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 2, 2, n), r
                                    },
                                    statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", "url"], ["loc", [null, [27, 24], [27, 66]]]], ["content", "value", ["loc", [null, [27, 66], [27, 75]]]]],
                                    locals: ["value"],
                                    templates: []
                                }
                            }(), t = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 29, column: 20}, end: {line: 31, column: 20}},
                                        moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 1,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                        ");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(2);
                                        return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 2, 2, n), r
                                    },
                                    statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", "url-generated"], ["loc", [null, [30, 24], [30, 76]]]], ["content", "value", ["loc", [null, [30, 76], [30, 85]]]]],
                                    locals: ["value"],
                                    templates: []
                                }
                            }(), n = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 32, column: 20}, end: {line: 35, column: 20}},
                                        moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 1,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                        ");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(2);
                                        return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 2, 2, n), r
                                    },
                                    statements: [["inline", "list-item-icon", [], ["class", "icon", "icon", "url-feed"], ["loc", [null, [34, 24], [34, 71]]]], ["content", "value", ["loc", [null, [34, 71], [34, 80]]]]],
                                    locals: ["value"],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 24, column: 16}, end: {line: 36, column: 16}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    e.appendChild(t, n)
                                    ;var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(3);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), r[2] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "options.item", [], ["value", "Add fixed URL", "action", ["subexpr", "chain-actions", [["subexpr", "action", [["get", "closeOptions", ["loc", [null, [26, 52], [26, 64]]]]], [], ["loc", [null, [26, 44], [26, 65]]]], ["subexpr", "action", ["addStartUrl"], [], ["loc", [null, [26, 66], [26, 88]]]], ["get", "options.closeMenu", ["loc", [null, [26, 89], [26, 106]]]]], [], ["loc", [null, [26, 29], [26, 107]]]]], 0, null, ["loc", [null, [25, 20], [28, 37]]]], ["block", "options.item", [], ["value", "Add generation URL", "action", ["subexpr", "chain-actions", [["subexpr", "action", ["addGenerationUrl"], [], ["loc", [null, [29, 85], [29, 112]]]], ["get", "options.closeMenu", ["loc", [null, [29, 113], [29, 130]]]]], [], ["loc", [null, [29, 70], [29, 131]]]]], 1, null, ["loc", [null, [29, 20], [31, 37]]]], ["block", "options.item", [], ["value", "Add feed URL", "action", ["subexpr", "chain-actions", [["subexpr", "action", [["get", "closeOptions", ["loc", [null, [33, 52], [33, 64]]]]], [], ["loc", [null, [33, 44], [33, 65]]]], ["subexpr", "action", ["addFeedUrl"], [], ["loc", [null, [33, 66], [33, 87]]]], ["get", "options.closeMenu", ["loc", [null, [33, 88], [33, 105]]]]], [], ["loc", [null, [33, 29], [33, 106]]]]], 2, null, ["loc", [null, [32, 20], [35, 37]]]]],
                                locals: ["options"],
                                templates: [e, t, n]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 23, column: 12}, end: {line: 37, column: 12}},
                                moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "list-item-icon-menu", [], ["icon", "add-dropdown"], 0, null, ["loc", [null, [24, 16], [36, 40]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 38, column: 8}},
                            moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "list-item-text", [], ["class", "title"], 0, null, ["loc", [null, [4, 12], [22, 31]]]], ["block", "tooltip-container", [], ["tooltipFor", "add-start-url-button", "text", "Start crawling from the current page", "tooltipContainer", "body"], 1, null, ["loc", [null, [23, 12], [37, 34]]]]],
                        locals: [],
                        templates: [e, t]
                    }
                }(), t = function () {
                    var e = function () {
                        var e = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 40, column: 16}, end: {line: 42, column: 16}},
                                        moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                    This spider has no start pages\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function () {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 39, column: 12}, end: {line: 43, column: 12}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "list-item-text", [], ["class", "text-center"], 0, null, ["loc", [null, [40, 16], [42, 35]]]]],
                                locals: ["options"],
                                templates: [e]
                            }
                        }(), t = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 44, column: 12}, end: {line: 50, column: 12}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                    e.appendChild(t, n);
                                    var n = e.createElement("div");
                                    e.setAttribute(n, "class", "alert alert-warning"), e.setAttribute(n, "role", "alert");
                                    var r = e.createTextNode("\n                    ");
                                    e.appendChild(n, r);
                                    var r = e.createElement("p"),
                                        a = e.createTextNode("\n                        A spider needs at least one start page to start crawling from.\n                    ");
                                    e.appendChild(r, a), e.appendChild(n, r);
                                    var r = e.createTextNode("\n                ");
                                    e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: ["options"],
                                templates: []
                            }
                        }(), n = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 52, column: 16}, end: {line: 59, column: 16}},
                                        moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                    ");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                                    },
                                    statements: [["inline", "component", [["get", "startUrl.componentName", ["loc", [null, [53, 32], [53, 54]]]]], ["index", ["subexpr", "@mut", [["get", "index", ["loc", [null, [54, 32], [54, 37]]]]], [], []], "spider", ["subexpr", "@mut", [["get", "spider", ["loc", [null, [55, 33], [55, 39]]]]], [], []], "startUrl", ["subexpr", "@mut", [["get", "startUrl", ["loc", [null, [56, 35], [56, 43]]]]], [], []], "removeStartUrl", ["subexpr", "action", ["removeStartUrl", ["get", "startUrl", ["loc", [null, [57, 66], [57, 74]]]]], [], ["loc", [null, [57, 41], [57, 75]]]]], ["loc", [null, [53, 20], [58, 22]]]]],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 51, column: 12}, end: {line: 60, column: 12}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 2,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "if", [["subexpr", "or", [["subexpr", "not", [["get", "newUrl", ["loc", [null, [52, 31], [52, 37]]]]], [], ["loc", [null, [52, 26], [52, 38]]]], ["subexpr", "not-eq", [["get", "urlValue", ["loc", [null, [52, 47], [52, 55]]]], ["get", "startUrl.url", ["loc", [null, [52, 56], [52, 68]]]]], [], ["loc", [null, [52, 39], [52, 69]]]]], [], ["loc", [null, [52, 22], [52, 70]]]]], [], 0, null, ["loc", [null, [52, 16], [59, 23]]]]],
                                locals: ["startUrl", "index"],
                                templates: [e]
                            }
                        }(), r = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 61, column: 12}, end: {line: 69, column: 12}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                                },
                                statements: [["inline", "project-structure-spider-url", [], ["spider", ["subexpr", "@mut", [["get", "spider", ["loc", [null, [63, 25], [63, 31]]]]], [], []], "startUrl", ["subexpr", "@mut", [["get", "newStartUrl", ["loc", [null, [64, 27], [64, 38]]]]], [], []], "url", ["subexpr", "@mut", [["get", "urlValue", ["loc", [null, [65, 22], [65, 30]]]]], [], []], "urlAdded", ["subexpr", "mut", [["get", "newUrl", ["loc", [null, [66, 32], [66, 38]]]]], [], ["loc", [null, [66, 27], [66, 39]]]], "removeStartUrl", ["subexpr", "action", ["removeStartUrl", ["get", "newUrl", ["loc", [null, [67, 58], [67, 64]]]]], [], ["loc", [null, [67, 33], [67, 65]]]]], ["loc", [null, [62, 16], [68, 18]]]]],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 38, column: 8}, end: {line: 70, column: 8}},
                                moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("        ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(4);
                                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), r[2] = e.createMorphAt(t, 2, 2, n), r[3] = e.createMorphAt(t, 3, 3, n), e.insertBoundary(t, 0), r
                            },
                            statements: [["block", "tree-list-item", [], ["hide", ["subexpr", "@mut", [["get", "spider.startUrls.length", ["loc", [null, [39, 35], [39, 58]]]]], [], []]], 0, null, ["loc", [null, [39, 12], [43, 31]]]], ["block", "tree-list-item", [], ["hide", ["subexpr", "@mut", [["get", "spider.startUrls.length", ["loc", [null, [44, 35], [44, 58]]]]], [], []], "class", "help"], 1, null, ["loc", [null, [44, 12], [50, 31]]]], ["block", "each", [["get", "spider.startUrls", ["loc", [null, [51, 20], [51, 36]]]]], ["key", "@index"], 2, null, ["loc", [null, [51, 12], [60, 21]]]], ["block", "if", [["get", "newUrl", ["loc", [null, [61, 18], [61, 24]]]]], [], 3, null, ["loc", [null, [61, 12], [69, 19]]]]],
                            locals: [],
                            templates: [e, t, n, r]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 38, column: 8}, end: {line: 70, column: 8}},
                            moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [38, 22], [38, 37]]]], "subtrees"], [], ["loc", [null, [38, 18], [38, 49]]]]], [], 0, null, ["loc", [null, [38, 8], [70, 8]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 71, column: 4}},
                        moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [3, 18], [3, 33]]]], "item"], [], ["loc", [null, [3, 14], [3, 41]]]]], [], 0, 1, ["loc", [null, [3, 8], [70, 15]]]]],
                    locals: ["options"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 72, column: 0}},
                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tree-list-item", [], ["hasChildren", !0], 0, null, ["loc", [null, [2, 4], [71, 23]]]]],
                locals: [],
                templates: [e]
            }
        }(), t = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 77, column: 12}, end: {line: 79, column: 12}},
                                moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("爬取链接");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function () {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 76, column: 8}, end: {line: 80, column: 8}},
                            moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "list-item-text", [], ["class", "title"], 0, null, ["loc", [null, [77, 12], [79, 31]]]]],
                        locals: [],
                        templates: [e]
                    }
                }(), t = function () {
                    var e = function () {
                        var e = function () {
                            var e = function () {
                                var e = function () {
                                    var e = function () {
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 87, column: 24},
                                                    end: {line: 89, column: 24}
                                                },
                                                moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode("                            ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function (e, t, n) {
                                                var r = new Array(1);
                                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                                            },
                                            statements: [["inline", "list-item-icon", [], ["icon", "options"], ["loc", [null, [88, 28], [88, 61]]]]],
                                            locals: [],
                                            templates: []
                                        }
                                    }();
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 86, column: 20},
                                                end: {line: 90, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(), n = e.createComment("");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                        },
                                        statements: [["block", "link-to", ["projects.project.spider.link-options"], ["bubbles", !1, "class", "ignore-active"], 0, null, ["loc", [null, [87, 24], [89, 36]]]]],
                                        locals: [],
                                        templates: [e]
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 85, column: 16}, end: {line: 91, column: 16}},
                                        moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [["block", "link-to", ["projects.project.spider"], ["bubbles", !1], 0, null, ["loc", [null, [86, 20], [90, 32]]]]],
                                    locals: [],
                                    templates: [e]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 81, column: 12}, end: {line: 92, column: 12}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n                ");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n                ");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(4);
                                    return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r[3] = e.createMorphAt(t, 7, 7, n), e.insertBoundary(t, null), r
                                },
                                statements: [["content", "indentation-spacer", ["loc", [null, [82, 16], [82, 38]]]], ["inline", "list-item-icon", [], ["icon", "link"], ["loc", [null, [83, 16], [83, 46]]]], ["inline", "list-item-link-crawling", [], ["spider", ["subexpr", "@mut", [["get", "spider", ["loc", [null, [84, 49], [84, 55]]]]], [], []]], ["loc", [null, [84, 16], [84, 57]]]], ["block", "if", [["subexpr", "not-eq", [["get", "spider.linksToFollow", ["loc", [null, [85, 30], [85, 50]]]], "none"], [], ["loc", [null, [85, 22], [85, 58]]]]], [], 0, null, ["loc", [null, [85, 16], [91, 23]]]]],
                                locals: ["options"],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 80, column: 8}, end: {line: 93, column: 8}},
                                moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("        ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                            },
                            statements: [["block", "tree-list-item", [], [], 0, null, ["loc", [null, [81, 12], [92, 31]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 80, column: 8}, end: {line: 93, column: 8}},
                            moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [80, 22], [80, 37]]]], "subtrees"], [], ["loc", [null, [80, 18], [80, 49]]]]], [], 0, null, ["loc", [null, [80, 8], [93, 8]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 75, column: 4}, end: {line: 94, column: 4}},
                        moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [76, 18], [76, 33]]]], "item"], [], ["loc", [null, [76, 14], [76, 41]]]]], [], 0, 1, ["loc", [null, [76, 8], [93, 15]]]]],
                    locals: ["options"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 74, column: 0}, end: {line: 95, column: 0}},
                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tree-list-item", [], ["hasChildren", !0], 0, null, ["loc", [null, [75, 4], [94, 23]]]]],
                locals: [],
                templates: [e]
            }
        }(), n = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 101, column: 27}, end: {line: 101, column: 102}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("s");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: [],
                                templates: []
                            }
                        }(), t = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {
                                            source: null,
                                            start: {line: 103, column: 20},
                                            end: {line: 117, column: 20}
                                        },
                                        moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                        Sample Pages\n                        ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("p"),
                                            r = e.createTextNode("\n                            A sample page is a web page with the data you want to extract annotated.\n                        ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n                        ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("p"),
                                            r = e.createTextNode("\n                            When the spider crawls to a new web page it finds the sample page that is\n                            the best match, and uses it to extract data.\n                        ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n                        ");
                                        e.appendChild(t, n);
                                        var n = e.createElement("p"),
                                            r = e.createTextNode("\n                            If you see a web page that the spider is having trouble extracting data\n                            from, you can create a new sample page from that web page to improve the\n                            extraction.\n                        ");
                                        e.appendChild(n, r), e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function () {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 102, column: 16}, end: {line: 118, column: 16}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "help-icon", [], [], 0, null, ["loc", [null, [103, 20], [117, 34]]]]],
                                locals: [],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 100, column: 12}, end: {line: 119, column: 12}},
                                moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("模版页面");
                                // e.appendChild(t, n);
                                // var n = e.createComment("");
                                // e.appendChild(t, n);
                                // var n = e.createTextNode("\n");
                                // e.appendChild(t, n);
                                // var n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(2);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "animation-container", [], ["class", "inline", "hide", ["subexpr", "@mut", [["get", "currentSample", ["loc", [null, [101, 70], [101, 83]]]]], [], []], "setHeight", !1], 0, null, ["loc", [null, [101, 27], [101, 126]]]], ["block", "animation-container", [], ["class", "inline", "setHeight", !1], 1, null, ["loc", [null, [102, 16], [118, 40]]]]],
                            locals: [],
                            templates: [e, t]
                        }
                    }(), t = function () {
                        var e = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {
                                            source: null,
                                            start: {line: 122, column: 20},
                                            end: {line: 124, column: 20}
                                        },
                                        moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                        Show all samples\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function () {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 121, column: 16}, end: {line: 125, column: 16}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "link-to", ["projects.project.spider", ["get", "spider", ["loc", [null, [122, 57], [122, 63]]]]], [], 0, null, ["loc", [null, [122, 20], [124, 32]]]]],
                                locals: [],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 120, column: 12}, end: {line: 126, column: 12}},
                                moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "animation-container", [], [], 0, null, ["loc", [null, [121, 16], [125, 40]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }(), n = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 127, column: 16}, end: {line: 129, column: 16}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                    ");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                                },
                                statements: [["inline", "list-item-icon", [], ["id", "add-sample-button", "icon", "add", "disabled", ["subexpr", "not", [["get", "canAddSample", ["loc", [null, [128, 85], [128, 97]]]]], [], ["loc", [null, [128, 80], [128, 98]]]], "action", ["subexpr", "action", ["addSample"], [], ["loc", [null, [128, 106], [128, 126]]]]], ["loc", [null, [128, 20], [128, 128]]]]],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 126, column: 12}, end: {line: 130, column: 12}},
                                moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                            },
                            statements: [["block", "tooltip-container", [], ["tooltipFor", "add-sample-button", "text", "Create a new sample from the current page", "tooltipContainer", "body"], 0, null, ["loc", [null, [127, 16], [129, 38]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 99, column: 8}, end: {line: 131, column: 8}},
                            moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(2);
                            return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "list-item-text", [], ["class", "title"], 0, null, ["loc", [null, [100, 12], [119, 31]]]], ["block", "if", [["get", "currentSample", ["loc", [null, [120, 18], [120, 31]]]]], [], 1, 2, ["loc", [null, [120, 12], [130, 19]]]]],
                        locals: [],
                        templates: [e, t, n]
                    }
                }(), t = function () {
                    var e = function () {
                        var e = function () {
                            var e = function () {
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {
                                            source: null,
                                            start: {line: 133, column: 16},
                                            end: {line: 135, column: 16}
                                        },
                                        moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 0,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(),
                                            n = e.createTextNode("                    This spider has no sample pages\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function () {
                                        return []
                                    },
                                    statements: [],
                                    locals: [],
                                    templates: []
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 132, column: 12}, end: {line: 136, column: 12}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "list-item-text", [], ["class", "text-center"], 0, null, ["loc", [null, [133, 16], [135, 35]]]]],
                                locals: ["options"],
                                templates: [e]
                            }
                        }(), t = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 137, column: 12}, end: {line: 144, column: 12}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                    e.appendChild(t, n);
                                    var n = e.createElement("div");
                                    e.setAttribute(n, "class", "alert alert-info"), e.setAttribute(n, "role", "alert");
                                    var r = e.createTextNode("\n                    ");
                                    e.appendChild(n, r);
                                    var r = e.createElement("p"),
                                        a = e.createTextNode("\n                        Navigate to a web page that has the data you need, and create a new sample\n                        page to begin annotating the data.\n                    ");
                                    e.appendChild(r, a), e.appendChild(n, r);
                                    var r = e.createTextNode("\n                ");
                                    e.appendChild(n, r), e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function () {
                                    return []
                                },
                                statements: [],
                                locals: ["options"],
                                templates: []
                            }
                        }(), n = function () {
                            var e = function () {
                                var e = function () {
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 147, column: 20},
                                                end: {line: 151, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(3);
                                            return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r
                                        },
                                        statements: [["content", "indentation-spacer", ["loc", [null, [148, 24], [148, 46]]]], ["inline", "list-item-icon", [], ["icon", "sample"], ["loc", [null, [149, 24], [149, 56]]]], ["inline", "list-item-editable", [], ["value", ["subexpr", "mut", [["get", "sample.name", ["loc", [null, [150, 56], [150, 67]]]]], [], ["loc", [null, [150, 51], [150, 68]]]], "editing", ["subexpr", "mut", [["get", "sample.new", ["loc", [null, [150, 82], [150, 92]]]]], [], ["loc", [null, [150, 77], [150, 93]]]], "onChange", ["subexpr", "action", ["saveSample", ["get", "sample", ["loc", [null, [150, 124], [150, 130]]]]], [], ["loc", [null, [150, 103], [150, 131]]]]], ["loc", [null, [150, 24], [150, 133]]]]],
                                        locals: [],
                                        templates: []
                                    }
                                }(), t = function () {
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 153, column: 20},
                                                end: {line: 158, column: 20}
                                            },
                                            moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 1,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(),
                                                n = e.createTextNode("                        ");
                                            e.appendChild(t, n);
                                            var n = e.createComment("");
                                            e.appendChild(t, n);
                                            var n = e.createTextNode("\n");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                                        },
                                        statements: [["inline", "dropdown-delete", [], ["onDelete", ["subexpr", "action", ["removeSample", ["get", "sample", ["loc", [null, [155, 58], [155, 64]]]]], [], ["loc", [null, [155, 35], [155, 65]]]], "text", "删除模版"], ["loc", [null, [154, 24], [157, 26]]]]],
                                        locals: ["options"],
                                        templates: []
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {
                                            source: null,
                                            start: {line: 146, column: 16},
                                            end: {line: 160, column: 16}
                                        },
                                        moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 1,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        e.appendChild(t, n);
                                        var n = e.createComment("");
                                        e.appendChild(t, n);
                                        var n = e.createTextNode("\n");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(2);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), r
                                    },
                                    statements: [["block", "link-to", ["projects.project.spider.sample", ["get", "sample", ["loc", [null, [147, 64], [147, 70]]]], ["subexpr", "query-params", [], ["url", ["get", "sample.url", ["loc", [null, [147, 89], [147, 99]]]], "baseurl", null], ["loc", [null, [147, 71], [147, 113]]]]], ["current-when", "projects.project.spider.sample"], 0, null, ["loc", [null, [147, 20], [151, 32]]]], ["block", "list-item-icon-menu", [], ["icon", "vertical-ellipsis"], 1, null, ["loc", [null, [153, 20], [158, 44]]]]],
                                    locals: ["options"],
                                    templates: [e, t]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 145, column: 12}, end: {line: 161, column: 12}},
                                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "tree-list-item", [], ["hide", ["subexpr", "and", [["get", "currentSample", ["loc", [null, [146, 44], [146, 57]]]], ["subexpr", "not-eq", [["get", "sample", ["loc", [null, [146, 66], [146, 72]]]], ["get", "currentSample", ["loc", [null, [146, 73], [146, 86]]]]], [], ["loc", [null, [146, 58], [146, 87]]]]], [], ["loc", [null, [146, 39], [146, 88]]]]], 0, null, ["loc", [null, [146, 16], [160, 35]]]]],
                                locals: ["sample"],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 131, column: 8}, end: {line: 162, column: 8}},
                                moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("        ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(3);
                                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 1, 1, n), r[2] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), r
                            },
                            statements: [["block", "tree-list-item", [], ["hide", ["subexpr", "or", [["get", "spider.samples.isPending", ["loc", [null, [132, 39], [132, 63]]]], ["get", "spider.samples.length", ["loc", [null, [132, 64], [132, 85]]]]], [], ["loc", [null, [132, 35], [132, 86]]]]], 0, null, ["loc", [null, [132, 12], [136, 31]]]], ["block", "tree-list-item", [], ["hide", ["subexpr", "or", [["get", "spider.samples.isPending", ["loc", [null, [137, 39], [137, 63]]]], ["get", "spider.samples.length", ["loc", [null, [137, 64], [137, 85]]]]], [], ["loc", [null, [137, 35], [137, 86]]]], "class", "help"], 1, null, ["loc", [null, [137, 12], [144, 31]]]], ["block", "each", [["get", "spider.samples", ["loc", [null, [145, 20], [145, 34]]]]], [], 2, null, ["loc", [null, [145, 12], [161, 21]]]]],
                            locals: [],
                            templates: [e, t, n]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 131, column: 8}, end: {line: 162, column: 8}},
                            moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [131, 22], [131, 37]]]], "subtrees"], [], ["loc", [null, [131, 18], [131, 49]]]]], [], 0, null, ["loc", [null, [131, 8], [162, 8]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 98, column: 4}, end: {line: 163, column: 4}},
                        moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [99, 18], [99, 33]]]], "item"], [], ["loc", [null, [99, 14], [99, 41]]]]], [], 0, 1, ["loc", [null, [99, 8], [162, 15]]]]],
                    locals: ["options"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 97, column: 0}, end: {line: 164, column: 0}},
                    moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tree-list-item", [], ["hasChildren", !0], 0, null, ["loc", [null, [98, 4], [163, 23]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 165, column: 0}},
                moduleName: "portia-ui/templates/components/spider-structure-listing.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(3);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), r[2] = e.createMorphAt(t, 4, 4, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tree-list", [], ["hide", ["subexpr", "@mut", [["get", "currentSample", ["loc", [null, [1, 18], [1, 31]]]]], [], []]], 0, null, ["loc", [null, [1, 0], [72, 14]]]], ["block", "tree-list", [], ["hide", ["subexpr", "@mut", [["get", "currentSample", ["loc", [null, [74, 18], [74, 31]]]]], [], []]], 1, null, ["loc", [null, [74, 0], [95, 14]]]], ["block", "tree-list", [], [], 2, null, ["loc", [null, [97, 0], [164, 14]]]]],
            locals: [],
            templates: [e, t, n]
        }
    }())
}), define("portia-ui/templates/components/start-url-options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 4}, end: {line: 3, column: 55}},
                            moduleName: "portia-ui/templates/components/start-url-options.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["content", "title", ["loc", [null, [3, 46], [3, 55]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                        moduleName: "portia-ui/templates/components/start-url-options.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["block", "group.tab", [], ["toolId", "annotation-options"], 0, null, ["loc", [null, [3, 4], [3, 69]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), t = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 5, column: 8}, end: {line: 11, column: 8}},
                                moduleName: "portia-ui/templates/components/start-url-options.hbs"
                            },
                            isEmpty: !1,
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "component", [["get", "startUrl.optionsComponentName", ["loc", [null, [6, 24], [6, 53]]]]], ["spider", ["subexpr", "@mut", [["get", "spider", ["loc", [null, [7, 21], [7, 27]]]]], [], []], "startUrl", ["subexpr", "@mut", [["get", "startUrl", ["loc", [null, [8, 23], [8, 31]]]]], [], []], "saveSpider", ["subexpr", "@mut", [["get", "saveSpider", ["loc", [null, [9, 25], [9, 35]]]]], [], []]], ["loc", [null, [6, 12], [10, 14]]]]],
                            locals: ["active"],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 4, column: 4}, end: {line: 12, column: 4}},
                            moduleName: "portia-ui/templates/components/start-url-options.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                        },
                        statements: [["block", "group.panel", [], ["class", "extracted-items container-fluid", "toolId", "annotation-options"], 0, null, ["loc", [null, [5, 8], [11, 24]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 4, column: 4}, end: {line: 12, column: 4}},
                        moduleName: "portia-ui/templates/components/start-url-options.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [4, 18], [4, 31]]]], "panels"], [], ["loc", [null, [4, 14], [4, 41]]]]], [], 0, null, ["loc", [null, [4, 4], [12, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 13, column: 0}},
                    moduleName: "portia-ui/templates/components/start-url-options.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [2, 14], [2, 27]]]], "tabs"], [], ["loc", [null, [2, 10], [2, 35]]]]], [], 0, 1, ["loc", [null, [2, 4], [12, 11]]]]],
                locals: ["group"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 14, column: 0}},
                moduleName: "portia-ui/templates/components/start-url-options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tool-group", [], ["id", "fragments-options-group", "collapsible", !1, "onClose", ["subexpr", "route-action", ["closeOptions"], [], ["loc", [null, [1, 69], [1, 98]]]]], 0, null, ["loc", [null, [1, 0], [13, 15]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/tool-group", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 5, column: 12}, end: {line: 9, column: 12}},
                    moduleName: "portia-ui/templates/components/tool-group.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                    e.appendChild(t, n);
                    var n = e.createElement("a");
                    e.setAttribute(n, "class", "tool-group-collapse");
                    var r = e.createTextNode("\n                    ");
                    e.appendChild(n, r);
                    var r = e.createElement("span");
                    e.setAttribute(r, "class", "caret"), e.appendChild(n, r);
                    var r = e.createTextNode("\n                ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = e.childAt(t, [1]), a = new Array(1);
                    return a[0] = e.createElementMorph(r), a
                },
                statements: [["element", "action", ["toggleCollapsed"], [], ["loc", [null, [6, 47], [6, 75]]]]],
                locals: [],
                templates: []
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 10, column: 12}, end: {line: 14, column: 12}},
                    moduleName: "portia-ui/templates/components/tool-group.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                    e.appendChild(t, n);
                    var n = e.createElement("a");
                    e.setAttribute(n, "class", "tool-group-close");
                    var r = e.createTextNode("\n                    ");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("\n                ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = e.childAt(t, [1]), a = new Array(2);
                    return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(r, 1, 1), a
                },
                statements: [["element", "action", ["close"], [], ["loc", [null, [11, 44], [11, 62]]]], ["inline", "icon-button", [], ["icon", "close"], ["loc", [null, [12, 20], [12, 48]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 21, column: 0}},
                moduleName: "portia-ui/templates/components/tool-group.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("header");
                e.setAttribute(n, "class", "tool-group-header");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("ul");
                e.setAttribute(r, "class", "nav nav-tabs");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("li");
                e.setAttribute(a, "class", "tool-group-icons pull-right");
                var l = e.createTextNode("\n");
                e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createComment("");
                e.appendChild(a, l);
                var l = e.createTextNode("        ");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createElement("section");
                e.setAttribute(n, "class", "tool-group-content");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0, 1]), a = e.childAt(r, [3]), l = new Array(4);
                return l[0] = e.createMorphAt(r, 1, 1), l[1] = e.createMorphAt(a, 1, 1), l[2] = e.createMorphAt(a, 2, 2), l[3] = e.createMorphAt(e.childAt(t, [2]), 1, 1), l
            },
            statements: [["inline", "yield", [["subexpr", "hash", [], ["section", "tabs", "group", ["get", "this", ["loc", [null, [3, 43], [3, 47]]]], "tab", ["subexpr", "component", ["tool-tab"], ["group", ["subexpr", "@mut", [["get", "this", ["loc", [null, [3, 80], [3, 84]]]]], [], []]], ["loc", [null, [3, 52], [3, 85]]]], "panel", ["subexpr", "component", ["tool-panel"], ["group", ["subexpr", "@mut", [["get", "this", ["loc", [null, [3, 122], [3, 126]]]]], [], []]], ["loc", [null, [3, 92], [3, 127]]]]], ["loc", [null, [3, 16], [3, 128]]]]], [], ["loc", [null, [3, 8], [3, 130]]]], ["block", "if", [["get", "collapsible", ["loc", [null, [5, 18], [5, 29]]]]], [], 0, null, ["loc", [null, [5, 12], [9, 19]]]], ["block", "if", [["get", "onClose", ["loc", [null, [10, 18], [10, 25]]]]], [], 1, null, ["loc", [null, [10, 12], [14, 19]]]], ["inline", "yield", [["subexpr", "hash", [], ["section", "panels", "group", ["get", "this", ["loc", [null, [19, 41], [19, 45]]]], "tab", ["subexpr", "component", ["tool-tab"], ["group", ["subexpr", "@mut", [["get", "this", ["loc", [null, [19, 78], [19, 82]]]]], [], []]], ["loc", [null, [19, 50], [19, 83]]]], "panel", ["subexpr", "component", ["tool-panel"], ["group", ["subexpr", "@mut", [["get", "this", ["loc", [null, [19, 120], [19, 124]]]]], [], []]], ["loc", [null, [19, 90], [19, 125]]]]], ["loc", [null, [19, 12], [19, 126]]]]], [], ["loc", [null, [19, 4], [19, 128]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/tool-panel", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: !1,
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 4, column: 0}},
                moduleName: "portia-ui/templates/components/tool-panel.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div"), r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
            },
            statements: [["inline", "yield", [["get", "active", ["loc", [null, [2, 12], [2, 18]]]]], [], ["loc", [null, [2, 4], [2, 20]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/components/tool-tab", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "modifiers", modifiers: ["action"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 4, column: 0}},
                moduleName: "portia-ui/templates/components/tool-tab.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("a"), r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = new Array(2);
                return a[0] = e.createElementMorph(r), a[1] = e.createMorphAt(r, 1, 1), a
            },
            statements: [["element", "action", ["selectTab"], [], ["loc", [null, [1, 3], [1, 25]]]], ["inline", "yield", [["get", "active", ["loc", [null, [2, 12], [2, 18]]]]], [], ["loc", [null, [2, 4], [2, 20]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/components/tooltip-container", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 5, column: 8}, end: {line: 7, column: 8}},
                    moduleName: "portia-ui/templates/components/tooltip-container.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                }, statements: [["content", "text", ["loc", [null, [6, 12], [6, 20]]]]], locals: [], templates: []
            }
        }(), t = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 7, column: 8}, end: {line: 9, column: 8}},
                    moduleName: "portia-ui/templates/components/tooltip-container.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "yield", [["subexpr", "hash", [], ["section", "tooltip"], ["loc", [null, [8, 20], [8, 44]]]]], [], ["loc", [null, [8, 12], [8, 46]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 12, column: 0}},
                moduleName: "portia-ui/templates/components/tooltip-container.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "role", "tooltip");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "tooltip-arrow"), e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "tooltip-content");
                var a = e.createTextNode("\n");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [2]), a = new Array(4);
                return a[0] = e.createMorphAt(t, 0, 0, n), a[1] = e.createAttrMorph(r, "class"), a[2] = e.createAttrMorph(r, "data-tooltip-id"), a[3] = e.createMorphAt(e.childAt(r, [3]), 1, 1), e.insertBoundary(t, 0), a
            },
            statements: [["inline", "yield", [["subexpr", "hash", [], ["section", "body"], ["loc", [null, [1, 8], [1, 29]]]]], [], ["loc", [null, [1, 0], [1, 31]]]], ["attribute", "class", ["subexpr", "concat", ["tooltip", ["subexpr", "if", [["get", "tooltipClasses", ["loc", [null, [2, 34], [2, 48]]]], ["subexpr", "concat", [" ", ["get", "tooltipClasses", ["loc", [null, [2, 61], [2, 75]]]]], [], ["loc", [null, [2, 49], [2, 76]]]]], [], ["loc", [null, [2, 30], [2, 77]]]]], [], ["loc", [null, [2, 11], [2, 79]]]]], ["attribute", "data-tooltip-id", ["concat", [["get", "elementId", ["loc", [null, [2, 114], [2, 123]]]]]]], ["block", "if", [["get", "text", ["loc", [null, [5, 14], [5, 18]]]]], [], 0, 1, ["loc", [null, [5, 8], [9, 15]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/tooltip-icon", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 12, column: 0}},
                    moduleName: "portia-ui/templates/components/tooltip-icon.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "icon-button", [], ["id", ["subexpr", "@mut", [["get", "elementId", ["loc", [null, [7, 9], [7, 18]]]]], [], []], "icon", ["subexpr", "@mut", [["get", "icon", ["loc", [null, [8, 11], [8, 15]]]]], [], []], "modifyClasses", ["subexpr", "@mut", [["get", "modifyClasses", ["loc", [null, [9, 20], [9, 33]]]]], [], []], "action", ["subexpr", "action", ["onClick"], [], ["loc", [null, [10, 13], [10, 31]]]]], ["loc", [null, [6, 4], [11, 6]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 13, column: 0}},
                moduleName: "portia-ui/templates/components/tooltip-icon.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tooltip-container", [], ["tooltipFor", ["subexpr", "@mut", [["get", "elementId", ["loc", [null, [2, 13], [2, 22]]]]], [], []], "text", ["subexpr", "@mut", [["get", "text", ["loc", [null, [3, 7], [3, 11]]]]], [], []], "tooltipContainer", "body"], 0, null, ["loc", [null, [1, 0], [12, 22]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/components/tree-list-item-row", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 4, column: 0}},
                moduleName: "portia-ui/templates/components/tree-list-item-row.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div"), r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = new Array(2);
                return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createMorphAt(r, 1, 1), a
            },
            statements: [["attribute", "class", ["concat", ["tree-list-item-content ", ["subexpr", "if", [["get", "isCentered", ["loc", [null, [1, 40], [1, 50]]]], "flex-center"], [], ["loc", [null, [1, 35], [1, 66]]]]]]], ["content", "yield", ["loc", [null, [2, 4], [2, 13]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/components/tree-list-item", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 2, column: 4}, end: {line: 8, column: 4}},
                    moduleName: "portia-ui/templates/components/tree-list-item.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                },
                statements: [["inline", "yield", [["subexpr", "hash", [], ["section", "item"], ["loc", [null, [7, 16], [7, 37]]]]], [], ["loc", [null, [7, 8], [7, 39]]]]],
                locals: [],
                templates: []
            }
        }(), t = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 10, column: 8}, end: {line: 12, column: 8}},
                        moduleName: "portia-ui/templates/components/tree-list-item.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "yield", [["subexpr", "hash", [], ["section", "subtrees"], ["loc", [null, [11, 20], [11, 45]]]]], [], ["loc", [null, [11, 12], [11, 47]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 9, column: 4}, end: {line: 13, column: 4}},
                    moduleName: "portia-ui/templates/components/tree-list-item.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tree-list", [], [], 0, null, ["loc", [null, [10, 8], [12, 22]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 15, column: 0}},
                moduleName: "portia-ui/templates/components/tree-list-item.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div");
                e.setAttribute(n, "class", "animation-content");
                var r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = new Array(2);
                return a[0] = e.createMorphAt(r, 1, 1), a[1] = e.createMorphAt(r, 2, 2), a
            },
            statements: [["block", "tree-list-item-row", [], ["isCentered", ["subexpr", "@mut", [["get", "isCentered", ["loc", [null, [3, 17], [3, 27]]]]], [], []], "onMouseEnter", ["subexpr", "@mut", [["get", "onMouseEnter", ["loc", [null, [4, 19], [4, 31]]]]], [], []], "onMouseLeave", ["subexpr", "@mut", [["get", "onMouseLeave", ["loc", [null, [5, 19], [5, 31]]]]], [], []]], 0, null, ["loc", [null, [2, 4], [8, 27]]]], ["block", "if", [["get", "hasChildren", ["loc", [null, [9, 10], [9, 21]]]]], [], 1, null, ["loc", [null, [9, 4], [13, 11]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}), define("portia-ui/templates/components/tree-list", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 4, column: 0}},
                moduleName: "portia-ui/templates/components/tree-list.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("ul");
                e.setAttribute(n, "class", "animation-content");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
            }, statements: [["content", "yield", ["loc", [null, [2, 4], [2, 13]]]]], locals: [], templates: []
        }
    }())
}), define("portia-ui/templates/components/url-bar", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 11, column: 16}, end: {line: 16, column: 16}},
                            moduleName: "portia-ui/templates/components/url-bar.hbs"
                        }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(),
                                n = e.createTextNode("                    Browsing\n                    ");
                            e.appendChild(t, n);
                            var n = e.createElement("p"),
                                r = e.createTextNode("\n                        You can interact with the web page in this mode.\n                    ");
                            e.appendChild(n, r), e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: [], templates: []
                    }
                }(), t = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 16, column: 16}, end: {line: 24, column: 16}},
                                moduleName: "portia-ui/templates/components/url-bar.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("                    Annotating\n                    ");
                                e.appendChild(t, n);
                                var n = e.createElement("p"),
                                    r = e.createTextNode("\n                        Click on elements in the sample to create data annotations.\n                    ");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createTextNode("\n                    ");
                                e.appendChild(t, n);
                                var n = e.createElement("p"),
                                    r = e.createTextNode("\n                        Close the sample to switch back to navigating mode.\n                    ");
                                e.appendChild(n, r), e.appendChild(t, n);
                                var n = e.createTextNode("\n                ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function () {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 16, column: 16}, end: {line: 24, column: 16}},
                            moduleName: "portia-ui/templates/components/url-bar.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "mode", ["loc", [null, [16, 30], [16, 34]]]], "data-annotation"], [], ["loc", [null, [16, 26], [16, 53]]]]], [], 0, null, ["loc", [null, [16, 16], [24, 16]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 10, column: 12}, end: {line: 25, column: 12}},
                        moduleName: "portia-ui/templates/components/url-bar.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "mode", ["loc", [null, [11, 26], [11, 30]]]], "navigation"], [], ["loc", [null, [11, 22], [11, 44]]]]], [], 0, 1, ["loc", [null, [11, 16], [24, 23]]]]],
                    locals: [],
                    templates: [e, t]
                }
            }(), t = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 25, column: 12}, end: {line: 29, column: 12}},
                        moduleName: "portia-ui/templates/components/url-bar.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                        e.appendChild(t, n);
                        var n = e.createElement("button");
                        e.setAttribute(n, "id", "mode-feedback-icon"), e.setAttribute(n, "type", "button");
                        var r = e.createTextNode("\n                    ");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode("\n                ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [1]), a = new Array(2);
                        return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createMorphAt(r, 1, 1), a
                    },
                    statements: [["attribute", "class", ["concat", ["btn btn-mode btn-mode-", ["get", "mode", ["loc", [null, [26, 79], [26, 83]]]]]]], ["inline", "icon-button", [], ["icon", ["subexpr", "@mut", [["get", "mode", ["loc", [null, [27, 39], [27, 43]]]]], [], []]], ["loc", [null, [27, 20], [27, 45]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 9, column: 8}, end: {line: 30, column: 8}},
                    moduleName: "portia-ui/templates/components/url-bar.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [10, 22], [10, 37]]]], "tooltip"], [], ["loc", [null, [10, 18], [10, 48]]]]], [], 0, 1, ["loc", [null, [10, 12], [29, 19]]]]],
                locals: ["options"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 39, column: 0}},
                moduleName: "portia-ui/templates/components/url-bar.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div");
                e.setAttribute(n, "id", "url-bar"), e.setAttribute(n, "class", "input-group");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("span");
                e.setAttribute(r, "class", "input-group-btn");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("button");
                e.setAttribute(a, "class", "btn btn-default"), e.setAttribute(a, "type", "button");
                var l = e.createTextNode("\n            ");
                e.appendChild(a, l);
                var l = e.createElement("span");
                e.setAttribute(l, "class", "fa fa-arrow-left"), e.appendChild(a, l);
                var l = e.createTextNode("\n        ");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("button");
                e.setAttribute(a, "class", "btn btn-default"), e.setAttribute(a, "type", "button");
                var l = e.createTextNode("\n            ");
                e.appendChild(a, l);
                var l = e.createElement("span");
                e.setAttribute(l, "class", "fa fa-arrow-right"), e.appendChild(a, l);
                var l = e.createTextNode("\n        ");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("span");
                e.setAttribute(r, "class", "input-group-btn");
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createElement("button");
                e.setAttribute(a, "class", "btn btn-default"), e.setAttribute(a, "type", "button");
                var l = e.createTextNode("\n            ");
                e.appendChild(a, l);
                var l = e.createElement("span");
                e.appendChild(a, l);
                var l = e.createTextNode("\n        ");
                e.appendChild(a, l), e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = e.childAt(r, [1]), l = e.childAt(a, [1]), o = e.childAt(a, [3]),
                    i = e.childAt(r, [5, 1]), c = e.childAt(i, [1]), s = new Array(9);
                return s[0] = e.createAttrMorph(l, "disabled"), s[1] = e.createElementMorph(l), s[2] = e.createAttrMorph(o, "disabled"), s[3] = e.createElementMorph(o), s[4] = e.createMorphAt(a, 5, 5), s[5] = e.createMorphAt(r, 3, 3), s[6] = e.createAttrMorph(i, "disabled"), s[7] = e.createElementMorph(i), s[8] = e.createAttrMorph(c, "class"), s
            },
            statements: [["attribute", "disabled", ["get", "backDisabled", ["loc", [null, [3, 65], [3, 77]]]]], ["element", "action", ["back"], [], ["loc", [null, [3, 80], [3, 97]]]], ["attribute", "disabled", ["get", "forwardDisabled", ["loc", [null, [6, 65], [6, 80]]]]], ["element", "action", ["forward"], [], ["loc", [null, [6, 83], [6, 103]]]], ["block", "tooltip-container", [], ["tooltipFor", "mode-feedback-icon", "tooltipContainer", "body", "placement", "right"], 0, null, ["loc", [null, [9, 8], [30, 30]]]], ["inline", "buffered-input", [], ["placeholder", "请输入网址", "value", ["subexpr", "mut", [["get", "url", ["loc", [null, [32, 70], [32, 73]]]]], [], ["loc", [null, [32, 65], [32, 74]]]], "viewValue", ["subexpr", "mut", [["get", "editedUrl", ["loc", [null, [32, 90], [32, 99]]]]], [], ["loc", [null, [32, 85], [32, 100]]]], "autofocus", ["subexpr", "@mut", [["get", "autofocus", ["loc", [null, [32, 111], [32, 120]]]]], [], []], "autoSelect", !0, "disabled", ["subexpr", "@mut", [["get", "disabled", ["loc", [null, [32, 146], [32, 154]]]]], [], []], "spellcheck", !1, "onEnterPress", ["subexpr", "action", ["submit"], [], ["loc", [null, [32, 185], [32, 202]]]]], ["loc", [null, [32, 4], [32, 204]]]], ["attribute", "disabled", ["get", "disabled", ["loc", [null, [34, 65], [34, 73]]]]], ["element", "action", ["submit", ["get", "url", ["loc", [null, [34, 94], [34, 97]]]]], [], ["loc", [null, [34, 76], [34, 99]]]], ["attribute", "class", ["concat", ["fa ", ["subexpr", "if", [["get", "loading", ["loc", [null, [35, 33], [35, 40]]]], "fa-spin fa-refresh", ["subexpr", "if", [["subexpr", "not", [["subexpr", "eq", [["subexpr", "or", [["subexpr", "or", [["get", "editedUrl", ["loc", [null, [35, 83], [35, 92]]]], ["get", "url", ["loc", [null, [35, 93], [35, 96]]]]], [], ["loc", [null, [35, 79], [35, 97]]]], null], [], ["loc", [null, [35, 75], [35, 103]]]], ["get", "browser.url", ["loc", [null, [35, 104], [35, 115]]]]], [], ["loc", [null, [35, 71], [35, 116]]]]], [], ["loc", [null, [35, 66], [35, 117]]]], "fa-arrow-right", "fa-repeat"], [], ["loc", [null, [35, 62], [35, 147]]]]], [], ["loc", [null, [35, 28], [35, 149]]]]]]]],
            locals: [],
            templates: [e]
        }
    }())
}), define("portia-ui/templates/options-panels", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 4, column: 0}},
                moduleName: "portia-ui/templates/options-panels.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("nav");
                e.setAttribute(n, "id", "options-panels");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
            },
            statements: [["inline", "outlet", ["options-panels"], [], ["loc", [null, [2, 4], [2, 31]]]]],
            locals: [],
            templates: []
        }
    }())
}), define("portia-ui/templates/projects", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 6, column: 4}, end: {line: 10, column: 4}},
                    moduleName: "portia-ui/templates/projects.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createElement("p"), r = e.createTextNode("从下面项目列表中选择：");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n\n        ");
                    e.appendChild(t, n);
                    var n = e.createComment("");
                    e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 3, 3, n), r
                },
                statements: [["inline", "project-list", [], ["projects", ["subexpr", "@mut", [["get", "model", ["loc", [null, [9, 32], [9, 37]]]]], [], []]], ["loc", [null, [9, 8], [9, 39]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 12, column: 0}},
                moduleName: "portia-ui/templates/projects.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div");
                e.setAttribute(n, "class", "project-list-container");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("img");
                e.setAttribute(r, "src", "/portia-assets/images/portia-logo.svg"), e.setAttribute(r, "alt", "Portia logo"), e.appendChild(n, r);
                var r = e.createTextNode("\n\n    ");
                e.appendChild(n, r);
                var r = e.createElement("h3"), a = e.createTextNode("欢迎使用可视化爬虫平台，请选择今天需要的项目");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = new Array(2);
                return a[0] = e.createMorphAt(r, 5, 5), a[1] = e.createMorphAt(r, 7, 7), a
            },
            statements: [["inline", "create-project-button", [], ["projects", ["subexpr", "@mut", [["get", "model", ["loc", [null, [5, 37], [5, 42]]]]], [], []]], ["loc", [null, [5, 4], [5, 44]]]], ["block", "if", [["get", "model", ["loc", [null, [6, 10], [6, 15]]]]], [], 0, null, ["loc", [null, [6, 4], [10, 11]]]]],
            locals: [],
            templates: [e]
        }
    }())
}),define("portia-ui/templates/projects/project", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 4, column: 4}},
                        moduleName: "portia-ui/templates/projects/project.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "outlet", ["browser-toolbar"], [], ["loc", [null, [3, 8], [3, 36]]]]],
                    locals: [],
                    templates: []
                }
            }(), t = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 4, column: 4}, end: {line: 6, column: 4}},
                            moduleName: "portia-ui/templates/projects/project.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["inline", "outlet", ["browser-overlays"], [], ["loc", [null, [5, 8], [5, 37]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 4, column: 4}, end: {line: 6, column: 4}},
                        moduleName: "portia-ui/templates/projects/project.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [4, 18], [4, 33]]]], "overlays"], [], ["loc", [null, [4, 14], [4, 45]]]]], [], 0, null, ["loc", [null, [4, 4], [6, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 7, column: 0}},
                    moduleName: "portia-ui/templates/projects/project.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [2, 14], [2, 29]]]], "toolbar"], [], ["loc", [null, [2, 10], [2, 40]]]]], [], 0, 1, ["loc", [null, [2, 4], [6, 11]]]]],
                locals: ["options"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 8, column: 0}},
                moduleName: "portia-ui/templates/projects/project.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "browser-view-port", [], ["clickHandler", ["subexpr", "action", ["viewPortClick"], [], ["loc", [null, [1, 34], [1, 58]]]]], 0, null, ["loc", [null, [1, 0], [7, 22]]]]],
            locals: [],
            templates: [e]
        }
    }())
}),define("portia-ui/templates/projects/project/conflicts/file-selector", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 6, column: 20}, end: {line: 8, column: 20}},
                                moduleName: "portia-ui/templates/projects/project/conflicts/file-selector.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("                        Conflicted files\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function () {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 5, column: 16}, end: {line: 9, column: 16}},
                            moduleName: "portia-ui/templates/projects/project/conflicts/file-selector.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "list-item-text", [], [], 0, null, ["loc", [null, [6, 20], [8, 39]]]]],
                        locals: [],
                        templates: [e]
                    }
                }(), t = function () {
                    var e = function () {
                        var e = function () {
                            var e = function () {
                                var e = function () {
                                    var e = function () {
                                        return {
                                            meta: {
                                                fragmentReason: !1,
                                                revision: "Ember@2.6.2",
                                                loc: {
                                                    source: null,
                                                    start: {line: 13, column: 32},
                                                    end: {line: 16, column: 32}
                                                },
                                                moduleName: "portia-ui/templates/projects/project/conflicts/file-selector.hbs"
                                            },
                                            isEmpty: !1,
                                            arity: 0,
                                            cachedFragment: null,
                                            hasRendered: !1,
                                            buildFragment: function (e) {
                                                var t = e.createDocumentFragment(),
                                                    n = e.createTextNode("                                    ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n                                    ");
                                                e.appendChild(t, n);
                                                var n = e.createComment("");
                                                e.appendChild(t, n);
                                                var n = e.createTextNode("\n");
                                                return e.appendChild(t, n), t
                                            },
                                            buildRenderNodes: function (e, t, n) {
                                                var r = new Array(2);
                                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r
                                            },
                                            statements: [["inline", "list-item-icon", [], ["icon", "file"], ["loc", [null, [14, 36], [14, 66]]]], ["content", "file.name", ["loc", [null, [15, 36], [15, 49]]]]],
                                            locals: [],
                                            templates: []
                                        }
                                    }();
                                    return {
                                        meta: {
                                            fragmentReason: !1,
                                            revision: "Ember@2.6.2",
                                            loc: {
                                                source: null,
                                                start: {line: 12, column: 28},
                                                end: {line: 17, column: 28}
                                            },
                                            moduleName: "portia-ui/templates/projects/project/conflicts/file-selector.hbs"
                                        },
                                        isEmpty: !1,
                                        arity: 0,
                                        cachedFragment: null,
                                        hasRendered: !1,
                                        buildFragment: function (e) {
                                            var t = e.createDocumentFragment(), n = e.createComment("");
                                            return e.appendChild(t, n), t
                                        },
                                        buildRenderNodes: function (e, t, n) {
                                            var r = new Array(1);
                                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                        },
                                        statements: [["block", "link-to", ["projects.project.conflicts.conflict", ["get", "file.encodedName", ["loc", [null, [13, 81], [13, 97]]]]], [], 0, null, ["loc", [null, [13, 32], [16, 44]]]]],
                                        locals: [],
                                        templates: [e]
                                    }
                                }();
                                return {
                                    meta: {
                                        fragmentReason: !1,
                                        revision: "Ember@2.6.2",
                                        loc: {source: null, start: {line: 11, column: 24}, end: {line: 18, column: 24}},
                                        moduleName: "portia-ui/templates/projects/project/conflicts/file-selector.hbs"
                                    },
                                    isEmpty: !1,
                                    arity: 1,
                                    cachedFragment: null,
                                    hasRendered: !1,
                                    buildFragment: function (e) {
                                        var t = e.createDocumentFragment(), n = e.createComment("");
                                        return e.appendChild(t, n), t
                                    },
                                    buildRenderNodes: function (e, t, n) {
                                        var r = new Array(1);
                                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                    },
                                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [12, 38], [12, 53]]]], "item"], [], ["loc", [null, [12, 34], [12, 61]]]]], [], 0, null, ["loc", [null, [12, 28], [17, 35]]]]],
                                    locals: ["options"],
                                    templates: [e]
                                }
                            }();
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 10, column: 20}, end: {line: 19, column: 20}},
                                    moduleName: "portia-ui/templates/projects/project/conflicts/file-selector.hbs"
                                },
                                isEmpty: !1,
                                arity: 1,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createComment("");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                                },
                                statements: [["block", "tree-list-item", [], [], 0, null, ["loc", [null, [11, 24], [18, 43]]]]],
                                locals: ["file"],
                                templates: [e]
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 9, column: 16}, end: {line: 20, column: 16}},
                                moduleName: "portia-ui/templates/projects/project/conflicts/file-selector.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("                ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                            },
                            statements: [["block", "each", [["get", "conflictedFiles", ["loc", [null, [10, 28], [10, 43]]]]], [], 0, null, ["loc", [null, [10, 20], [19, 29]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 9, column: 16}, end: {line: 20, column: 16}},
                            moduleName: "portia-ui/templates/projects/project/conflicts/file-selector.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [9, 30], [9, 45]]]], "subtrees"], [], ["loc", [null, [9, 26], [9, 57]]]]], [], 0, null, ["loc", [null, [9, 16], [20, 16]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 4, column: 12}, end: {line: 21, column: 12}},
                        moduleName: "portia-ui/templates/projects/project/conflicts/file-selector.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [5, 26], [5, 41]]]], "item"], [], ["loc", [null, [5, 22], [5, 49]]]]], [], 0, 1, ["loc", [null, [5, 16], [20, 23]]]]],
                    locals: ["options"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 3, column: 8}, end: {line: 22, column: 8}},
                    moduleName: "portia-ui/templates/projects/project/conflicts/file-selector.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tree-list-item", [], ["hasChildren", ["subexpr", "@mut", [["get", "conflictedFiles.length", ["loc", [null, [4, 42], [4, 64]]]]], [], []]], 0, null, ["loc", [null, [4, 12], [21, 31]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 25, column: 0}},
                moduleName: "portia-ui/templates/projects/project/conflicts/file-selector.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("nav");
                e.setAttribute(n, "id", "side-bar");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div"), a = e.createTextNode("\n");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0, 1]), 1, 1), r
            },
            statements: [["block", "tree-list", [], [], 0, null, ["loc", [null, [3, 8], [22, 22]]]]],
            locals: [],
            templates: [e]
        }
    }())
}),define("portia-ui/templates/projects/project/conflicts/help", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 2, column: 4}, end: {line: 7, column: 4}},
                    moduleName: "portia-ui/templates/projects/project/conflicts/help.hbs"
                }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createElement("h1"), r = e.createTextNode("Aw, Snap!");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n\n        ");
                    e.appendChild(t, n);
                    var n = e.createElement("h3"),
                        r = e.createTextNode("Portia couldn't deploy the project because there are conflicts with another user's changes");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n        ");
                    e.appendChild(t, n);
                    var n = e.createElement("p"),
                        r = e.createTextNode("Resolve the conflicts manually by selecting the conflicting files from the left panel to deploy the project.");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                }, buildRenderNodes: function () {
                    return []
                }, statements: [], locals: [], templates: []
            }
        }(), t = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 12, column: 12}, end: {line: 12, column: 81}},
                        moduleName: "portia-ui/templates/projects/project/conflicts/help.hbs"
                    }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("project page");
                        return e.appendChild(t, n), t
                    }, buildRenderNodes: function () {
                        return []
                    }, statements: [], locals: [], templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 7, column: 4}, end: {line: 15, column: 4}},
                    moduleName: "portia-ui/templates/projects/project/conflicts/help.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createElement("h1"), r = e.createTextNode("All done");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n\n        ");
                    e.appendChild(t, n);
                    var n = e.createElement("p"),
                        r = e.createTextNode("\n            All conflicts are resolved, to continue, go back to the\n            ");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("\n            and try to deploy again.\n        ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(e.childAt(t, [3]), 1, 1), r
                },
                statements: [["block", "link-to", ["projects.project", ["get", "projectController.model", ["loc", [null, [12, 56], [12, 79]]]]], [], 0, null, ["loc", [null, [12, 12], [12, 81]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 18, column: 0}},
                moduleName: "portia-ui/templates/projects/project/conflicts/help.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div");
                e.setAttribute(n, "class", "text-center conflicts-text");
                var r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
            },
            statements: [["block", "if", [["get", "conflictedFiles", ["loc", [null, [2, 10], [2, 25]]]]], [], 0, 1, ["loc", [null, [2, 4], [15, 11]]]]],
            locals: [],
            templates: [e, t]
        }
    }())
}),define("portia-ui/templates/projects/project/conflicts/resolver", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 4, column: 0}},
                moduleName: "portia-ui/templates/projects/project/conflicts/resolver.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div");
                e.setAttribute(n, "class", "conflicts-resolver-container");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
            },
            statements: [["inline", "json-file-compare", [], ["json", ["subexpr", "@mut", [["get", "model.contents", ["loc", [null, [2, 29], [2, 43]]]]], [], []], "update", "updateConflict"], ["loc", [null, [2, 4], [2, 69]]]]],
            locals: [],
            templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/conflicts/topbar", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 3, column: 4}, end: {line: 8, column: 4}},
                    moduleName: "portia-ui/templates/projects/project/conflicts/topbar.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                    e.appendChild(t, n);
                    var n = e.createElement("button");
                    e.setAttribute(n, "type", "button"), e.setAttribute(n, "class", "btn btn-default");
                    var r = e.createTextNode("\n            ");
                    e.appendChild(n, r);
                    var r = e.createElement("i");
                    e.setAttribute(r, "class", "fa fa-icon fa-upload"), e.appendChild(n, r);
                    var r = e.createTextNode("\n            Save File\n        ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = e.childAt(t, [1]), a = new Array(1);
                    return a[0] = e.createElementMorph(r), a
                },
                statements: [["element", "action", ["saveFile"], [], ["loc", [null, [4, 54], [4, 75]]]]],
                locals: [],
                templates: []
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 10, column: 0}},
                moduleName: "portia-ui/templates/projects/project/conflicts/topbar.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div");
                e.setAttribute(n, "class", "nav-container topbar-conflicts");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("span"), a = e.createTextNode("Resolving ");
                e.appendChild(r, a);
                var a = e.createElement("strong"), l = e.createComment("");
                e.appendChild(a, l), e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = new Array(2);
                return a[0] = e.createMorphAt(e.childAt(r, [1, 1]), 0, 0), a[1] = e.createMorphAt(r, 3, 3), a
            },
            statements: [["content", "model.file", ["loc", [null, [2, 28], [2, 42]]]], ["block", "unless", [["get", "haveConflicts", ["loc", [null, [3, 14], [3, 27]]]]], [], 0, null, ["loc", [null, [3, 4], [8, 15]]]]],
            locals: [],
            templates: [e]
        }
    }())
}),define("portia-ui/templates/projects/project/schema", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/projects/project/schema.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n),
                    e.insertBoundary(t, 0), r
            }, statements: [["content", "outlet", ["loc", [null, [1, 0], [1, 10]]]]], locals: [], templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/schema/field", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/projects/project/schema/field.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            }, statements: [["content", "outlet", ["loc", [null, [1, 0], [1, 10]]]]], locals: [], templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/schema/field/options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 5, column: 8}},
                            moduleName: "portia-ui/templates/projects/project/schema/field/options.hbs"
                        }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            Field properties\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: [], templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 6, column: 4}},
                        moduleName: "portia-ui/templates/projects/project/schema/field/options.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "group.tab", [], ["toolId", "field-options"], 0, null, ["loc", [null, [3, 8], [5, 22]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), t = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 7, column: 8}, end: {line: 9, column: 8}},
                                moduleName: "portia-ui/templates/projects/project/schema/field/options.hbs"
                            },
                            isEmpty: !1,
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "field-options", [], ["field", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 34], [8, 39]]]]], [], []]], ["loc", [null, [8, 12], [8, 41]]]]],
                            locals: ["active"],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 4}, end: {line: 10, column: 4}},
                            moduleName: "portia-ui/templates/projects/project/schema/field/options.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                        },
                        statements: [["block", "group.panel", [], ["class", "extracted-items container-fluid", "toolId", "field-options"], 0, null, ["loc", [null, [7, 8], [9, 24]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 6, column: 4}, end: {line: 10, column: 4}},
                        moduleName: "portia-ui/templates/projects/project/schema/field/options.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [6, 18], [6, 31]]]], "panels"], [], ["loc", [null, [6, 14], [6, 41]]]]], [], 0, null, ["loc", [null, [6, 4], [10, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 11, column: 0}},
                    moduleName: "portia-ui/templates/projects/project/schema/field/options.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [2, 14], [2, 27]]]], "tabs"], [], ["loc", [null, [2, 10], [2, 35]]]]], [], 0, 1, ["loc", [null, [2, 4], [10, 11]]]]],
                locals: ["group"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 12, column: 0}},
                moduleName: "portia-ui/templates/projects/project/schema/field/options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tool-group", [], ["id", "field-options-group", "collapsible", !1, "onClose", ["subexpr", "action", ["closeOptions"], [], ["loc", [null, [1, 65], [1, 88]]]]], 0, null, ["loc", [null, [1, 0], [11, 15]]]]],
            locals: [],
            templates: [e]
        }
    }())
}),define("portia-ui/templates/projects/project/schema/structure", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/projects/project/schema/structure.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            },
            statements: [["inline", "schema-structure-listing", [], ["schema", ["subexpr", "@mut", [["get", "model", ["loc", [null, [1, 34], [1, 39]]]]], [], []]], ["loc", [null, [1, 0], [1, 41]]]]],
            locals: [],
            templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/spider", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            }, statements: [["content", "outlet", ["loc", [null, [1, 0], [1, 10]]]]], locals: [], templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/spider/link-options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 5, column: 8}},
                            moduleName: "portia-ui/templates/projects/project/spider/link-options.hbs"
                        }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(),
                                n = e.createTextNode("            Link crawling options\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: [], templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 6, column: 4}},
                        moduleName: "portia-ui/templates/projects/project/spider/link-options.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "group.tab", [], ["toolId", "link-crawling-options"], 0, null, ["loc", [null, [3, 8], [5, 22]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), t = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 7, column: 8}, end: {line: 9, column: 8}},
                                moduleName: "portia-ui/templates/projects/project/spider/link-options.hbs"
                            },
                            isEmpty: !1,
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "link-crawling-options", [], ["spider", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 43], [8, 48]]]]], [], []]], ["loc", [null, [8, 12], [8, 50]]]]],
                            locals: ["active"],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 4}, end: {line: 10, column: 4}},
                            moduleName: "portia-ui/templates/projects/project/spider/link-options.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                        },
                        statements: [["block", "group.panel", [], ["class", "extracted-items container-fluid", "toolId", "link-crawling-options"], 0, null, ["loc", [null, [7, 8], [9, 24]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 6, column: 4}, end: {line: 10, column: 4}},
                        moduleName: "portia-ui/templates/projects/project/spider/link-options.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [6, 18], [6, 31]]]], "panels"], [], ["loc", [null, [6, 14], [6, 41]]]]], [], 0, null, ["loc", [null, [6, 4], [10, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 11, column: 0}},
                    moduleName: "portia-ui/templates/projects/project/spider/link-options.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [2, 14], [2, 27]]]], "tabs"], [], ["loc", [null, [2, 10], [2, 35]]]]], [], 0, 1, ["loc", [null, [2, 4], [10, 11]]]]],
                locals: ["group"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 12, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/link-options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tool-group", [], ["id", "link-crawling-options-group", "collapsible", !1, "onClose", ["subexpr", "action", ["closeOptions"], [], ["loc", [null, [1, 73], [1, 96]]]]], 0, null, ["loc", [null, [1, 0], [11, 15]]]]],
            locals: [],
            templates: [e]
        }
    }())
}),define("portia-ui/templates/projects/project/spider/options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 5, column: 8}},
                            moduleName: "portia-ui/templates/projects/project/spider/options.hbs"
                        }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            Spider properties\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: [], templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 6, column: 4}},
                        moduleName: "portia-ui/templates/projects/project/spider/options.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "group.tab", [], ["toolId", "spider-options"], 0, null, ["loc", [null, [3, 8], [5, 22]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), t = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 7, column: 8}, end: {line: 9, column: 8}},
                                moduleName: "portia-ui/templates/projects/project/spider/options.hbs"
                            },
                            isEmpty: !1,
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "spider-options", [], ["spider", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 36], [8, 41]]]]], [], []]], ["loc", [null, [8, 12], [8, 43]]]]],
                            locals: ["active"],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 4}, end: {line: 10, column: 4}},
                            moduleName: "portia-ui/templates/projects/project/spider/options.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                        },
                        statements: [["block", "group.panel", [], ["class", "extracted-items container-fluid", "toolId", "spider-options"], 0, null, ["loc", [null, [7, 8], [9, 24]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 6, column: 4}, end: {line: 10, column: 4}},
                        moduleName: "portia-ui/templates/projects/project/spider/options.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [6, 18], [6, 31]]]], "panels"], [], ["loc", [null, [6, 14], [6, 41]]]]], [], 0, null, ["loc", [null, [6, 4], [10, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 11, column: 0}},
                    moduleName: "portia-ui/templates/projects/project/spider/options.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [2, 14], [2, 27]]]], "tabs"], [], ["loc", [null, [2, 10], [2, 35]]]]], [], 0, 1, ["loc", [null, [2, 4], [10, 11]]]]],
                locals: ["group"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 12, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tool-group", [], ["id", "spider-options-group", "collapsible", !1, "onClose", ["subexpr", "action", ["closeOptions"], [], ["loc", [null, [1, 66], [1, 89]]]]], 0, null, ["loc", [null, [1, 0], [11, 15]]]]],
            locals: [],
            templates: [e]
        }
    }())
}),define("portia-ui/templates/projects/project/spider/overlays", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 3, column: 8}, end: {line: 5, column: 8}},
                        moduleName: "portia-ui/templates/projects/project/spider/overlays.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "element-overlay", [], ["viewPortElement", ["subexpr", "@mut", [["get", "overlay.element", ["loc", [null, [4, 46], [4, 61]]]]], [], []], "color", ["subexpr", "@mut", [["get", "overlay.color", ["loc", [null, [4, 68], [4, 81]]]]], [], []]], ["loc", [null, [4, 12], [4, 83]]]]],
                    locals: ["overlay"],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "triple-curlies"},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 7, column: 0}},
                    moduleName: "portia-ui/templates/projects/project/spider/overlays.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createTextNode("    ");
                    e.appendChild(t, n);
                    var n = e.createElement("div");
                    e.setAttribute(n, "class", "none-hovered none-selected");
                    var r = e.createTextNode("\n");
                    e.appendChild(n, r);
                    var r = e.createComment("");
                    e.appendChild(n, r);
                    var r = e.createTextNode("    ");
                    e.appendChild(n, r), e.appendChild(t, n);
                    var n = e.createTextNode("\n");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(e.childAt(t, [1]), 1, 1), r
                },
                statements: [["block", "each", [["get", "linkOverlayElements", ["loc", [null, [3, 16], [3, 35]]]]], ["key", "guid"], 0, null, ["loc", [null, [3, 8], [5, 17]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 8, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/overlays.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "if", [["get", "model.showLinks", ["loc", [null, [1, 6], [1, 21]]]]], [], 0, null, ["loc", [null, [1, 0], [7, 7]]]]],
            locals: [],
            templates: [e]
        }
    }())
}),define("portia-ui/templates/projects/project/spider/sample", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/sample.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            }, statements: [["content", "outlet", ["loc", [null, [1, 0], [1, 10]]]]], locals: [], templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/spider/sample/annotation/selection", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/sample/annotation/selection.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            }, statements: [["content", "outlet", ["loc", [null, [1, 0], [1, 10]]]]], locals: [], templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/spider/sample/data", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/sample/data.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            }, statements: [["content", "outlet", ["loc", [null, [1, 0], [1, 10]]]]], locals: [], templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/spider/sample/data/annotation", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/sample/data/annotation.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            }, statements: [["content", "outlet", ["loc", [null, [1, 0], [1, 10]]]]], locals: [], templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/spider/sample/data/annotation/options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 5, column: 8}},
                            moduleName: "portia-ui/templates/projects/project/spider/sample/data/annotation/options.hbs"
                        }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(),
                                n = e.createTextNode("            Annotation properties\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: [], templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 6, column: 4}},
                        moduleName: "portia-ui/templates/projects/project/spider/sample/data/annotation/options.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "group.tab", [], ["toolId", "annotation-options"], 0, null, ["loc", [null, [3, 8], [5, 22]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), t = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 7, column: 8}, end: {line: 11, column: 8}},
                                moduleName: "portia-ui/templates/projects/project/spider/sample/data/annotation/options.hbs"
                            },
                            isEmpty: !1,
                            arity: 1,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n            ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n            ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(3);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r[1] = e.createMorphAt(t, 3, 3, n), r[2] = e.createMorphAt(t, 5, 5, n), r
                            },
                            statements: [["inline", "annotation-options", [], ["annotation", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 44], [8, 49]]]]], [], []]], ["loc", [null, [8, 12], [8, 51]]]], ["inline", "field-options", [], ["field", ["subexpr", "@mut", [["get", "model.field.content", ["loc", [null, [9, 34], [9, 53]]]]], [], []]], ["loc", [null, [9, 12], [9, 55]]]], ["inline", "extractor-options", [], ["annotation", ["subexpr", "@mut", [["get", "model", ["loc", [null, [10, 43], [10, 48]]]]], [], []]], ["loc", [null, [10, 12], [10, 50]]]]],
                            locals: ["active"],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 4}, end: {line: 12, column: 4}},
                            moduleName: "portia-ui/templates/projects/project/spider/sample/data/annotation/options.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                        },
                        statements: [["block", "group.panel", [], ["class", "extracted-items container-fluid", "toolId", "annotation-options"], 0, null, ["loc", [null, [7, 8], [11, 24]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 6, column: 4}, end: {line: 12, column: 4}},
                        moduleName: "portia-ui/templates/projects/project/spider/sample/data/annotation/options.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [6, 18], [6, 31]]]], "panels"], [], ["loc", [null, [6, 14], [6, 41]]]]], [], 0, null, ["loc", [null, [6, 4], [12, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 13, column: 0}},
                    moduleName: "portia-ui/templates/projects/project/spider/sample/data/annotation/options.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [2, 14], [2, 27]]]], "tabs"], [], ["loc", [null, [2, 10], [2, 35]]]]], [], 0, 1, ["loc", [null, [2, 4], [12, 11]]]]],
                locals: ["group"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 14, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/sample/data/annotation/options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["block", "tool-group", [], ["id", "annotation-options-group", "collapsible", !1, "onClose", ["subexpr", "action", ["closeOptions"], [], ["loc", [null, [1, 70], [1, 93]]]]], 0, null, ["loc", [null, [1, 0], [13, 15]]]]],
            locals: [],
            templates: [e]
        }
    }())
}),define("portia-ui/templates/projects/project/spider/sample/data/item", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/sample/data/item.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            }, statements: [["content", "outlet", ["loc", [null, [1, 0], [1, 10]]]]], locals: [], templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/spider/sample/data/overlays", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 4, column: 12}, end: {line: 6, column: 12}},
                            moduleName: "portia-ui/templates/projects/project/spider/sample/data/overlays.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                            e.appendChild(t, n);
                            var n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("\n");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 1, 1, n), r
                        },
                        statements: [["inline", "element-overlay", [], ["class", ["subexpr", "concat", [["subexpr", "if", [["subexpr", "eq", [["get", "element", ["loc", [null, [5, 56], [5, 63]]]], ["get", "hoveredElement", ["loc", [null, [5, 64], [5, 78]]]]], [], ["loc", [null, [5, 52], [5, 79]]]], "hovered"], [], ["loc", [null, [5, 48], [5, 90]]]], ["subexpr", "if", [["subexpr", "includes", [["get", "hoveredModels", ["loc", [null, [5, 105], [5, 118]]]], ["get", "annotation", ["loc", [null, [5, 119], [5, 129]]]]], [], ["loc", [null, [5, 95], [5, 130]]]], " group-hovered"], [], ["loc", [null, [5, 91], [5, 148]]]], ["subexpr", "if", [["subexpr", "and", [["subexpr", "eq", [["get", "element", ["loc", [null, [5, 162], [5, 169]]]], ["get", "selectedElement", ["loc", [null, [5, 170], [5, 185]]]]], [], ["loc", [null, [5, 158], [5, 186]]]], ["subexpr", "eq", [["get", "selectedModel", ["loc", [null, [5, 191], [5, 204]]]], ["get", "annotation", ["loc", [null, [5, 205], [5, 215]]]]], [], ["loc", [null, [5, 187], [5, 216]]]]], [], ["loc", [null, [5, 153], [5, 217]]]], " selected"], [], ["loc", [null, [5, 149], [5, 230]]]], ["subexpr", "if", [["subexpr", "eq", [["get", "selectedModel", ["loc", [null, [5, 239], [5, 252]]]], ["get", "annotation", ["loc", [null, [5, 253], [5, 263]]]]], [], ["loc", [null, [5, 235], [5, 264]]]], " group-selected"], [], ["loc", [null, [5, 231], [5, 283]]]]], [], ["loc", [null, [5, 40], [5, 284]]]], "viewPortElement", ["subexpr", "@mut", [["get", "element", ["loc", [null, [5, 301], [5, 308]]]]], [], []], "icon", ["subexpr", "if", [["subexpr", "eq", [["get", "element", ["loc", [null, [5, 322], [5, 329]]]], ["get", "hoveredElement", ["loc", [null, [5, 330], [5, 344]]]]], [], ["loc", [null, [5, 318], [5, 345]]]], ["subexpr", "get", [["get", "selectionModeIcons", ["loc", [null, [5, 351], [5, 369]]]], ["get", "activeSelectionMode", ["loc", [null, [5, 370], [5, 389]]]]], [], ["loc", [null, [5, 346], [5, 390]]]]], [], ["loc", [null, [5, 314], [5, 391]]]], "color", ["subexpr", "array-get", [["get", "annotationColors", ["loc", [null, [5, 409], [5, 425]]]], ["get", "annotation.orderedIndex", ["loc", [null, [5, 426], [5, 449]]]]], [], ["loc", [null, [5, 398], [5, 450]]]]], ["loc", [null, [5, 16], [5, 452]]]]],
                        locals: [],
                        templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 3, column: 8}, end: {line: 7, column: 8}},
                        moduleName: "portia-ui/templates/projects/project/spider/sample/data/overlays.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "annotation.constructor.modelName", ["loc", [null, [4, 22], [4, 54]]]], "annotation"], [], ["loc", [null, [4, 18], [4, 68]]]]], [], 0, null, ["loc", [null, [4, 12], [6, 19]]]]],
                    locals: ["annotation"],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 2, column: 4}, end: {line: 8, column: 4}},
                    moduleName: "portia-ui/templates/projects/project/spider/sample/data/overlays.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "each", [["subexpr", "get", [["get", "sample.dataStructure.annotations", ["loc", [null, [3, 21], [3, 53]]]], ["subexpr", "guid", [["get", "element", ["loc", [null, [3, 60], [3, 67]]]]], [], ["loc", [null, [3, 54], [3, 68]]]]], [], ["loc", [null, [3, 16], [3, 69]]]]], [], 0, null, ["loc", [null, [3, 8], [7, 17]]]]],
                locals: ["element"],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 11, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/sample/data/overlays.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("div"), r = e.createTextNode("\n");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0]), a = new Array(3);
                return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createMorphAt(r, 1, 1), a[2] = e.createMorphAt(r, 3, 3), a
            },
            statements: [["attribute", "class", ["concat", [["subexpr", "unless", [["get", "hoveredElement", ["loc", [null, [1, 21], [1, 35]]]], "none-hovered"], [], ["loc", [null, [1, 12], [1, 52]]]], " ", ["subexpr", "unless", [["get", "selectedElement", ["loc", [null, [1, 62], [1, 77]]]], "none-selected"], [], ["loc", [null, [1, 53], [1, 95]]]], " ", ["subexpr", "if", [["get", "hoveredModels.length", ["loc", [null, [1, 101], [1, 121]]]], "group-hovered"], [], ["loc", [null, [1, 96], [1, 139]]]], " ", ["subexpr", "if", [["get", "selectedModel", ["loc", [null, [1, 145], [1, 158]]]], "group-selected"], [], ["loc", [null, [1, 140], [1, 177]]]]]]], ["block", "each", [["get", "sample.dataStructure.elements.all", ["loc", [null, [2, 12], [2, 45]]]]], [], 0, null, ["loc", [null, [2, 4], [8, 13]]]], ["inline", "element-overlay", [], ["class", ["subexpr", "concat", ["hover-overlay", ["subexpr", "unless", [["get", "showHoverOverlay", ["loc", [null, [9, 60], [9, 76]]]], " hide"], [], ["loc", [null, [9, 52], [9, 85]]]]], [], ["loc", [null, [9, 28], [9, 86]]]], "positionMode", "edges", "viewPortElement", ["subexpr", "@mut", [["get", "hoveredElement", ["loc", [null, [9, 124], [9, 138]]]]], [], []], "icon", ["subexpr", "get", [["get", "selectionModeIcons", ["loc", [null, [9, 149], [9, 167]]]], ["get", "activeSelectionMode", ["loc", [null, [9, 168], [9, 187]]]]], [], ["loc", [null, [9, 144], [9, 188]]]], "color", ["subexpr", "@mut", [["get", "hoverOverlayColor", ["loc", [null, [9, 195], [9, 212]]]]], [], []]], ["loc", [null, [9, 4], [9, 214]]]]],
            locals: [],
            templates: [e]
        }
    }())
}),define("portia-ui/templates/projects/project/spider/sample/data/structure", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/sample/data/structure.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            },
            statements: [["inline", "data-structure-listing", [], ["sample", ["subexpr", "@mut", [["get", "model", ["loc", [null, [1, 32], [1, 37]]]]], [], []], "annotationColors", ["subexpr", "@mut", [["get", "annotationColors", ["loc", [null, [1, 55], [1, 71]]]]], [], []]], ["loc", [null, [1, 0], [1, 73]]]]],
            locals: [],
            templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/spider/sample/data/toolbar", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 6, column: 12}, end: {line: 18, column: 12}},
                        moduleName: "portia-ui/templates/projects/project/spider/sample/data/toolbar.hbs"
                    }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("                Toggle page styling\n                ");
                        e.appendChild(t, n);
                        var n = e.createElement("p"),
                            r = e.createTextNode("\n                    When page styling is enabled you see the web page as the page author intended,\n                    the same way it would appear in a browser. However, sometimes this makes it hard\n                    to select the data that you need, for example if there are overlapping parts of\n                    the page or if some parts are hidden.\n                ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n                ");
                        e.appendChild(t, n);
                        var n = e.createElement("p"),
                            r = e.createTextNode("\n                    You can disable the page styling which will change the look and layout of the\n                    page but will force all content within the page to become visible.\n                ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    }, buildRenderNodes: function () {
                        return []
                    }, statements: [], locals: [], templates: []
                }
            }(), t = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 18, column: 12}, end: {line: 22, column: 12}},
                        moduleName: "portia-ui/templates/projects/project/spider/sample/data/toolbar.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                        e.appendChild(t, n);
                        var n = e.createElement("button");
                        e.setAttribute(n, "id", "css-tool-button"), e.setAttribute(n, "type", "button");
                        var r = e.createTextNode("\n                    ");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode("\n                ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [1]), a = new Array(3);
                        return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createElementMorph(r), a[2] = e.createMorphAt(r, 1, 1), a
                    },
                    statements: [["attribute", "class", ["concat", ["btn btn-default ", ["subexpr", "if", [["get", "cssEnabled", ["loc", [null, [19, 87], [19, 97]]]], "active"], [], ["loc", [null, [19, 82], [19, 108]]]]]]], ["element", "action", ["toggleCSS"], [], ["loc", [null, [19, 110], [19, 132]]]], ["inline", "icon-button", [], ["icon", "tool-css"], ["loc", [null, [20, 20], [20, 51]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 5, column: 8}, end: {line: 23, column: 8}},
                    moduleName: "portia-ui/templates/projects/project/spider/sample/data/toolbar.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [6, 22], [6, 37]]]], "tooltip"], [], ["loc", [null, [6, 18], [6, 48]]]]], [], 0, 1, ["loc", [null, [6, 12], [22, 19]]]]],
                locals: ["options"],
                templates: [e, t]
            }
        }(), t = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 28, column: 12}, end: {line: 43, column: 12}},
                        moduleName: "portia-ui/templates/projects/project/spider/sample/data/toolbar.hbs"
                    }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                        var t = e.createDocumentFragment(),
                            n = e.createTextNode("                Magic tool selector\n                ");
                        e.appendChild(t, n);
                        var n = e.createElement("p"),
                            r = e.createTextNode("\n                    When the magic tool selector is enabled, it will attempt to choose the most\n                    useful tool for you automatically, based on the element you are pointing at in\n                    the web page.\n                ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n                ");
                        e.appendChild(t, n);
                        var n = e.createElement("p"),
                            r = e.createTextNode("\n                    You can see which tool is being selected for you by looking at enabled tool\n                    selection button, and at the icon visible on the element under the cursor.\n                ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n                ");
                        e.appendChild(t, n);
                        var n = e.createElement("p"),
                            r = e.createTextNode("\n                    If you need, you can manually change the tool for the next click, by switching\n                    to it using the tool selection buttons.\n                ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    }, buildRenderNodes: function () {
                        return []
                    }, statements: [], locals: [], templates: []
                }
            }(), t = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 43, column: 12}, end: {line: 47, column: 12}},
                        moduleName: "portia-ui/templates/projects/project/spider/sample/data/toolbar.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                        e.appendChild(t, n);
                        var n = e.createElement("button");
                        e.setAttribute(n, "id", "magic-tool-button"), e.setAttribute(n, "type", "button");
                        var r = e.createTextNode("\n                    ");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode("\n                ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [1]), a = new Array(3);
                        return a[0] = e.createAttrMorph(r, "class"), a[1] = e.createElementMorph(r), a[2] = e.createMorphAt(r, 1, 1), a
                    },
                    statements: [["attribute", "class", ["concat", ["btn btn-default ", ["subexpr", "if", [["get", "magicToolActive", ["loc", [null, [44, 89], [44, 104]]]], "active"], [], ["loc", [null, [44, 84], [44, 115]]]]]]], ["element", "action", ["toggleMagicTool"], [], ["loc", [null, [44, 117], [44, 145]]]], ["inline", "icon-button", [], ["icon", "tool-magic"], ["loc", [null, [45, 20], [45, 53]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 27, column: 8}, end: {line: 48, column: 8}},
                    moduleName: "portia-ui/templates/projects/project/spider/sample/data/toolbar.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "options.section", ["loc", [null, [28, 22], [28, 37]]]], "tooltip"], [], ["loc", [null, [28, 18], [28, 48]]]]], [], 0, 1, ["loc", [null, [28, 12], [47, 19]]]]],
                locals: ["options"],
                templates: [e, t]
            }
        }(), n = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 53, column: 12}, end: {line: 57, column: 12}},
                        moduleName: "portia-ui/templates/projects/project/spider/sample/data/toolbar.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                        e.appendChild(t, n);
                        var n = e.createElement("button");
                        e.setAttribute(n, "type", "button");
                        var r = e.createTextNode("\n                    ");
                        e.appendChild(n, r);
                        var r = e.createComment("");
                        e.appendChild(n, r);
                        var r = e.createTextNode("\n                ");
                        e.appendChild(n, r), e.appendChild(t, n);
                        var n = e.createTextNode("\n");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = e.childAt(t, [1]), a = new Array(4);
                        return a[0] = e.createAttrMorph(r, "id"), a[1] = e.createAttrMorph(r, "class"), a[2] = e.createElementMorph(r), a[3] = e.createMorphAt(r, 1, 1), a
                    },
                    statements: [["attribute", "id", ["subexpr", "get", [["get", "selectionModeIds", ["loc", [null, [54, 33], [54, 49]]]], ["get", "mode", ["loc", [null, [54, 50], [54, 54]]]]], [], ["loc", [null, [54, 27], [54, 56]]]]], ["attribute", "class", ["concat", ["btn btn-default ", ["subexpr", "if", [["subexpr", "eq", [["get", "activeSelectionMode", ["loc", [null, [54, 103], [54, 122]]]], ["get", "mode", ["loc", [null, [54, 123], [54, 127]]]]], [], ["loc", [null, [54, 99], [54, 128]]]], "active"], [], ["loc", [null, [54, 94], [54, 139]]]]]]], ["element", "action", [["subexpr", "action", [["subexpr", "mut", [["get", "selectionMode", ["loc", [null, [54, 163], [54, 176]]]]], [], ["loc", [null, [54, 158], [54, 177]]]], ["get", "mode", ["loc", [null, [54, 178], [54, 182]]]]], [], ["loc", [null, [54, 150], [54, 183]]]]], [], ["loc", [null, [54, 141], [54, 185]]]], ["inline", "icon-button", [], ["icon", ["subexpr", "@mut", [["get", "icon", ["loc", [null, [55, 39], [55, 43]]]]], [], []]], ["loc", [null, [55, 20], [55, 45]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 52, column: 8}, end: {line: 58, column: 8}},
                    moduleName: "portia-ui/templates/projects/project/spider/sample/data/toolbar.hbs"
                },
                isEmpty: !1,
                arity: 2,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tooltip-container", [], ["tooltipFor", ["subexpr", "get", [["get", "selectionModeIds", ["loc", [null, [53, 49], [53, 65]]]], ["get", "mode", ["loc", [null, [53, 66], [53, 70]]]]], [], ["loc", [null, [53, 44], [53, 71]]]], "tooltipContainer", "body", "text", ["subexpr", "get", [["get", "selectionModeText", ["loc", [null, [53, 106], [53, 123]]]], ["get", "mode", ["loc", [null, [53, 124], [53, 128]]]]], [], ["loc", [null, [53, 101], [53, 129]]]]], 0, null, ["loc", [null, [53, 12], [57, 34]]]]],
                locals: ["mode", "icon"],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 61, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/sample/data/toolbar.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("span"), r = e.createTextNode("Tools");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n\n");
                e.appendChild(t, n);
                var n = e.createElement("div");
                e.setAttribute(n, "class", "tool-bar");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "btn-group"), e.setAttribute(r, "role", "group");
                var a = e.createTextNode("\n");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "btn-group"), e.setAttribute(r, "role", "group");
                var a = e.createTextNode("\n");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div");
                e.setAttribute(r, "class", "btn-group"), e.setAttribute(r, "role", "group");
                var a = e.createTextNode("\n");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [2]), a = new Array(3);
                return a[0] = e.createMorphAt(e.childAt(r, [1]), 1, 1), a[1] = e.createMorphAt(e.childAt(r, [3]), 1, 1), a[2] = e.createMorphAt(e.childAt(r, [5]), 1, 1), a
            },
            statements: [["block", "tooltip-container", [], ["tooltipFor", "css-tool-button", "placement", "left", "tooltipContainer", "body"], 0, null, ["loc", [null, [5, 8], [23, 30]]]], ["block", "tooltip-container", [], ["tooltipFor", "magic-tool-button", "placement", "left", "tooltipContainer", "body"], 1, null, ["loc", [null, [27, 8], [48, 30]]]], ["block", "each-in", [["get", "selectionModeIcons", ["loc", [null, [52, 19], [52, 37]]]]], [], 2, null, ["loc", [null, [52, 8], [58, 20]]]]],
            locals: [],
            templates: [e, t, n]
        }
    }())
}),define("portia-ui/templates/projects/project/spider/sample/data/tools", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 5, column: 8}},
                            moduleName: "portia-ui/templates/projects/project/spider/sample/data/tools.hbs"
                        }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createTextNode("            Inspector\n");
                            return e.appendChild(t, n), t
                        }, buildRenderNodes: function () {
                            return []
                        }, statements: [], locals: [], templates: []
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 6, column: 4}},
                        moduleName: "portia-ui/templates/projects/project/spider/sample/data/tools.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "group.tab", [], ["toolId", "inspector"], 0, null, ["loc", [null, [3, 8], [5, 22]]]]],
                    locals: [],
                    templates: [e]
                }
            }(), t = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 7, column: 8}, end: {line: 9, column: 8}},
                                moduleName: "portia-ui/templates/projects/project/spider/sample/data/tools.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createTextNode("            ");
                                e.appendChild(t, n);
                                var n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 1, 1, n), r
                            },
                            statements: [["inline", "inspector-panel", [], ["sample", ["subexpr", "@mut", [["get", "model", ["loc", [null, [8, 37], [8, 42]]]]], [], []], "annotationColors", ["subexpr", "@mut", [["get", "annotationColors", ["loc", [null, [8, 60], [8, 76]]]]], [], []]], ["loc", [null, [8, 12], [8, 78]]]]],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 6, column: 4}, end: {line: 10, column: 4}},
                            moduleName: "portia-ui/templates/projects/project/spider/sample/data/tools.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            e.appendChild(t, n);
                            var n = e.createTextNode("    ");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                        },
                        statements: [["block", "group.panel", [], ["class", "inspector container-fluid", "toolId", "inspector"], 0, null, ["loc", [null, [7, 8], [9, 24]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 6, column: 4}, end: {line: 10, column: 4}},
                        moduleName: "portia-ui/templates/projects/project/spider/sample/data/tools.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [6, 18], [6, 31]]]], "panels"], [], ["loc", [null, [6, 14], [6, 41]]]]], [], 0, null, ["loc", [null, [6, 4], [10, 4]]]]],
                    locals: [],
                    templates: [e]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 11, column: 0}},
                    moduleName: "portia-ui/templates/projects/project/spider/sample/data/tools.hbs"
                },
                isEmpty: !1,
                arity: 1,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [2, 14], [2, 27]]]], "tabs"], [], ["loc", [null, [2, 10], [2, 35]]]]], [], 0, 1, ["loc", [null, [2, 4], [10, 11]]]]],
                locals: ["group"],
                templates: [e, t]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 14, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/sample/data/tools.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), r
            },
            statements: [["block", "tool-group", [], ["id", "inspector-group"], 0, null, ["loc", [null, [1, 0], [11, 15]]]], ["content", "extracted-items-group", ["loc", [null, [13, 0], [13, 25]]]]],
            locals: [],
            templates: [e]
        }
    }())
}),define("portia-ui/templates/projects/project/spider/sample/item", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/sample/item.hbs"
            }, isEmpty: !1, arity: 0, cachedFragment: null, hasRendered: !1, buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            }, buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            }, statements: [["content", "outlet", ["loc", [null, [1, 0], [1, 10]]]]], locals: [], templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/spider/sample/structure", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/sample/structure.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            },
            statements: [["inline", "outlet", ["sample-structure"], [], ["loc", [null, [1, 0], [1, 29]]]]],
            locals: [],
            templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/spider/sample/toolbar", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 3, column: 4}, end: {line: 5, column: 4}},
                        moduleName: "portia-ui/templates/projects/project/spider/sample/toolbar.hbs"
                    },
                    isEmpty: !1,
                    arity: 0,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createTextNode("        ");
                        e.appendChild(t, n);
                        var n = e.createComment("");
                        e.appendChild(t, n);
                        var n = e.createTextNode("关闭模版");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 1, 1, n), r
                    },
                    statements: [["inline", "icon-button", [], ["icon", "close"], ["loc", [null, [4, 8], [4, 36]]]]],
                    locals: [],
                    templates: []
                }
            }();
            return {
                meta: {
                    fragmentReason: !1,
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 2, column: 0}, end: {line: 6, column: 0}},
                    moduleName: "portia-ui/templates/projects/project/spider/sample/toolbar.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "link-to", ["projects.project.spider"], ["class", "btn btn-primary", "activeClass", "", "id", "sample-close-button-browser"], 0, null, ["loc", [null, [3, 4], [5, 16]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 7, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/sample/toolbar.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
            },
            statements: [["inline", "outlet", ["browser-toolbar"], [], ["loc", [null, [1, 0], [1, 28]]]], ["block", "tooltip-container", [], ["tooltipFor", "sample-close-button-browser", "text", "Finish editing your sample so you can continue browsing and see how it works on other pages", "tooltipContainer", "body"], 0, null, ["loc", [null, [2, 0], [6, 22]]]]],
            locals: [],
            templates: [e]
        }
    }())
}),define("portia-ui/templates/projects/project/spider/start-url/options", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 5, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/start-url/options.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            },
            statements: [["inline", "start-url-options", [], ["spider", ["subexpr", "@mut", [["get", "model.spider", ["loc", [null, [2, 11], [2, 23]]]]], [], []], "startUrlId", ["subexpr", "@mut", [["get", "model.startUrlId", ["loc", [null, [3, 15], [3, 31]]]]], [], []]], ["loc", [null, [1, 0], [4, 2]]]]],
            locals: [],
            templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/spider/structure", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 8, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/structure.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), r
            },
            statements: [["inline", "spider-structure-listing", [], ["project", ["subexpr", "@mut", [["get", "model.project", ["loc", [null, [2, 10], [2, 23]]]]], [], []], "spider", ["subexpr", "@mut", [["get", "model", ["loc", [null, [3, 9], [3, 14]]]]], [], []], "closeOptions", ["subexpr", "route-action", ["closeOptions"], [], ["loc", [null, [4, 15], [4, 44]]]], "transitionToFragments", ["subexpr", "route-action", ["transitionToFragments"], [], ["loc", [null, [5, 24], [5, 62]]]]], ["loc", [null, [1, 0], [6, 2]]]], ["inline", "outlet", ["spider-structure"], [], ["loc", [null, [7, 0], [7, 29]]]]],
            locals: [],
            templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/spider/toolbar", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 4, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/toolbar.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n")
                ;e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(3);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), r[2] = e.createMorphAt(t, 4, 4, n), e.insertBoundary(t, 0), r
            },
            statements: [["inline", "show-links-button", [], ["spider", ["subexpr", "@mut", [["get", "model", ["loc", [null, [1, 27], [1, 32]]]]], [], []]], ["loc", [null, [1, 0], [1, 34]]]], ["inline", "add-start-url-button", [], ["spider", ["subexpr", "@mut", [["get", "model", ["loc", [null, [2, 30], [2, 35]]]]], [], []]], ["loc", [null, [2, 0], [2, 37]]]], ["inline", "edit-sample-button", [], ["spider", ["subexpr", "@mut", [["get", "model", ["loc", [null, [3, 28], [3, 33]]]]], [], []]], ["loc", [null, [3, 0], [3, 35]]]]],
            locals: [],
            templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/spider/tools", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        var e = function () {
            var e = function () {
                var e = function () {
                    var e = function () {
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 4, column: 12}, end: {line: 6, column: 12}},
                                moduleName: "portia-ui/templates/projects/project/spider/tools.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(),
                                    n = e.createTextNode("                Followed links\n");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function () {
                                return []
                            },
                            statements: [],
                            locals: [],
                            templates: []
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 3, column: 8}, end: {line: 7, column: 8}},
                            moduleName: "portia-ui/templates/projects/project/spider/tools.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "group.tab", [], ["toolId", "show-links-legend"], 0, null, ["loc", [null, [4, 12], [6, 26]]]]],
                        locals: [],
                        templates: [e]
                    }
                }(), t = function () {
                    var e = function () {
                        var e = function () {
                            return {
                                meta: {
                                    fragmentReason: !1,
                                    revision: "Ember@2.6.2",
                                    loc: {source: null, start: {line: 8, column: 12}, end: {line: 10, column: 12}},
                                    moduleName: "portia-ui/templates/projects/project/spider/tools.hbs"
                                },
                                isEmpty: !1,
                                arity: 0,
                                cachedFragment: null,
                                hasRendered: !1,
                                buildFragment: function (e) {
                                    var t = e.createDocumentFragment(), n = e.createTextNode("                ");
                                    e.appendChild(t, n);
                                    var n = e.createComment("");
                                    e.appendChild(t, n);
                                    var n = e.createTextNode("\n");
                                    return e.appendChild(t, n), t
                                },
                                buildRenderNodes: function (e, t, n) {
                                    var r = new Array(1);
                                    return r[0] = e.createMorphAt(t, 1, 1, n), r
                                },
                                statements: [["inline", "show-links-legend", [], ["followedLinks", ["subexpr", "@mut", [["get", "followedLinkElements.length", ["loc", [null, [9, 50], [9, 77]]]]], [], []], "jsLinks", ["subexpr", "@mut", [["get", "jsLinkElements.length", ["loc", [null, [9, 86], [9, 107]]]]], [], []], "ignoredLinks", ["subexpr", "@mut", [["get", "ignoredLinkElements.length", ["loc", [null, [9, 121], [9, 147]]]]], [], []]], ["loc", [null, [9, 16], [9, 149]]]]],
                                locals: [],
                                templates: []
                            }
                        }();
                        return {
                            meta: {
                                fragmentReason: !1,
                                revision: "Ember@2.6.2",
                                loc: {source: null, start: {line: 7, column: 8}, end: {line: 11, column: 8}},
                                moduleName: "portia-ui/templates/projects/project/spider/tools.hbs"
                            },
                            isEmpty: !1,
                            arity: 0,
                            cachedFragment: null,
                            hasRendered: !1,
                            buildFragment: function (e) {
                                var t = e.createDocumentFragment(), n = e.createComment("");
                                e.appendChild(t, n);
                                var n = e.createTextNode("        ");
                                return e.appendChild(t, n), t
                            },
                            buildRenderNodes: function (e, t, n) {
                                var r = new Array(1);
                                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
                            },
                            statements: [["block", "group.panel", [], ["id", "show-links-legend", "class", "container-fluid", "toolId", "show-links-legend"], 0, null, ["loc", [null, [8, 12], [10, 28]]]]],
                            locals: [],
                            templates: [e]
                        }
                    }();
                    return {
                        meta: {
                            fragmentReason: !1,
                            revision: "Ember@2.6.2",
                            loc: {source: null, start: {line: 7, column: 8}, end: {line: 11, column: 8}},
                            moduleName: "portia-ui/templates/projects/project/spider/tools.hbs"
                        },
                        isEmpty: !1,
                        arity: 0,
                        cachedFragment: null,
                        hasRendered: !1,
                        buildFragment: function (e) {
                            var t = e.createDocumentFragment(), n = e.createComment("");
                            return e.appendChild(t, n), t
                        },
                        buildRenderNodes: function (e, t, n) {
                            var r = new Array(1);
                            return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                        },
                        statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [7, 22], [7, 35]]]], "panels"], [], ["loc", [null, [7, 18], [7, 45]]]]], [], 0, null, ["loc", [null, [7, 8], [11, 8]]]]],
                        locals: [],
                        templates: [e]
                    }
                }();
                return {
                    meta: {
                        fragmentReason: !1,
                        revision: "Ember@2.6.2",
                        loc: {source: null, start: {line: 2, column: 4}, end: {line: 12, column: 4}},
                        moduleName: "portia-ui/templates/projects/project/spider/tools.hbs"
                    },
                    isEmpty: !1,
                    arity: 1,
                    cachedFragment: null,
                    hasRendered: !1,
                    buildFragment: function (e) {
                        var t = e.createDocumentFragment(), n = e.createComment("");
                        return e.appendChild(t, n), t
                    },
                    buildRenderNodes: function (e, t, n) {
                        var r = new Array(1);
                        return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                    },
                    statements: [["block", "if", [["subexpr", "eq", [["get", "group.section", ["loc", [null, [3, 18], [3, 31]]]], "tabs"], [], ["loc", [null, [3, 14], [3, 39]]]]], [], 0, 1, ["loc", [null, [3, 8], [11, 15]]]]],
                    locals: ["group"],
                    templates: [e, t]
                }
            }();
            return {
                meta: {
                    fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                    revision: "Ember@2.6.2",
                    loc: {source: null, start: {line: 1, column: 0}, end: {line: 13, column: 0}},
                    moduleName: "portia-ui/templates/projects/project/spider/tools.hbs"
                },
                isEmpty: !1,
                arity: 0,
                cachedFragment: null,
                hasRendered: !1,
                buildFragment: function (e) {
                    var t = e.createDocumentFragment(), n = e.createComment("");
                    return e.appendChild(t, n), t
                },
                buildRenderNodes: function (e, t, n) {
                    var r = new Array(1);
                    return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), e.insertBoundary(t, null), r
                },
                statements: [["block", "tool-group", [], ["id", "show-links-legend-group"], 0, null, ["loc", [null, [2, 4], [12, 19]]]]],
                locals: [],
                templates: [e]
            }
        }();
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type", "multiple-nodes"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 29, column: 0}},
                moduleName: "portia-ui/templates/projects/project/spider/tools.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                e.appendChild(t, n);
                var n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(2);
                return r[0] = e.createMorphAt(t, 0, 0, n), r[1] = e.createMorphAt(t, 2, 2, n), e.insertBoundary(t, 0), r
            },
            statements: [["block", "if", [["get", "model.showLinks", ["loc", [null, [1, 6], [1, 21]]]]], [], 0, null, ["loc", [null, [1, 0], [13, 7]]]], ["content", "extracted-items-group", ["loc", [null, [28, 0], [28, 25]]]]],
            locals: [],
            templates: [e]
        }
    }())
}),define("portia-ui/templates/projects/project/structure", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 9, column: 0}},
                moduleName: "portia-ui/templates/projects/project/structure.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("nav");
                e.setAttribute(n, "id", "side-bar");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createElement("div"), a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n        ");
                e.appendChild(r, a);
                var a = e.createComment("");
                e.appendChild(r, a);
                var a = e.createTextNode("\n    ");
                e.appendChild(r, a), e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = e.childAt(t, [0, 1]), a = new Array(4);
                return a[0] = e.createMorphAt(r, 1, 1), a[1] = e.createMorphAt(r, 3, 3), a[2] = e.createMorphAt(r, 5, 5), a[3] = e.createMorphAt(r, 7, 7), a
            },
            statements: [["content", "save-status", ["loc", [null, [3, 8], [3, 23]]]], ["inline", "project-listing", [], ["project", ["subexpr", "@mut", [["get", "model", ["loc", [null, [4, 34], [4, 39]]]]], [], []], "reload", "reload", "conflict", "conflict"], ["loc", [null, [4, 8], [4, 77]]]], ["inline", "project-structure-listing", [], ["project", ["subexpr", "@mut", [["get", "model", ["loc", [null, [5, 44], [5, 49]]]]], [], []]], ["loc", [null, [5, 8], [5, 51]]]], ["inline", "outlet", ["project-structure"], [], ["loc", [null, [6, 8], [6, 38]]]]],
            locals: [],
            templates: []
        }
    }())
}),define("portia-ui/templates/projects/project/toolbar", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "missing-wrapper", problems: ["wrong-type"]},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 2, column: 0}},
                moduleName: "portia-ui/templates/projects/project/toolbar.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createComment("");
                e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(t, 0, 0, n), e.insertBoundary(t, 0), r
            },
            statements: [["inline", "create-spider-button", [], ["project", ["subexpr", "@mut", [["get", "model", ["loc", [null, [1, 31], [1, 36]]]]], [], []]], ["loc", [null, [1, 0], [1, 38]]]]],
            locals: [],
            templates: []
        }
    }())
}),define("portia-ui/templates/tool-panels", ["exports"], function (e) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = Ember.HTMLBars.template(function () {
        return {
            meta: {
                fragmentReason: {name: "triple-curlies"},
                revision: "Ember@2.6.2",
                loc: {source: null, start: {line: 1, column: 0}, end: {line: 4, column: 0}},
                moduleName: "portia-ui/templates/tool-panels.hbs"
            },
            isEmpty: !1,
            arity: 0,
            cachedFragment: null,
            hasRendered: !1,
            buildFragment: function (e) {
                var t = e.createDocumentFragment(), n = e.createElement("nav");
                e.setAttribute(n, "id", "tool-panels");
                var r = e.createTextNode("\n    ");
                e.appendChild(n, r);
                var r = e.createComment("");
                e.appendChild(n, r);
                var r = e.createTextNode("\n");
                e.appendChild(n, r), e.appendChild(t, n);
                var n = e.createTextNode("\n");
                return e.appendChild(t, n), t
            },
            buildRenderNodes: function (e, t, n) {
                var r = new Array(1);
                return r[0] = e.createMorphAt(e.childAt(t, [0]), 1, 1), r
            },
            statements: [["inline", "outlet", ["tool-panels"], [], ["loc", [null, [2, 4], [2, 28]]]]],
            locals: [],
            templates: []
        }
    }())
}),define("portia-ui/transforms/array", ["exports", "ember-data"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.Transform.extend({
        deserialize: function (e) {
            return Array.isArray(e) ? e : []
        }, serialize: function (e) {
            return Array.isArray(e) ? e : []
        }
    })
}),define("portia-ui/transforms/json", ["exports", "ember-data"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.Transform.extend({
        deserialize: function (e) {
            return JSON.parse(e)
        }, serialize: function (e) {
            return JSON.stringify(e)
        }
    })
}),define("portia-ui/transforms/start-url", ["exports", "ember-data", "portia-ui/models/start-url"], function (e, t, n) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t.default.Transform.extend({
        deserialize: function (e) {
            return Array.isArray(e) ? e.map(function (e) {
                return (0, n.default)(e)
            }) : []
        }, serialize: function (e) {
            return Array.isArray(e) ? e.map(function (e) {
                return e.serialize()
            }) : []
        }
    })
}),define("portia-ui/util-tests/collection-action", ["exports", "ember-api-actions/util-tests/collection-action"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), Object.defineProperty(e, "default", {
        enumerable: !0,
        get: function () {
            return t.default
        }
    })
}),define("portia-ui/util-tests/member-action", ["exports", "ember-api-actions/util-tests/member-action"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), Object.defineProperty(e, "default", {
        enumerable: !0,
        get: function () {
            return t.default
        }
    })
}),define("portia-ui/utils/attrs", ["exports"], function (e) {
    function t(e) {
        return !Ember.isNone(e) && "object" === (void 0 === e ? "undefined" : a(e)) && "value" in e ? e.value : e
    }

    function n(e, n, r) {
        return !e || t(e[r]) !== t(n[r])
    }

    function r(e, r, a, l) {
        return n(e, r, a) && t(r[a]) === l
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.attrValue = t, e.attrChanged = n, e.attrChangedTo = r;
    var a = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e
    } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
    };
    e.default = {attrValue: t, attrChanged: n, attrChangedTo: r}
}),define("portia-ui/utils/browser-features", ["exports"], function (e) {
    function t() {
        var e = ["eventlistener", "json", "postmessage", "queryselector", "requestanimationframe", "svg", "websockets", "cssanimations", "csscalc", "flexbox", "nthchild", "csspointerevents", "opacity", "csstransforms", "csstransitions", "cssvhunit", "classlist", "placeholder", "localstorage", "svgasimg", "datauri", "atobbtoa"],
            t = e.map(function (e) {
                return new n.Promise(function (t) {
                    Modernizr.on(e, function (e) {
                        t(e)
                    })
                })
            });
        return n.all(t)
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t;
    var n = Ember.RSVP
}),define("portia-ui/utils/colors", ["exports"], function (e) {
    function t(e, t, n) {
        return {
            main: Ember.$.Color(e.main).transition(Ember.$.Color(t.main), n).toHexString(),
            shadow: Ember.$.Color(e.shadow).transition(Ember.$.Color(t.shadow), n).toHexString()
        }
    }

    function n(e) {
        var n, r, o, i;
        return regeneratorRuntime.wrap(function (a) {
            for (; ;) switch (a.prev = a.next) {
                case 0:
                    n = l.length / e, r = 0;
                case 2:
                    if (!(r < e)) {
                        a.next = 13;
                        break
                    }
                    if (o = Math.floor(r * n), i = Math.ceil(r * n), o !== i) {
                        a.next = 8;
                        break
                    }
                    return a.next = 8, l[o];
                case 8:
                    return a.next = 10, t(l[o], l[i] || l[0], r * n - o);
                case 10:
                    r++, a.next = 2;
                    break;
                case 13:
                case"end":
                    return a.stop()
            }
        }, a, this)
    }

    function r(e) {
        return e <= l.length >> 1 ? l.filter(function (e, t) {
            return t % 2 == 0
        }).slice(0, e) : e <= l.length ? l.slice(0, e) : Array.from(n(e))
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.interpolate = t, e.getColors = r;
    var a = regeneratorRuntime.mark(n), l = e.COLORS = [{name: "indigo", main: "#3f51b5", shadow: "#1a237e"}, {
            name: "blue",
            main: "#2196f3",
            shadow: "#0d47a1"
        }, {name: "light blue", main: "#03a9f4", shadow: "#01579b"}, {
            name: "cyan",
            main: "#00bcd4",
            shadow: "#006064"
        }, {name: "teal", main: "#009688", shadow: "#004d40"}, {
            name: "green",
            main: "#4caf50",
            shadow: "#1b5e20"
        }, {name: "light green", main: "#8bc34a", shadow: "#33691e"}, {
            name: "lime",
            main: "#cddc39",
            shadow: "#827717"
        }, {name: "yellow", main: "#ffeb3b", shadow: "#f57f17"}, {
            name: "amber",
            main: "#ffc107",
            shadow: "#ff6f00"
        }, {name: "orange", main: "#ff9800", shadow: "#e65100"}, {
            name: "deep orange",
            main: "#ff5722",
            shadow: "#bf360c"
        }, {name: "red", main: "#f44336", shadow: "#b71c1c"}, {
            name: "pink",
            main: "#e91e63",
            shadow: "#880e4f"
        }, {name: "purple", main: "#9c27b0", shadow: "#4a148c"}, {name: "deep purple", main: "#673ab7", shadow: "#311b92"}],
        o = e.NAMED_COLORS = {}, i = !0, c = !1, s = void 0;
    try {
        for (var u, d = l[Symbol.iterator](); !(i = (u = d.next()).done); i = !0) {
            var m = u.value;
            o[m.name] = m
        }
    } catch (e) {
        c = !0, s = e
    } finally {
        try {
            !i && d.return && d.return()
        } finally {
            if (c) throw s
        }
    }
}),define("portia-ui/utils/computed", ["exports"], function (e) {
    function t(e, t) {
        return Ember.computed(e, t, function () {
            return this.get(e) === this.get(t)
        })
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.computedPropertiesEqual = t
}),define("portia-ui/utils/ensure-promise", ["exports"], function (e) {
    function t(e) {
        return new Ember.RSVP.Promise(function (t) {
            t(e)
        })
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t
}),define("portia-ui/utils/interaction-event", ["exports"], function (e) {
    function t(e) {
        if (e.type in n) return n[e.type];
        throw new Error("Can't serialize event of type " + e.type)
    }

    Object.defineProperty(e, "__esModule", {value: !0});
    var n = {
            keyup: "keyboard",
            keydown: "keyboard",
            keypress: "keyboard",
            mousedown: "mouse",
            mouseup: "mouse",
            click: "mouse",
            scroll: "scroll",
            focus: "focus",
            blur: "focus",
            input: "simple",
            change: "simple"
        }, r = function (e) {
            function n(t, n) {
                e.type in t && t[e.type].forEach(function (e) {
                    e in r && (n[e] = r[e])
                })
            }

            var r = e.target, i = r.ownerDocument;
            if (r && r.nodeType === Node.DOCUMENT_NODE && (i = r, r = i.documentElement), !r || !r.nodeid) return null;
            var c = {category: t(e.originalEvent || e), type: e.type, target: r.nodeid, propsBefore: {}, propsAfter: {}};
            if ("mouse" === c.category) {
                var s = r.getBoundingClientRect();
                c.targetX = e.clientX - s.left, c.targetY = e.clientY - s.top, c.relatedTarget = e.relatedTarget && e.relatedTarget.nodeid
            } else if ("scroll" === c.type) {
                var u = r;
                u !== i.documentElement || r.scrollTopMax || r.scrollLeftMax || (u = i.body), u ? (c.scrollTop = u.scrollTop, c.scrollTopPercent = u.scrollTopMax && Math.round(100 * u.scrollTop / u.scrollTopMax), c.scrollLeft = u.scrollLeft) : (c.scrollTop = 0, c.scrollLeft = 0, c.scrollTopPercent = 0)
            }
            return a.forEach(function (t) {
                t in e && (c[t] = e[t])
            }), n(l, c.propsBefore), n(o, c.propsAfter), c
        },
        a = ["altKey", "bubbles", "button", "buttons", "cancelable", "code", "ctrlKey", "deltaX", "deltaY", "deltaZ", "deltaMode", "detail", "isComposing", "isTrusted", "key", "keyCode", "location", "metaKey", "relatedTargetId", "shiftKey", "type"],
        l = {change: ["selectedIndex"], input: ["value"], keyup: ["value"], click: ["checked"]},
        o = {keydown: ["value"], keypress: ["value"]};
    e.default = r
}),define("portia-ui/utils/promises", ["exports"], function (e) {
    function t(e) {
        return new Ember.RSVP.Promise(function (t) {
            t(e)
        })
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.ensurePromise = t, e.default = {ensurePromise: t}
}),define("portia-ui/utils/selectors", ["exports"], function (e) {
    function t(e) {
        if (Array.isArray(e)) {
            for (var t = 0, n = Array(e.length); t < e.length; t++) n[t] = e[t];
            return n
        }
        return Array.from(e)
    }

    function n(e) {
        for (var t = [e]; e.parentElement && !e.parentElement.isEqualNode(document.documentElement);) e = e.parentElement, t.unshift(e);
        return t
    }

    function r(e) {
        return Array.prototype.indexOf.call(e.parentNode.children, e) + 1
    }

    function a(e) {
        return n(e).map(function (e) {
            return e.tagName.toLowerCase()
        }).join(" > ")
    }

    function l(e) {
        return n(e).map(function (e, t) {
            var n = e.tagName.toLowerCase();
            return 0 === t ? n : n + ":nth-child(" + r(e) + ")"
        }).join(" > ")
    }

    function o(e) {
        var t = w.create({elements: [e]}), n = t.get("selector");
        return t.destroy(), n
    }

    function i(e) {
        var t = e.split(", "), n = [], r = !0, a = !1, l = void 0;
        try {
            for (var o, i = t[Symbol.iterator](); !(r = (o = i.next()).done); r = !0) {
                var c = o.value, s = c.split(" > "), u = [], d = !0, m = !1, p = void 0;
                try {
                    for (var h, f = s[Symbol.iterator](); !(d = (h = f.next()).done); d = !0) {
                        var b = h.value, g = b.split(" + "), v = [], y = !0, C = !1, x = void 0;
                        try {
                            for (var E, N = g[Symbol.iterator](); !(y = (E = N.next()).done); y = !0) {
                                var A = E.value;
                                if ("*" === A) v.push("*[1]"); else if (A.startsWith("#")) v.push('*[@id="' + A.slice(1) + '"]'); else {
                                    var R = void 0;
                                    if (R = A.match(/^([a-z]+[0-9]?)?(?:\.((?:.(?!:nth-child))+.))?(?::nth-child\((\d+)\))?(?::nth-child\((\d*)n\+(\d+)\))?(?::nth-child\(-(\d*)n\+(\d+)\))?$/)) {
                                        var F = "";
                                        if (R[3] && (F += "[" + R[3] + "]"), R[5] || R[7]) {
                                            var w = void 0 === R[4] ? R[6] : R[4], M = R[5], T = R[7],
                                                j = (void 0 === M ? T : M) % w, k = "position() mod " + w + " = " + j;
                                            M && M > w && (k += " and position() >= " + M), T && (k += " and position() <= " + T), F += "[" + k + "]"
                                        }
                                        R[2] && (F += '[contains(concat(" ", @class, " "), " ' + R[2] + ' ")]'), v.push("" + (R[1] || "*") + F)
                                    }
                                }
                            }
                        } catch (e) {
                            C = !0, x = e
                        } finally {
                            try {
                                !y && N.return && N.return()
                            } finally {
                                if (C) throw x
                            }
                        }
                        u.push(v.join("/following-sibling::"))
                    }
                } catch (e) {
                    m = !0, p = e
                } finally {
                    try {
                        !d && f.return && f.return()
                    } finally {
                        if (m) throw p
                    }
                }
                n.push("//" + u.join("/"))
            }
        } catch (e) {
            a = !0, l = e
        } finally {
            try {
                !r && i.return && i.return()
            } finally {
                if (a) throw l
            }
        }
        return n.join(" | ")
    }

    function c(e, n) {
        return new Set([].concat(t(e)).filter(function (e) {
            return n.has(e)
        }))
    }

    function s(e, n) {
        return new Set([].concat(t(e)).filter(function (e) {
            return !n.has(e)
        }))
    }

    function u(e, t) {
        if (!e) return [];
        for (var n = [], r = e.parentElement; r;) if (n.push(r), (r = r.parentElement) === t) return n;
        return n
    }

    function d(e, t) {
        if (!e) return [];
        for (var n = [], r = e.previousElementSibling; r && r !== t;) n.push(r), r = r.previousElementSibling;
        return n
    }

    function m(e, t) {
        void 0 === t && (t = u(e), t.unshift(e));
        var n = t.indexOf(e);
        return n < 0 ? 0 : t.length - n
    }

    function p(e, t) {
        var n = [], r = !0, a = !1, l = void 0;
        try {
            for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done); r = !0) {
                var s = o.value;
                n.push(u(s, t))
            }
        } catch (e) {
            a = !0, l = e
        } finally {
            try {
                !r && i.return && i.return()
            } finally {
                if (a) throw l
            }
        }
        var d = n.map(function (e) {
            return new Set(e)
        }), m = d[0] || new Set, p = !0, h = !1, f = void 0;
        try {
            for (var b, g = d.slice(1, d.length)[Symbol.iterator](); !(p = (b = g.next()).done); p = !0) {
                m = c(m, b.value)
            }
        } catch (e) {
            h = !0, f = e
        } finally {
            try {
                !p && g.return && g.return()
            } finally {
                if (h) throw f
            }
        }
        return Array.from(m)
    }

    function h(e) {
        var n;
        return p((n = []).concat.apply(n, t(e)))[0]
    }

    function f(e, n) {
        var r = v(e, n);
        if (1 === r.length) return [[], 0];
        var a = r.map(function (e) {
            return p(e, n)
        });
        if (0 === a.length) return [[], 0];
        if (a.isEvery("length", a[0].length) && new Set(a.map(function (e) {
            return e[0]
        })).size === a.length) return [a[0].length ? a.map(function (e) {
            return e[0]
        }) : [], 0];
        var l = Math.min.apply(Math, t(a.map(function (e) {
            return e.length
        })));
        return a = a.map(function (e) {
            return e.slice(e.length - l, e.length)
        }), new Set(a.map(function (e) {
            return e[0]
        })).size === a.length ? [a[0].length ? a.map(function (e) {
            return e[0]
        }) : [], 0] : b(r, n)
    }

    function b(e, n) {
        var r = g(e, !1), a = [], l = new Set, o = new Set, i = !0, c = !1, s = void 0;
        try {
            for (var m, p = r[Symbol.iterator](); !(i = (m = p.next()).done); i = !0) {
                var h = m.value, f = E(h, 2), b = f[0], v = f[1];
                a.push([u(b, n).reverse(), u(v, n).reverse()])
            }
        } catch (e) {
            c = !0, s = e
        } finally {
            try {
                !i && p.return && p.return()
            } finally {
                if (c) throw s
            }
        }
        var y = !0, C = !1, x = void 0;
        try {
            for (var N, A = a[Symbol.iterator](); !(y = (N = A.next()).done); y = !0) {
                var R = N.value, F = !0, w = !1, M = void 0;
                try {
                    for (var T, j = R[Symbol.iterator](); !(F = (T = j.next()).done); F = !0) {
                        var k = T.value, S = !0, _ = !1, B = void 0;
                        try {
                            for (var D, P = k[Symbol.iterator](); !(S = (D = P.next()).done); S = !0) {
                                var O = D.value;
                                l.has(O) ? o.add(O) : l.add(O)
                            }
                        } catch (e) {
                            _ = !0, B = e
                        } finally {
                            try {
                                !S && P.return && P.return()
                            } finally {
                                if (_) throw B
                            }
                        }
                    }
                } catch (e) {
                    w = !0, M = e
                } finally {
                    try {
                        !F && j.return && j.return()
                    } finally {
                        if (w) throw M
                    }
                }
            }
        } catch (e) {
            C = !0, x = e
        } finally {
            try {
                !y && A.return && A.return()
            } finally {
                if (C) throw x
            }
        }
        var L = 0, I = function (e) {
            return !o.has(e)
        }, H = !0, U = !1, q = void 0;
        try {
            for (var z, V = a[Symbol.iterator](); !(H = (z = V.next()).done); H = !0) {
                var $ = z.value, W = E($, 2), G = W[0], J = W[1];
                a[L] = [G.filter(I), J.filter(I)], L += 1
            }
        } catch (e) {
            U = !0, q = e
        } finally {
            try {
                !H && V.return && V.return()
            } finally {
                if (U) throw q
            }
        }
        var Y = a.map(function (e) {
            return d(e[1][0], e[0][0]).length + 1
        }), K = Math.min.apply(Math, t(Y));
        return [a.map(function (e) {
            return e[0][0]
        }).filter(function (e) {
            return !!e
        }), K]
    }

    function g(e) {
        var t = !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1], n = {};
        return e.map(function (e) {
            var r = [], a = !0, l = !1, o = void 0;
            try {
                for (var i, c = e[Symbol.iterator](); !(a = (i = c.next()).done); a = !0) {
                    var s = i.value, u = s.getAttribute("data-tagid");
                    u && (u = parseInt(u), r.push(u), n[u] = s)
                }
            } catch (e) {
                l = !0, o = e
            } finally {
                try {
                    !a && c.return && c.return()
                } finally {
                    if (l) throw o
                }
            }
            return t ? [Math.min.apply(Math, r), Math.max.apply(Math, r)] : [n[Math.min.apply(Math, r)], n[Math.max.apply(Math, r)]]
        })
    }

    function v(e, n) {
        var r = {}, a = 0, l = !0, o = !1, i = void 0;
        try {
            for (var c, d = e[Symbol.iterator](); !(l = (c = d.next()).done); l = !0) {
                var m = c.value;
                r[a] = m, a += 1
            }
        } catch (e) {
            o = !0, i = e
        } finally {
            try {
                !l && d.return && d.return()
            } finally {
                if (o) throw i
            }
        }
        var p = new Set(Object.keys(r).map(function (e) {
            return r[e].length
        }));
        if (1 === p.size) return y(r);
        var h = Math.max.apply(Math, t(p)), f = {}, b = {};
        for (var v in r) r[v].length === h ? f[v] = r[v] : b[v] = r[v];
        var C = y(f), x = g(C), N = {}, A = 0, R = new Set;
        for (var F in b) {
            var w = b[F], M = !0, T = !1, j = void 0;
            try {
                for (var k, S = w[Symbol.iterator](); !(M = (k = S.next()).done); M = !0) {
                    var _ = k.value;
                    A = 0;
                    var B = !0, D = !1, P = void 0;
                    try {
                        for (var O, L = x[Symbol.iterator](); !(B = (O = L.next()).done); B = !0) {
                            var I = O.value, H = E(I, 2), U = H[0], q = H[1],
                                z = parseInt(_.getAttribute("data-tagid"));
                            if (z && z > U && z < q) {
                                C[A].push(_), R.add(_);
                                break
                            }
                            A += 1
                        }
                    } catch (e) {
                        D = !0, P = e
                    } finally {
                        try {
                            !B && L.return && L.return()
                        } finally {
                            if (D) throw P
                        }
                    }
                    R.has(_) || (N[F] ? N[F].push([_, u(_, n)]) : N[F] = [[_, u(_, n)]])
                }
            } catch (e) {
                T = !0, j = e
            } finally {
                try {
                    !M && S.return && S.return()
                } finally {
                    if (T) throw j
                }
            }
        }
        var V = [], $ = !0, W = !1, G = void 0;
        try {
            for (var J, Y = C[Symbol.iterator](); !($ = (J = Y.next()).done); $ = !0) {
                var K = J.value, Z = [], X = !0, Q = !1, ee = void 0;
                try {
                    for (var te, ne = K[Symbol.iterator](); !(X = (te = ne.next()).done); X = !0) {
                        var re = te.value;
                        Z = Z.concat(u(re, n))
                    }
                } catch (e) {
                    Q = !0, ee = e
                } finally {
                    try {
                        !X && ne.return && ne.return()
                    } finally {
                        if (Q) throw ee
                    }
                }
                var ae = [], le = [], oe = [], ie = !0, ce = !1, se = void 0;
                try {
                    for (var ue, de = Z[Symbol.iterator](); !(ie = (ue = de.next()).done); ie = !0) {
                        var me = ue.value, pe = le.indexOf(me);
                        pe > 0 ? ae[pe] += 1 : (ae.push(1), le.push(me))
                    }
                } catch (e) {
                    ce = !0, se = e
                } finally {
                    try {
                        !ie && de.return && de.return()
                    } finally {
                        if (ce) throw se
                    }
                }
                for (A = 0; A < le.length; A++) oe.push([ae[A], le[A]]);
                Z = [];
                var he = !0, fe = !1, be = void 0;
                try {
                    for (var ge, ve = oe.sort()[Symbol.iterator](); !(he = (ge = ve.next()).done); he = !0) {
                        var ye = ge.value;
                        Z.push(ye[1])
                    }
                } catch (e) {
                    fe = !0, be = e
                } finally {
                    try {
                        !he && ve.return && ve.return()
                    } finally {
                        if (fe) throw be
                    }
                }
                V.push(new Set(Z))
            }
        } catch (e) {
            W = !0, G = e
        } finally {
            try {
                !$ && Y.return && Y.return()
            } finally {
                if (W) throw G
            }
        }
        var Ce = [], xe = !0, Ee = !1, Ne = void 0;
        try {
            for (var Ae, Re = V[Symbol.iterator](); !(xe = (Ae = Re.next()).done); xe = !0) {
                var Fe = Ae.value, we = !0, Me = !1, Te = void 0;
                try {
                    for (var je, ke = V[Symbol.iterator](); !(we = (je = ke.next()).done); we = !0) {
                        var Se = je.value;
                        Se !== Fe && (Fe = s(Fe, Se))
                    }
                } catch (e) {
                    Me = !0, Te = e
                } finally {
                    try {
                        !we && ke.return && ke.return()
                    } finally {
                        if (Me) throw Te
                    }
                }
                Ce.push(Fe)
            }
        } catch (e) {
            Ee = !0, Ne = e
        } finally {
            try {
                !xe && Re.return && Re.return()
            } finally {
                if (Ee) throw Ne
            }
        }
        A = 0;
        var _e = !0, Be = !1, De = void 0;
        try {
            for (var Pe, Oe = Ce[Symbol.iterator](); !(_e = (Pe = Oe.next()).done); _e = !0) {
                var Z = Pe.value;
                for (var Le in N) {
                    var Ie = !0, He = !1, Ue = void 0;
                    try {
                        for (var qe, ze = N[Le][Symbol.iterator](); !(Ie = (qe = ze.next()).done); Ie = !0) {
                            var Ve = qe.value, $e = E(Ve, 2), We = $e[0], Ge = $e[1], Je = !0, Ye = !1, Ke = void 0;
                            try {
                                for (var Ze, Xe = Ge[Symbol.iterator](); !(Je = (Ze = Xe.next()).done); Je = !0) {
                                    var Qe = Ze.value;
                                    if (Z.has(Qe)) {
                                        C[A].push(We);
                                        break
                                    }
                                }
                            } catch (e) {
                                Ye = !0, Ke = e
                            } finally {
                                try {
                                    !Je && Xe.return && Xe.return()
                                } finally {
                                    if (Ye) throw Ke
                                }
                            }
                        }
                    } catch (e) {
                        He = !0, Ue = e
                    } finally {
                        try {
                            !Ie && ze.return && ze.return()
                        } finally {
                            if (He) throw Ue
                        }
                    }
                }
                A += 1
            }
        } catch (e) {
            Be = !0, De = e
        } finally {
            try {
                !_e && Oe.return && Oe.return()
            } finally {
                if (Be) throw De
            }
        }
        return C
    }

    function y(e) {
        var t = [], n = !0, r = !1, a = void 0;
        try {
            for (var l, o = Object.keys(e)[Symbol.iterator](); !(n = (l = o.next()).done); n = !0) {
                var i = l.value, c = !0, s = !1, u = void 0;
                try {
                    for (var d, m = e[i].entries()[Symbol.iterator](); !(c = (d = m.next()).done); c = !0) {
                        var p = d.value, h = E(p, 2), f = h[0], b = h[1];
                        t[f] || (t[f] = []), t[f].push(b)
                    }
                } catch (e) {
                    s = !0, u = e
                } finally {
                    try {
                        !c && m.return && m.return()
                    } finally {
                        if (s) throw u
                    }
                }
            }
        } catch (e) {
            r = !0, a = e
        } finally {
            try {
                !n && o.return && o.return()
            } finally {
                if (r) throw a
            }
        }
        return t
    }

    function C(e, t) {
        var n = [];
        return x(e, t, n), n
    }

    function x(e, t, n) {
        var r = [], a = !0, l = !1, o = void 0;
        try {
            for (var i, c = e[Symbol.iterator](); !(a = (i = c.next()).done); a = !0) {
                var s = i.value, u = s.annotation, d = s.children, m = void 0;
                d ? (m = T.create({}), m.addChildren(x(d, t, n))) : m = M.create({
                    selectorMatcher: t,
                    annotation: u
                }), r.push(m), n.push([u, m])
            }
        } catch (e) {
            l = !0, o = e
        } finally {
            try {
                !a && c.return && c.return()
            } finally {
                if (l) throw o
            }
        }
        return r
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.elementPath = n, e.pathSelector = a, e.uniquePathSelector = l, e.smartSelector = o, e.cssToXpath = i, e.setIntersection = c, e.setDifference = s, e.getParents = u, e.getPreviousSiblings = d, e.closestParentIndex = m, e.findContainers = p, e.findContainer = h, e.findRepeatedContainers = f, e.parentWithSiblings = b, e.groupItems = v, e.makeItemsFromGroups = y, e.createSelectorGenerators = C;
    var E = function () {
            function e(e, t) {
                var n = [], r = !0, a = !1, l = void 0;
                try {
                    for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
                } catch (e) {
                    a = !0, l = e
                } finally {
                    try {
                        !r && i.return && i.return()
                    } finally {
                        if (a) throw l
                    }
                }
                return n
            }

            return function (t, n) {
                if (Array.isArray(t)) return t;
                if (Symbol.iterator in Object(t)) return e(t, n);
                throw new TypeError("Invalid attempt to destructure non-iterable instance")
            }
        }(), N = Ember.computed, A = Ember.guidFor, R = new Set(["tbody"]), F = CSS.escape,
        w = e.BaseSelectorGenerator = Ember.Object.extend({
            parent: null,
            elements: [],
            siblings: null,
            paths: N.map("elements", n),
            groupedPaths: N("paths", function () {
                var e = this.get("paths");
                return this.groupPaths(e)
            }),
            parentMap: N("parent", "parent.groupedPaths", "parent.selectors", "parent.siblings", function () {
                if (!this.get("parent")) return null;
                var e = this.get("parent.groupedPaths") || [], t = this.get("parent.selectors") || [],
                    n = this.get("parent.siblings") || 0, r = new Map, a = !0, l = !1, o = void 0;
                try {
                    for (var i, c = e.entries()[Symbol.iterator](); !(a = (i = c.next()).done); a = !0) {
                        for (var s = i.value, u = E(s, 2), d = u[0], m = u[1], p = t[d], h = [p], f = 0; f < n; f++) h.push(h[h.length - 1].map(function (e) {
                            return e + " + *"
                        }));
                        var b = !0, g = !1, v = void 0;
                        try {
                            for (var y, C = m[Symbol.iterator](); !(b = (y = C.next()).done); b = !0) {
                                var x = y.value, N = x[x.length - 1];
                                r.set(N, p);
                                for (var A = 0; A < n && (N = N.nextElementSibling); A++) r.set(N, h[A + 1])
                            }
                        } catch (e) {
                            g = !0, v = e
                        } finally {
                            try {
                                !b && C.return && C.return()
                            } finally {
                                if (g) throw v
                            }
                        }
                    }
                } catch (e) {
                    l = !0, o = e
                } finally {
                    try {
                        !a && c.return && c.return()
                    } finally {
                        if (l) throw o
                    }
                }
                return r
            }),
            selectors: N("groupedPaths", "parentMap", function () {
                var e = this.get("groupedPaths"), t = this.get("parentMap");
                return this.createSelectors(e, t)
            }),
            selector: N("selectors", function () {
                var e = this.get("selectors"), t = [], n = !0, r = !1, a = void 0;
                try {
                    for (var l, o = e[Symbol.iterator](); !(n = (l = o.next()).done); n = !0) {
                        var i = l.value, c = !0, s = !1, u = void 0;
                        try {
                            for (var d, m = i[Symbol.iterator](); !(c = (d = m.next()).done); c = !0) {
                                var p = d.value, h = p.split(" > "), f = h[h.length - 1];
                                R.has(f) && i.includes(h.slice(0, -1).join(" > ")) || t.push(p)
                            }
                        } catch (e) {
                            s = !0, u = e
                        } finally {
                            try {
                                !c && m.return && m.return()
                            } finally {
                                if (s) throw u
                            }
                        }
                    }
                } catch (e) {
                    r = !0, a = e
                } finally {
                    try {
                        !n && o.return && o.return()
                    } finally {
                        if (r) throw a
                    }
                }
                return this.mergeSelectors(t)
            }),
            xpath: N("selector", function () {
                return i(this.get("selector"))
            }),
            groupPaths: function (e) {
                var t = new Map, n = !0, r = !1, a = void 0;
                try {
                    for (var l, o = e[Symbol.iterator](); !(n = (l = o.next()).done); n = !0) {
                        var i = l.value, c = [A(i[0])].concat(i.map(function (e) {
                            return e.tagName
                        })).join(" ").toLowerCase(), s = t.get(c) || [];
                        t.set(c, s), s.push(i)
                    }
                } catch (e) {
                    r = !0, a = e
                } finally {
                    try {
                        !n && o.return && o.return()
                    } finally {
                        if (r) throw a
                    }
                }
                return Array.from(t.values())
            },
            createSelectors: function (e, t) {
                var n = this;
                return e.map(function (e) {
                    return n.createGroupSelectors(e, t)
                })
            },
            createGroupSelectors: function (e, n) {
                var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], a = e && e[0] && e[0][0],
                    l = 0, o = null, i = [a.tagName.toLowerCase()], c = e[0].length;
                if (n) for (var s = 1; s < c; s++) n.has(e[0][s]) && (l = s);
                if (l) {
                    var u = Array.from(new Set(e.map(function (e) {
                        return e[l]
                    })));
                    o = u, i = n.get(u[0])
                }
                var d = null;
                e:for (var m = l + 1; m < c; m++) {
                    var p = this.getGroupElementsAtIndex(e, m), h = [];
                    if (1 === p.length) {
                        var f = p[0].id;
                        f && !o && h.push(["#" + F(f)])
                    }
                    var b = p[0].tagName.toLowerCase(), g = this.getElementClassSelectors(p), v = b + g.join("");
                    if (!r) {
                        var y = !0, C = !1, x = void 0;
                        try {
                            for (var E, N = g[Symbol.iterator](); !(y = (E = N.next()).done); y = !0) {
                                var A = E.value;
                                h.push([A])
                            }
                        } catch (e) {
                            C = !0, x = e
                        } finally {
                            try {
                                !y && N.return && N.return()
                            } finally {
                                if (C) throw x
                            }
                        }
                        R.has(b) || h.push([b]);
                        var w = !0, M = !1, T = void 0;
                        try {
                            for (var j, k = g[Symbol.iterator](); !(w = (j = k.next()).done); w = !0) {
                                var S = j.value;
                                h.push([b + S])
                            }
                        } catch (e) {
                            M = !0, T = e
                        } finally {
                            try {
                                !w && k.return && k.return()
                            } finally {
                                if (M) throw T
                            }
                        }
                    }
                    if (!R.has(b)) {
                        var _ = this.getElementIndices(p);
                        if (_.length > 1 && !r) {
                            for (var B = _[1] - _[0], D = !0, P = 2; P < _.length; P++) _[P] - _[P - 1] !== B && (D = !1);
                            if (D) {
                                var O = _[0], L = _[_.length - 1];
                                1 === B && (B = ""), h.push([b + ":nth-child(" + B + "n+" + O + ")"], [b + ":nth-child(-" + B + "n+" + L + ")"], [b + ":nth-child(" + B + "n+" + O + "):nth-child(-" + B + "n+" + L + ")"]);
                                var I = !0, H = !1, U = void 0;
                                try {
                                    for (var q, z = g[Symbol.iterator](); !(I = (q = z.next()).done); I = !0) {
                                        var V = q.value;
                                        h.push([V + ":nth-child(" + B + "n+" + O + ")"], [V + ":nth-child(-" + B + "n+" + L + ")"], [V + ":nth-child(" + B + "n+" + O + "):nth-child(-" + B + "n+" + L + ")"]), h.push(["" + b + V + ":nth-child(" + B + "n+" + O + ")"], ["" + b + V + ":nth-child(-" + B + "n+" + L + ")"], ["" + b + V + ":nth-child(" + B + "n+" + O + "):nth-child(-" + B + "n+" + L + ")"])
                                    }
                                } catch (e) {
                                    H = !0, U = e
                                } finally {
                                    try {
                                        !I && z.return && z.return()
                                    } finally {
                                        if (H) throw U
                                    }
                                }
                            }
                        }
                        if (!r) {
                            var $ = [], W = !0, G = !1, J = void 0;
                            try {
                                for (var Y, K = _[Symbol.iterator](); !(W = (Y = K.next()).done); W = !0) {
                                    var Z = Y.value;
                                    $.push(b + ":nth-child(" + Z + ")")
                                }
                            } catch (e) {
                                G = !0, J = e
                            } finally {
                                try {
                                    !W && K.return && K.return()
                                } finally {
                                    if (G) throw J
                                }
                            }
                            h.push($);
                            var X = !0, Q = !1, ee = void 0;
                            try {
                                for (var te, ne = g[Symbol.iterator](); !(X = (te = ne.next()).done); X = !0) {
                                    var re = te.value, ae = [], le = [], oe = !0, ie = !1, ce = void 0;
                                    try {
                                        for (var se, ue = _[Symbol.iterator](); !(oe = (se = ue.next()).done); oe = !0) {
                                            var de = se.value, me = re + ":nth-child(" + de + ")";
                                            ae.push(me), le.push("" + b + me)
                                        }
                                    } catch (e) {
                                        ie = !0, ce = e
                                    } finally {
                                        try {
                                            !oe && ue.return && ue.return()
                                        } finally {
                                            if (ie) throw ce
                                        }
                                    }
                                    h.push(ae), h.push(le)
                                }
                            } catch (e) {
                                Q = !0, ee = e
                            } finally {
                                try {
                                    !X && ne.return && ne.return()
                                } finally {
                                    if (Q) throw ee
                                }
                            }
                        }
                        r && 1 === _.length && h.push([v + ":nth-child(" + _[0] + ")"])
                    }
                    if (r && h.push([v]), !(o || r && 1 !== p.length)) {
                        var pe = !0, he = !1, fe = void 0;
                        try {
                            for (var be, ge = h[Symbol.iterator](); !(pe = (be = ge.next()).done); pe = !0) {
                                var ve = be.value, ye = a.querySelectorAll(this.mergeSelectors(ve));
                                if (ye.length === p.length) {
                                    i = ve;
                                    continue e
                                }
                            }
                        } catch (e) {
                            he = !0, fe = e
                        } finally {
                            try {
                                !pe && ge.return && ge.return()
                            } finally {
                                if (he) throw fe
                            }
                        }
                    }
                    var Ce = !0, xe = !1, Ee = void 0;
                    try {
                        for (var Ne, Ae = h[Symbol.iterator](); !(Ce = (Ne = Ae.next()).done); Ce = !0) {
                            var Re = Ne.value, Fe = [], we = !0, Me = !1, Te = void 0;
                            try {
                                for (var je, ke = i[Symbol.iterator](); !(we = (je = ke.next()).done); we = !0) {
                                    var Se = je.value, _e = !0, Be = !1, De = void 0;
                                    try {
                                        for (var Pe, Oe = Re[Symbol.iterator](); !(_e = (Pe = Oe.next()).done); _e = !0) {
                                            var Le = Pe.value;
                                            Fe.push(Se + " > " + Le)
                                        }
                                    } catch (e) {
                                        Be = !0, De = e
                                    } finally {
                                        try {
                                            !_e && Oe.return && Oe.return()
                                        } finally {
                                            if (Be) throw De
                                        }
                                    }
                                }
                            } catch (e) {
                                Me = !0, Te = e
                            } finally {
                                try {
                                    !we && ke.return && ke.return()
                                } finally {
                                    if (Me) throw Te
                                }
                            }
                            if (d) {
                                var Ie = !0, He = !1, Ue = void 0;
                                try {
                                    for (var qe, ze = i[Symbol.iterator](); !(Ie = (qe = ze.next()).done); Ie = !0) {
                                        var Ve = qe.value, $e = !0, We = !1, Ge = void 0;
                                        try {
                                            for (var Je, Ye = Re[Symbol.iterator](); !($e = (Je = Ye.next()).done); $e = !0) {
                                                var Ke = Je.value;
                                                Fe.push(Ve + " > " + d + " > " + Ke)
                                            }
                                        } catch (e) {
                                            We = !0, Ge = e
                                        } finally {
                                            try {
                                                !$e && Ye.return && Ye.return()
                                            } finally {
                                                if (We) throw Ge
                                            }
                                        }
                                    }
                                } catch (e) {
                                    He = !0, Ue = e
                                } finally {
                                    try {
                                        !Ie && ze.return && ze.return()
                                    } finally {
                                        if (He) throw Ue
                                    }
                                }
                            }
                            var Ze = this.mergeSelectors(Fe), Xe = void 0;
                            if (o) {
                                Xe = new Set;
                                var Qe = !0, et = !1, tt = void 0;
                                try {
                                    for (var nt, rt = o[Symbol.iterator](); !(Qe = (nt = rt.next()).done); Qe = !0) {
                                        var at = nt.value, lt = !0, ot = !1, it = void 0;
                                        try {
                                            for (var ct, st = at.querySelectorAll(Ze)[Symbol.iterator](); !(lt = (ct = st.next()).done); lt = !0) {
                                                var ut = ct.value;
                                                Xe.add(ut)
                                            }
                                        } catch (e) {
                                            ot = !0, it = e
                                        } finally {
                                            try {
                                                !lt && st.return && st.return()
                                            } finally {
                                                if (ot) throw it
                                            }
                                        }
                                    }
                                } catch (e) {
                                    et = !0, tt = e
                                } finally {
                                    try {
                                        !Qe && rt.return && rt.return()
                                    } finally {
                                        if (et) throw tt
                                    }
                                }
                                Xe = Array.from(Xe)
                            } else Xe = a.querySelectorAll(Ze);
                            if (r || Xe.length === p.length) {
                                i = Fe, d = null;
                                continue e
                            }
                        }
                    } catch (e) {
                        xe = !0, Ee = e
                    } finally {
                        try {
                            !Ce && Ae.return && Ae.return()
                        } finally {
                            if (xe) throw Ee
                        }
                    }
                    d = b
                }
                if (d) {
                    var dt;
                    i = (dt = i).concat.apply(dt, t(i.map(function (e) {
                        return e + " > " + d
                    })))
                }
                return i
            },
            mergeSelectors: function (e) {
                for (; Array.isArray(e);) e = e.join(", ");
                return e
            },
            getGroupElementsAtIndex: function (e, t) {
                return Array.from(new Set(e.map(function (e) {
                    return e[t]
                })))
            },
            getElementClassSelectors: function (e) {
                var t = new Map, n = [], r = !0, a = !1, l = void 0;
                try {
                    for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done); r = !0) {
                        var c = o.value;
                        if (!c.classList.length) {
                            t.clear();
                            break
                        }
                        var s = !0, u = !1, d = void 0;
                        try {
                            for (var m, p = Array.from(c.classList)[Symbol.iterator](); !(s = (m = p.next()).done); s = !0) {
                                var h = m.value;
                                t.set(h, (t.get(h) || 0) + 1)
                            }
                        } catch (e) {
                            u = !0, d = e
                        } finally {
                            try {
                                !s && p.return && p.return()
                            } finally {
                                if (u) throw d
                            }
                        }
                    }
                } catch (e) {
                    a = !0, l = e
                } finally {
                    try {
                        !r && i.return && i.return()
                    } finally {
                        if (a) throw l
                    }
                }
                var f = !0, b = !1, g = void 0;
                try {
                    for (var v, y = t.entries()[Symbol.iterator](); !(f = (v = y.next()).done); f = !0) {
                        var C = v.value, x = E(C, 2), N = x[0];
                        x[1] === e.length && n.push("." + F(N))
                    }
                } catch (e) {
                    b = !0, g = e
                } finally {
                    try {
                        !f && y.return && y.return()
                    } finally {
                        if (b) throw g
                    }
                }
                return n
            },
            getElementIndices: function (e) {
                return Array.from(new Set(e.map(r))).sort(function (e, t) {
                    return e - t
                })
            },
            generalizationDistance: function (e) {
                var t = this.get("paths"), r = this.get("groupedPaths"), a = n(e), l = this.groupPaths([a].concat(t));
                if (l.length > r.length) return 1 / 0;
                var o = l.find(function (e) {
                    return e[0] === a
                }), i = o[0].length, c = 0, s = 0, u = function (e) {
                    return e === a[s]
                };
                for (s = 0; s < i; s++) {
                    var d = this.getGroupElementsAtIndex(o, s);
                    if (1 !== d.length) {
                        var m = d.reject(u), p = this.getElementClassSelectors(d), h = this.getElementClassSelectors(m);
                        if (h.length > p.length) {
                            if (!(p.length >= 1 && h.length - p.length == 1)) return 1 / 0;
                            c++
                        }
                        var f = this.getElementIndices(d);
                        this.getElementIndices(m).length < f.length && c++
                    }
                }
                return c
            }
        }), M = e.AnnotationSelectorGenerator = w.extend({
            selectorMatcher: null,
            annotation: null,
            acceptElements: N("annotation.acceptSelectors.[]", function () {
                var e = this.get("annotation.acceptSelectors");
                return this.get("selectorMatcher").query(this.mergeSelectors(e))
            }),
            rejectElements: N("annotation.rejectSelectors.[]", function () {
                var e = this.get("annotation.rejectSelectors");
                return this.get("selectorMatcher").query(this.mergeSelectors(e))
            }),
            generalizedSelector: N("annotation.selectionMode", "annotation.acceptSelectors.[]", "acceptElements.[]", "rejectElements.[]", function () {
                if ("css" === this.get("annotation.selectionMode")) {
                    var e = this.get("annotation.acceptSelectors");
                    return this.mergeSelectors([e])
                }
                var t = this.get("acceptElements"), r = t.map(n), a = this.groupPaths(r),
                    l = this.createGeneralizedSelectors(a);
                return this.mergeSelectors(l)
            }),
            elements: N("generalizedSelector", function () {
                var e = this.get("generalizedSelector");
                return this.get("selectorMatcher").query(e)
            }),
            selector: N("selectors", "annotation.selectionMode", "annotation.acceptSelectors.[]", "acceptElements.[]", "rejectElements.[]", function () {
                if ("css" === this.get("annotation.selectionMode")) {
                    var e = this.get("annotation.acceptSelectors");
                    if (1 === e.length) return this.mergeSelectors([e]);
                    var t = this.get("acceptElements"), r = t.map(n), a = this.groupPaths(r), l = this.createSelectors(a);
                    return this.mergeSelectors(l)
                }
                var o = this.get("selectors"), i = this.filterRejectedSelectors(o);
                return this.mergeSelectors(i)
            }),
            repeatedAnnotation: N("selector", "parent.repeatedContainers", function () {
                var e = this.get("parent");
                if (!e) return !1;
                var t = this.get("selector"), n = e.get("repeatedContainers"), r = this.get("selectorMatcher"),
                    a = r.query(t);
                if (!(t && a && a.length > 1)) return !1;
                if (n.length > 1) {
                    var l = !0, o = !1, i = void 0;
                    try {
                        for (var c, s = n[Symbol.iterator](); !(l = (c = s.next()).done); l = !0) {
                            var u = c.value, d = 0, m = !0, h = !1, f = void 0;
                            try {
                                for (var b, g = a[Symbol.iterator](); !(m = (b = g.next()).done); m = !0) {
                                    var v = b.value;
                                    if (u.contains(v) && (d += 1), d > 1) break
                                }
                            } catch (e) {
                                h = !0, f = e
                            } finally {
                                try {
                                    !m && g.return && g.return()
                                } finally {
                                    if (h) throw f
                                }
                            }
                            if (d > 1) return !0
                        }
                    } catch (e) {
                        o = !0, i = e
                    } finally {
                        try {
                            !l && s.return && s.return()
                        } finally {
                            if (o) throw i
                        }
                    }
                }
                var y = p(a)[0];
                if (y) {
                    return !e.get("children").filter(function (t) {
                        return t !== e
                    }).any(function (e) {
                        return e.get("parent.container") === y
                    })
                }
                return !1
            }),
            createGeneralizedSelectors: function (e) {
                var t = this, n = e.map(function (e) {
                    return t.createGroupSelectors(e, null, !0)
                });
                return this.filterRejectedSelectors(n)
            },
            filterRejectedSelectors: function (e) {
                var t = this, r = this.get("selectorMatcher"), a = new Set(this.get("rejectElements"));
                return e.map(function (e) {
                    var l = Array.from(r.query(t.mergeSelectors(e))), o = l.filter(function (e) {
                        return !a.has(e)
                    });
                    if (l.length === o.length) return e;
                    var i = o.map(n);
                    return t.createSelectors([i])[0]
                })
            }
        }), T = e.ContainerSelectorGenerator = w.extend({
            init: function () {
                this._super.apply(this, arguments), this.set("children", [])
            },
            destroy: function () {
                var e = !0, t = !1, n = void 0;
                try {
                    for (var r, a = this.get("children")[Symbol.iterator](); !(e = (r = a.next()).done); e = !0) {
                        r.value.set("parent", null)
                    }
                } catch (e) {
                    t = !0, n = e
                } finally {
                    try {
                        !e && a.return && a.return()
                    } finally {
                        if (t) throw n
                    }
                }
                this.set("children", null), this._super.apply(this, arguments)
            },
            autoChildren: N.filterBy("children", "annotation.selectionMode", "auto"),
            childElements: N.mapBy("autoChildren", "elements"),
            container: N("childElements", function () {
                return h(this.get("childElements"))
            }),
            containerSelector: N("container", function () {
                var e = this.get("container");
                if (e) {
                    var t = this.createSelectors([[n(e)]]);
                    return this.mergeSelectors(t)
                }
                return "body"
            }),
            repeatedContainersAndSiblings: N("childElements", "container", function () {
                return f(this.get("childElements"), this.get("container"))
            }),
            repeatedContainers: N.readOnly("repeatedContainersAndSiblings.firstObject"),
            siblings: N.readOnly("repeatedContainersAndSiblings.lastObject"),
            elements: N("container", "repeatedContainers", function () {
                var e = this.get("container"), t = this.get("repeatedContainers");
                return t.length ? t : e ? [e] : []
            }),
            addChild: function (e) {
                this.get("children").addObject(e), e.set("parent", this)
            },
            addChildren: function (e) {
                this.get("children").addObjects(e);
                var t = !0, n = !1, r = void 0;
                try {
                    for (var a, l = e[Symbol.iterator](); !(t = (a = l.next()).done); t = !0) {
                        a.value.set("parent", this)
                    }
                } catch (e) {
                    n = !0, r = e
                } finally {
                    try {
                        !t && l.return && l.return()
                    } finally {
                        if (n) throw r
                    }
                }
            }
        });
    e.default = {
        BaseSelectorGenerator: w,
        AnnotationSelectorGenerator: M,
        ContainerSelectorGenerator: T,
        pathSelector: a,
        uniquePathSelector: l,
        smartSelector: o,
        cssToXpath: i,
        findContainer: h,
        findRepeatedContainers: f
    }
}),define("portia-ui/utils/start-urls", ["exports"], function (e) {
    function t(e) {
        return String.fromCharCode(e.charCodeAt(0) + 1)
    }

    function n(e, t) {
        for (var n = [], r = e; r < t + 1; r += 1) n.push(r.toString());
        return n
    }

    function r(e, n) {
        var r = [];
        for (r.push(e); !r.contains(n);) {
            var a = r.get("lastObject");
            r.pushObject(t(a))
        }
        return r
    }

    function a(e) {
        var t = e.split("-"), n = t.map(function (e) {
            return parseInt(e)
        }), r = p(n, 2), a = r[0], l = r[1];
        return l = Math.min(l, a + h), [a, l]
    }

    function l(e) {
        if (c(e)) {
            var t = a(e), l = p(t, 2);
            return n(l[0], l[1])
        }
        if (i(e)) {
            var o = e.split("-"), s = p(o, 2);
            return r(s[0], s[1])
        }
    }

    function o(e) {
        switch (e.type) {
            case"fixed":
                return [e.value];
            case"list":
                return e.value.split(" ");
            case"range":
                var t = e.value;
                return i(t) || c(t) ? l(t) : [""]
        }
    }

    function i(e) {
        return e.match(b)
    }

    function c(e) {
        return e.match(f)
    }

    function s(e) {
        switch (e.type) {
            case"fixed":
                return e.value;
            case"list":
                return "[...]";
            case"range":
                return "[" + e.value + "]"
        }
    }

    function u(e, t) {
        var n = [];
        return o(t).forEach(function (t) {
            n.push(e.concat(t))
        }), n
    }

    function d(e, t) {
        return e.get("startUrls").mapBy("url").includes(t)
    }

    function m(e) {
        switch (e.type) {
            case"fixed":
                return 1;
            case"list":
                return e.value.split(" ").length;
            case"range":
                var t = e.value, a = t.split("-"), l = p(a, 2), o = l[0], s = l[1];
                return i(t) ? r(o, s).length : c(t) ? n(parseInt(o), parseInt(s)).length : 1
        }
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.allLetters = i, e.allDigits = c, e.fragmentToString = s, e.augmentFragmentList = u, e.includesUrl = d, e.multiplicityFragment = m;
    var p = function () {
        function e(e, t) {
            var n = [], r = !0, a = !1, l = void 0;
            try {
                for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
            } catch (e) {
                a = !0, l = e
            } finally {
                try {
                    !r && i.return && i.return()
                } finally {
                    if (a) throw l
                }
            }
            return n
        }

        return function (t, n) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return e(t, n);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }(), h = 20, f = /^\d+-\d+$/, b = /^[a-zA-Z]+-[a-zA-Z]+$/;
    e.default = {
        allDigits: c,
        allLetters: i,
        augmentFragmentList: u,
        fragmentToString: s,
        includesUrl: d,
        multiplicityFragment: m
    }
}),define("portia-ui/utils/tree-mirror-delegate", ["exports"], function (e) {
    function t(e) {
        var t = e.getContext("2d"), n = document.createElement("canvas");
        n.width = 20, n.height = 20;
        var r = n.getContext("2d");
        r.fillStyle = "#ccc", r.fillRect(0, 0, 10, 10), r.fillRect(10, 10, 10, 10), n = t.createPattern(n, "repeat"), t.fillStyle = n, t.fillRect(0, 0, e.width, e.height), t.font = "16px sans-serif", t.fillStyle = "black", t.fillText("Displaying the content of the canvas is not supported", 10, e.height / 2)
    }

    function n(e) {
        if (e && e.parentNode && !/EMBED|OBJECT/.test(e.parentNode.tagName)) {
            var t = window.getComputedStyle(e), n = e.hasAttribute("width") ? e.getAttribute("width") + "px" : t.width,
                r = e.hasAttribute("height") ? e.getAttribute("height") + "px" : t.height, a = $("<div/>").css({
                    "background-color": "#269",
                    "background-image": "linear-gradient(rgba(255,255,255,.2) 1px, transparent 1px), linear-gradient(90deg, rgba(255,255,255,.2) 1px, transparent 1px)",
                    "background-size": "20px 20px, 20px 20px",
                    "text-align": "center",
                    overflow: "hidden",
                    "font-size": "18px",
                    display: "block",
                    "font-family": "sans-serif",
                    color: "white",
                    "text-shadow": "1px black",
                    width: n,
                    height: r,
                    lineHeight: r
                }).text("Portia doesn't support browser plugins.");
            e.style.display = "none", e.parentNode.insertBefore(a[0], e)
        }
    }

    function r() {
        return {
            cssEnabled: !0, createElement: function (e) {
                var r = null;
                if ("SCRIPT" === e || "META" === e || "BASE" === e) r = document.createElement("NOSCRIPT"); else try {
                    r = document.createElement(e)
                } catch (e) {
                    r = document.createElement("NOSCRIPT")
                }
                return "FORM" === e ? $(r).on("submit", function () {
                    return !1
                }) : "IFRAME" === e || "FRAME" === e ? r.setAttribute("src", "/static/frames-not-supported.html") : "CANVAS" === e ? t(r) : "OBJECT" !== e && "EMBED" !== e || setTimeout(n.bind(null, r), 100), r
            }, setAttribute: function (e, n, r) {
                if (/^on/.test(n) || ("FRAME" === e.tagName || "IFRAME" === e.tagName) && ("src" === n || "srcdoc" === n) || ("OBJECT" === e.tagName || "EMBED" === e.tagName) && ("data" === n || "src" === n)) return !0;
                this.cssEnabled || ("style" === n ? n = "data-portia-hidden-style" : "STYLE" === e.tagName && "media" === n ? n = "data-portia-hidden-media" : "LINK" === e.tagName && ("media" === n && "stylesheet" === e.getAttribute("rel") ? n = "data-portia-hidden-media" : "rel" === n && "stylesheet" === r && e.hasAttribute("media") && (e.setAttribute("data-portia-hidden-media", e.getAttribute("media")), e.removeAttribute("media"))));
                try {
                    e.setAttribute(n, r)
                } catch (e) {
                    console.log(e, n, r)
                }
                return "CANVAS" !== e.tagName || "width" !== n && "height" !== n || t(e), !0
            }
        }
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = r
}),define("portia-ui/utils/types", ["exports"], function (e) {
    function t(e) {
        return {}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()
    }

    function n(e) {
        return "object" === t(e)
    }

    function r(e) {
        return Array.isArray(e)
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.toType = t, e.isObject = n, e.isArray = r
}),define("portia-ui/utils/utils", ["exports"], function (e) {
    function t(e) {
        if ("string" != typeof e) return null;
        e = e.trim(), /^https?:\/\//i.test(e) || (e = "http://" + e);
        try {
            e = new URI(e).normalize()
        } catch (e) {
            return null
        }
        return e.host() ? e.toString() : null
    }

    function n() {
        return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
    }

    function r() {
        return n() + n() + "-" + n() + "-" + n() + "-" + n() + "-" + n() + n() + n()
    }

    function a() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "-";
        return n() + e + n() + e + n()
    }

    function l(e) {
        return {}.toString.call(e).match(/\s([a-zA-Z]+)/)[1].toLowerCase()
    }

    function o(e, t) {
        Ember.Logger.log(e), window.Raven && Raven.captureMessage(e, t)
    }

    function i(e, t) {
        Ember.Logger.error(e), window.Raven && Raven.captureException(e, t)
    }

    function c(e, t, n) {
        return n === t ? e : e.each(function () {
            this.hasAttribute(t) ? (this.setAttribute(n, this.getAttribute(t)), this.removeAttribute(t)) : this.hasAttribute(n) && this.removeAttribute(n)
        })
    }

    function s(e) {
        var t = [];
        return e.forEach(function (e) {
            e.forEach(function (e) {
                t.push(e)
            })
        }), t
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.cleanUrl = t, e.guid = r, e.shortGuid = a, e.toType = l, e.captureMessage = o, e.logError = i, e.renameAttr = c, e.flatten = s
}),define("portia-ui/validations/fixed-fragment", ["exports", "ember-changeset-validations/validators", "portia-ui/validators/whitespace"], function (e, t, n) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = {
        value: [(0, t.validatePresence)({
            presence: !0,
            message: "Should not be empty."
        }), (0, n.default)()]
    }
}),define("portia-ui/validations/list-fragment", ["exports", "ember-changeset-validations/validators"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = {value: (0, t.validatePresence)(!0)}
}),define("portia-ui/validations/range-fragment", ["exports", "portia-ui/validators/range"], function (e, t) {
    Object.defineProperty(e, "__esModule", {value: !0}), e.default = {value: (0, t.default)()}
}),define("portia-ui/validators/range", ["exports", "portia-ui/utils/start-urls"], function (e, t) {
    function n(e) {
        return e.match(/[a-z]/) && e.match(/[A-Z]/)
    }

    function r(e) {
        return e.split("-").every(function (e) {
            return 1 === e.length
        })
    }

    function a(e) {
        return e.split("-").contains("")
    }

    function l(e, t) {
        var n = e.split("-"), r = i(n, 2), a = r[0], l = r[1],
            o = "A range must be increasing. Try swapping to " + l + "-" + a + ".";
        return t(a, l) || o
    }

    function o() {
        return function (e, o) {
            return a(o) ? "A range must have both a start and an end." : (0, t.allDigits)(o) ? l(o, function (e, t) {
                return parseInt(e) <= parseInt(t)
            }) : (0, t.allLetters)(o) ? r(o) ? n(o) ? "A range cannot mix lower and upper case." : l(o, function (e, t) {
                return e <= t
            }) : "A range must have only single letters." : "A range must not mix numbers and letters."
        }
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = o;
    var i = function () {
        function e(e, t) {
            var n = [], r = !0, a = !1, l = void 0;
            try {
                for (var o, i = e[Symbol.iterator](); !(r = (o = i.next()).done) && (n.push(o.value), !t || n.length !== t); r = !0) ;
            } catch (e) {
                a = !0, l = e
            } finally {
                try {
                    !r && i.return && i.return()
                } finally {
                    if (a) throw l
                }
            }
            return n
        }

        return function (t, n) {
            if (Array.isArray(t)) return t;
            if (Symbol.iterator in Object(t)) return e(t, n);
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
    }()
}),define("portia-ui/validators/whitespace", ["exports"], function (e) {
    function t() {
        return function (e, t) {
            return !t.match(/\s/g) || "Should not have whitespace"
        }
    }

    Object.defineProperty(e, "__esModule", {value: !0}), e.default = t
}),define("portia-ui/config/environment", ["ember"], function (e) {
    try {
        var t = "portia-ui/config/environment", n = e.default.$('meta[name="' + t + '"]').attr("content");
        return {default: JSON.parse(unescape(n))}
    } catch (e) {
        throw new Error('Could not read config from meta tag with name "' + t + '".')
    }
}),runningTests || require("portia-ui/app").default.create({
    allow_nesting: !0,
    name: "portia-ui",
    version: "2.0.0-alpha+606467d2"
});
